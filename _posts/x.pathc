commit f78bbfc15175cce8a2f58984c15f811f46fc7363
Author: Kristian KÃ¶hntopp <kristian.koehntopp@booking.com>
Date:   Wed Aug 18 10:55:11 2021 +0200

    fix 2021-08-18-epochalypse.md

diff --git a/_posts/2021-08-18-epochalypse.md b/_posts/2021-08-18-epochalypse.md
index a9580a3..498b726 100755
--- a/_posts/2021-08-18-epochalypse.md
+++ b/_posts/2021-08-18-epochalypse.md
@@ -6,10 +6,10 @@ feature-img: assets/img/background/rijksmuseum.jpg
 date: 2021-05-25 14:41:50 +0200
 tags:
 - lang_en
--- computer
+- computer
 ---
 
-I had reason to look into the UNIX Eschaton, the time when the signed 32 bit counter of seconds since Midnight, 1970-01-01 UTC overflows. Going [to Wikipedia](https://en.wikipedia.org/wiki/Unix_time#Notable_events_in_Unix_time), I learned we will die a lot earlier, because in 2036-02-07, 06:28:16 UTC NTP will kill us all:
+I had reason to look into the UNIX Eschaton, the time when the signed 32 bit counter of seconds since Midnight, 1970-01-01 UTC overflows. Going [to Wikipedia](https://en.wikipedia.org/wiki/Unix_time#Notable_events_in_Unix_time), I learned we will die two years earlier, because in 2036-02-07, 06:28:16 UTC NTP will kill us all:
 
 > At 06:28:16 UTC on Thursday, 7 February 2036, Network Time Protocol will loop over to the next epoch, as the 32-bit time stamp value used in NTP (unsigned, but based on 1 January 1900) will overflow. This date is close to the following date because the 136-year range of a 32-bit integer number of seconds is close to twice the 70-year offset between the two epochs.
 
@@ -19,9 +19,9 @@ Still, I wanted to know the state of things. [Linuxreviews](https://linuxreviews
 
 # Filesystems
 
-Extending a persistent data structure is hard, and often cannot be done in-place. In many filesystems, the inode is a tight fit and extending timestamp will make you go from 64 byte to 128 byte inode structures.
+Extending a persistent data structure is hard, and often cannot be done in-place. In many filesystems, the inode is a tight fit and extending timestamp will double the size of an inode, going up from one power of two to the next higher power of two.
 
-The ext4 filesystem [inode structure](https://ext4.wiki.kernel.org/index.php/Ext4_Disk_Layout#Inode_Table) stored [64 bit timestamps](https://ext4.wiki.kernel.org/index.php/Ext4_Disk_Layout#Inode_Timestamps) these days, but the conversion cannot be done in-place. Since Linux 5.4 you get a warning:
+The ext4 filesystem [inode structure](https://ext4.wiki.kernel.org/index.php/Ext4_Disk_Layout#Inode_Table) stores [64 bit timestamps](https://ext4.wiki.kernel.org/index.php/Ext4_Disk_Layout#Inode_Timestamps) these days, but the conversion cannot be done in-place. Since Linux 5.4 you get a warning:
 
 > ext4 filesystem being mounted at (mountpoint) supports timestamps until 2038
 
