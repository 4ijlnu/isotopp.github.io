<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/</link>
    <description>Recent content on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Apr 2022 17:55:12 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL Engineering Guidelines</title>
      <link>https://blog.koehntopp.info/2022/04/15/sql-engineering-guidelines.html</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/04/15/sql-engineering-guidelines.html</guid>
      <description>&lt;p&gt;Where I work, the native database is MySQL.
This is what the database team fully supports.&lt;/p&gt;
&lt;p&gt;Other databases, notably Postgres, are in use mostly because external products we run require them.
Internal project should use MySQL.
An external company provides limited support for running Postgres.&lt;/p&gt;
&lt;p&gt;The recommended version of MySQL to be used is currently the latest 8.0.
It has a large number of improvements over the previous version 5.7 in terms of the SQL subset supported, handling of sorts, critical character set support and join strategies.
Versions of MySQL older than 5.7 are completely unsupported and contain unfixed critical CVEs.
They must never be used.&lt;/p&gt;
&lt;p&gt;Note that &amp;lsquo;fully supports&amp;rsquo; does also include operational aspects of the database:
Automated handling of grants, automated fail-over, replication tree management, capacity planning, restore testing of automated backups, and integration with compliance tickets.
Using other SQL products is likely to leave a team with a lot of toil that is taken away by automation had you been choosing MySQL.&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;
    &lt;a href=&#34;#overview&#34;&gt;
	Overview
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We are using a &amp;lsquo;safe subset&amp;rsquo; of MySQL (&amp;ldquo;Blue MySQL&amp;rdquo;) and not all features of the product.
That said, we are an enterprise with several hundred use-cases.
For each of these rules a counterexample project likely exists.&lt;/p&gt;
&lt;p&gt;The &amp;lsquo;safe subset&amp;rsquo; of MySQL mostly means: We do not store code in the database.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We do not use views.&lt;/li&gt;
&lt;li&gt;We do not use stored procedures or stored functions.&lt;/li&gt;
&lt;li&gt;We do not use triggers.&lt;/li&gt;
&lt;li&gt;We do not use UDFs (&amp;ldquo;user defined functions&amp;rdquo;, &lt;code&gt;.so&lt;/code&gt; files that are loaded into the server proper and can be called as SQL-functions)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We do not run code in the database, because it makes applications very hard to update atomically in a rollout.
It also makes it hard to see all code that is part of the application in a developers&amp;rsquo; editor, because some of it is in git, and other code is part of the schema.
Finally, code in the database creates some kind of spooky action at a distance that creates lots of debugging problems.&lt;/p&gt;
&lt;p&gt;Specifically for MySQL, the MySQL stored procedure language is as beautiful as COBOL, as efficient as PHP 3, and as debuggable as embedded Lua.
Do not use it.&lt;/p&gt;
&lt;h2 id=&#34;general&#34;&gt;
    &lt;a href=&#34;#general&#34;&gt;
	General
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;SQL systems are stateful systems, so your application can be stateless.
That means there is state in a lot of unexpected places in SQL, and you have to be aware of it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2020/07/28/mysql-connection-scoped-state.html&#34;&gt;Connection Scoped State&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;COMMIT can fail, and you must be able to retry&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Databases store data for a long time.
Often longer than the code that created the data lives.
For example, there are databases in production that have an uninterrupted change history of more than 20 years.
The data started out in Postgres, was converted and migrated to MySQL 4.0 and then lived through a change of versions up to MySQL 8.0.&lt;/p&gt;
&lt;p&gt;Database administrators operate with this in mind, and use a lot of defensive operational procedures.
Get their input and their help when planning changes.&lt;/p&gt;
&lt;p&gt;All data has a full data lifecycle: It is being created, ingested, stored, changed and updated and ultimately exported to different systems and/or deleted.
Plan the full data lifecycle, and pay special attention to tables that have time as a component of the primary key or the table name, or otherwise exhibit log nature.
Every transactional database has a data warehouse inside, and it struggles to get out. Given the same number of customers, articles and transactions each day, will your database grow without bounds and which structures cause that?&lt;/p&gt;
&lt;p&gt;Database administrators will help you to complete the data lifecycle.&lt;/p&gt;
&lt;h2 id=&#34;absolute-limits&#34;&gt;
    &lt;a href=&#34;#absolute-limits&#34;&gt;
	Absolute Limits
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;MySQL has a number of limits that are part of the codebase.&lt;/strong&gt;
Specifically, &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/innodb-limits.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;InnoDB limits&lt;/a&gt;

 are documented in the manual.
It is useful to be familiar with at least the information on indexing.&lt;/p&gt;
&lt;p&gt;On top of that there are other limits that will affect you, based on physics, operations and available hardware.&lt;/p&gt;
&lt;h3 id=&#34;size&#34;&gt;
    &lt;a href=&#34;#size&#34;&gt;
	Size
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Are you running out of disk space? Know what to monitor, and how to handle the situation and &lt;a href=&#34;https://blog.koehntopp.info/2022/02/16/databases-how-large-is-too-large.html&#34;&gt;absolute size limits&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Deleting data costs disk space.&lt;/strong&gt;
MySQL is running in a replication hierarchy, and in order to replicate MySQL stores a pre- and post-change image of each changed row in the binlog.
This is kept for up to seven days to allow lagging replicas to catch up.
For deletion, the pre-deletion image of the row is sent to the binlog, in order to allow the replica to find the row to delete it. This consumes disk space, which will be reclaimed only after seven days.&lt;/p&gt;
&lt;p&gt;A DBA can help you here to reclaim space early.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Size is Time, and Time is Size.&lt;/strong&gt;
Assuming 400 MB/s copy speed, copying one terabyte of data takes around 45 minutes.
Adding 15 minutes of replication catchup, you can expect around 1 hour of creation time per terabyte of database size.&lt;/p&gt;
&lt;p&gt;Databases of around 200-250 GB size have a creation time of around 10-15 minutes per instance.
That is sufficient even for databases in Kubernetes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The DBA Standard SLO supports databases are &amp;lt;2 TB in size&lt;/strong&gt;, and fit onto a 1.92 TB sized standard NVME drive, including binlog and overhead.
They take around 2h to create from a donor instance.&lt;/p&gt;
&lt;p&gt;Databases larger than that require special storage (external persistent volumes), which will have worse latency and cost more.
It will not be able immediately, and moving existing databases (which are already large) to different storage will take time in accordance with their size. Plan ahead, and plan with a DBA to make this a smooth transition.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The instance size limit is approximately 10 TB.&lt;/strong&gt; Instances larger than 10 TB will have a creation time so large that operations will have at most one attempt per day to do anything with the instances.
This produces unsustainable toil for DBA, and drag on your project.&lt;/p&gt;
&lt;p&gt;That is, some time &lt;strong&gt;before hitting the 10 TB barrier your project will have to have an exit plan in place&lt;/strong&gt; to avoid hitting this limit.&lt;/p&gt;
&lt;p&gt;The plan can be&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use Cassandra or another sharded NoSQL storage.&lt;/li&gt;
&lt;li&gt;use shards in MySQL, doing application level sharding.&lt;/li&gt;
&lt;li&gt;consider a supported distributed database.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It will involve in all cases moving to a distributed setup that more or less transparently shards.
It will also involve moving to a setup where &lt;code&gt;JOIN&lt;/code&gt; will be much more costly because of the distributed nature of the database.&lt;/p&gt;
&lt;p&gt;We do currently have larger databases than 10 TB.
Contact their owners to understand the nature of their toil problems and why your setup wants to avoid this.&lt;/p&gt;
&lt;h3 id=&#34;latency&#34;&gt;
    &lt;a href=&#34;#latency&#34;&gt;
	Latency
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Write your SQL and your applications SQL execution model with milliseconds of query execution time in mind, even for reads.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Currently, we have on-prem databases with a memory saturated setup, and they expose query latencies for single primary key lookups in memory of 0.15ms.
This will not hold in the cloud, in virtual environments, and also not in setups that put ProxySQL in-between.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Count the number of queries run to render a page using the available Event Instrumentation.&lt;/strong&gt;
Will the page render properly with 1-4 milliseconds of query execution time for each query?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Keep read-replicas of your data close to the application.&lt;/strong&gt; Crossing the boundaries between AZs will add another 4-10ms, or more, to each query. If your application is running on-premises, but your database is in the cloud, this is likely much slower than setting up local replicas and extending the replication hierarchy into the local AZ.&lt;/p&gt;
&lt;p&gt;Using certain database ORMs, it can be easy to accidentally create SQL being executed in a loop.
For each object accessed in a loop, the ORM secretly fires a single primary key lookup in the background to fleshen then object lazily when it is accessed for the first time.
This is called machine-gunning.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Avoid machine-gunning&lt;/strong&gt;, primary key lookups in a loop. Consider using a &lt;code&gt;SELECT ... FROM table WHERE id IN ( ... around 1000 constants ... )&lt;/code&gt; clause.
If this is driven by another select, consider using a &lt;code&gt;JOIN&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;statement-size&#34;&gt;
    &lt;a href=&#34;#statement-size&#34;&gt;
	Statement size
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Objects and statements are limited to &lt;code&gt;max_allowed_packet&lt;/code&gt;, currently 16 MB in size.
Additionally, certain &lt;code&gt;WHERE id IN (...)&lt;/code&gt; clauses begin to show degraded performance and excessive memory use for a large number of ids in MySQL 8.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Aim for around 1000 values in such clauses.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stay below 16 MB statement size.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;For bulk writes, keep the transaction size to a reasonable 1000 to 10000 rows per commit.&lt;/strong&gt;
Group replication will be unhappy if you don&amp;rsquo;t.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;many-tables-join&#34;&gt;
    &lt;a href=&#34;#many-tables-join&#34;&gt;
	Many-tables &lt;code&gt;JOIN&lt;/code&gt;
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Avoid &lt;code&gt;JOIN&lt;/code&gt;-ing more than 10 tables at once.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If the optimizer were to brute-force all possible &lt;code&gt;JOIN&lt;/code&gt; combinations on an &lt;code&gt;n&lt;/code&gt;-way table &lt;code&gt;JOIN&lt;/code&gt;, the number of combinations would be &lt;code&gt;n!&lt;/code&gt; (n-th faculty).
This becomes an unwieldy number at a value of &lt;code&gt;n=10&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The optimizer will have to apply heuristics around a join-plan depth of 10, and do weird things, including sometimes missing obvious optimizations.&lt;/p&gt;
&lt;p&gt;This is usually not a problem, but if you are using an ORM and have deep class hierarchies, you may be hitting this limits inadvertently.
Be aware of your class-subclass relationships and how they are modelled, and what SQL is being generated.&lt;/p&gt;
&lt;h3 id=&#34;bulk-updates-large-deletes-inserts-updates&#34;&gt;
    &lt;a href=&#34;#bulk-updates-large-deletes-inserts-updates&#34;&gt;
	Bulk updates (large deletes, inserts, updates)
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Very large atomic transactions are being executed on the primary, and on commit, enter the binlog. They then go downstream and execute on the replicas of than level, and so on.&lt;/p&gt;
&lt;p&gt;That means a large change such as &lt;code&gt;DELETE FROM sales WHERE article_id = 17&lt;/code&gt; has the potential to make changes to very many rows. The update can take noticeable time, or depending on the data, even run for minutes or hours. The change can stall replicas, induce replication delay or otherwise impact production.&lt;/p&gt;
&lt;p&gt;In all our supported languages packages, we have replication aware bulk update functions to handle this:
They will break up such large changes into manageable chunks, and execute them while monitoring replication lag.
Be sure to make good use of them, they exist for a reason.&lt;/p&gt;
&lt;h2 id=&#34;data-types-and-column-definitions&#34;&gt;
    &lt;a href=&#34;#data-types-and-column-definitions&#34;&gt;
	Data types and column definitions
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;MySQL supports a wide range of data types.
They are documented &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/data-types.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;in the manual&lt;/a&gt;

.
Each data type comes with a range and a storage size.
It is useful to know properties of the most common types.&lt;/p&gt;
&lt;p&gt;When choosing data types, think big (&amp;ldquo;assume 10x growth&amp;rdquo;).
Data types can be changed ex-post, but require an &lt;code&gt;ALTER TABLE&lt;/code&gt; command or an online schema change to be run.
This usually involves a background copy of all data of that table, and can take a lot of time for large tables.&lt;/p&gt;
&lt;p&gt;Additional information about commonly needed data types can be found in your projects coding guidelines.&lt;/p&gt;
&lt;p&gt;The following rules have been proven to be useful guidance in the past:&lt;/p&gt;
&lt;h3 id=&#34;names&#34;&gt;
    &lt;a href=&#34;#names&#34;&gt;
	Names
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Names are snake_case.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Do not use uppercase table names or column names.
We have done that in the past, and there are tables with upper case characters in names.
Don&amp;rsquo;t.&lt;/li&gt;
&lt;li&gt;Depending on the version of MySQL and the filesystem in use, table names are case-sensitive or not, because they end up being file names on a case-sensitive file system or not.
Specifically, in production, on Linux, for older versions of MySQL table names are case-sensitive, so &lt;code&gt;Sales&lt;/code&gt; and &lt;code&gt;sales&lt;/code&gt; are different tables.
On Mac and Windows, with case-insensitive filesystems, they will be the same table.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Be consistent with column names.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Do not use MySQL keywords or reserved words as column names.&lt;/strong&gt;*
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/keywords.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MySQL 8 list of reserved words&lt;/a&gt;

 lists keywords, reserved words, new keywords and reserved words - none of them should be used.&lt;/li&gt;
&lt;li&gt;If you must, quoting table and column names (&lt;code&gt;`table_name`&lt;/code&gt;.&lt;code&gt;`column_name`&lt;/code&gt;) avoids reserved word problems completely.&lt;/li&gt;
&lt;li&gt;Theoretically, using backticks it is possible to have column names and table names that contain spaces, or even emoji.
Don&amp;rsquo;t even think about that, much less try it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;normalization&#34;&gt;
    &lt;a href=&#34;#normalization&#34;&gt;
	Normalization
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Understand database normal forms and aim for a relaxed third normal form.&lt;/strong&gt;
Try to &lt;a href=&#34;https://blog.koehntopp.info/2005/09/11/nermalisation.html&#34;&gt;normalize&lt;/a&gt;

 properly until you run into weirdness.
Only denormalize when you actually experience performance problems.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keys&#34;&gt;
    &lt;a href=&#34;#keys&#34;&gt;
	Keys
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Every table must have a primary key.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In MySQL the primary key also defines the physical order of the data on disk:
Rows with similar primary key values will usually be stored physically closer together than rows with more dissimilar primary key values.
MySQL contains a large number of optimizations to exploit this and make this fast.&lt;/li&gt;
&lt;li&gt;Not having a primary key breaks group replication and row based replication.
We are using these features, so primary keys are mandatory.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Primary keys are short:&lt;/strong&gt; &lt;code&gt;integer&lt;/code&gt; (4 byte), &lt;code&gt;bigint&lt;/code&gt; (8 byte), &lt;code&gt;VARBINARY(16)&lt;/code&gt; (the output of &lt;code&gt;UUID_TO_BIN()&lt;/code&gt;, 16 byte).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL uses primary keys as row addresses in all secondary keys. The longer the primary key, the more expensive the secondary key.&lt;/li&gt;
&lt;li&gt;That means &lt;code&gt;INDEX(a)&lt;/code&gt; will actually store &lt;code&gt;INDEX(a,id)&lt;/code&gt; (with &lt;code&gt;id&lt;/code&gt; being the primary key) as a secondary index, and the optimizer knows that, and can use this.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Primary keys determine physical data ordering.&lt;/strong&gt;
Using the default InnoDB storage engine, the data itself is organized in a B+-tree in the primary key.
That is, the primary key holds the actual data rows in the leaf-nodes of the primary key.
That implies the data is physically arranged in primary key order.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is why mutating a primary key is so expensive.&lt;/li&gt;
&lt;li&gt;This can be exploited to keep hot rows close together and reduce the working set size of the database.
InnoDB prefers hot rows to be close together, and has special-case code to make this work.&lt;/li&gt;
&lt;li&gt;This resonates nicely with &lt;code&gt;auto_increment&lt;/code&gt;: Using this, more recently inserted rows will be more on the &amp;ldquo;right-hand side&amp;rdquo; of the table, and older rows will be more on the &amp;ldquo;left-hand&amp;rdquo; side. Often data hotness coincides with row age, so using &lt;code&gt;auto_increment&lt;/code&gt; the database will automatically exploit this for smaller memory footprint.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Primary keys are immutable.&lt;/strong&gt;
Changing a primary key physically moves the record around in the data tree that makes up a table.
This is an extremely expensive operation.
Never change a primary key value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Primary key values are not re-usable.&lt;/strong&gt;
When deleting a record, the primary key that once identified that record can never be re-used.
It may be still referenced by things outside the database, such as URLs with the &lt;code&gt;id&lt;/code&gt; as a parameter.
Re-using the primary would potentially link an external thing to a completely unrelated &lt;code&gt;id&lt;/code&gt; value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;To use a UUID as a primary key, define the column as &lt;code&gt;VARBINARY(16)&lt;/code&gt; and use the &lt;code&gt;UUID_TO_BIN()&lt;/code&gt; function with swap flag set to true.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html#function_uuid-to-bin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UUID_TO_BIN(string_uuid, 1)&lt;/a&gt;

: &amp;ldquo;If swap_flag is 1, the format of the return value differs: The time-low and time-high parts (the first and third groups of hexadecimal digits, respectively) are swapped. This moves the more rapidly varying part to the right and can improve indexing efficiency if the result is stored in an indexed column.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;From MySQL&amp;rsquo;s point of view, &lt;code&gt;AUTO_INCREMENT&lt;/code&gt; integer primary keys work better than UUID, but a lot of software prefers UUID.
&lt;ul&gt;
&lt;li&gt;UUIDs can have advantages for high insert rates, because they can be created independently in different clients in parallel.&lt;/li&gt;
&lt;li&gt;MySQL stores data physically in primary key order, but the way UUIDs order is not advantageous to that.
MySQL provides the &lt;code&gt;UUID_TO_BIN(string_uuid, 1)&lt;/code&gt; function to fix this.
Consider using it, it unlocks many performance advantages. &lt;a href=&#34;https://blog.koehntopp.info/2021/04/06/mysql-and-uuids.html&#34;&gt;UUID discussion&lt;/a&gt;

, &lt;a href=&#34;https://blog.koehntopp.info/2020/09/22/alter-table-for-uuid.html&#34;&gt;Another UUID discussion&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;The datatype produced by &lt;code&gt;UUID_TO_BIN()&lt;/code&gt; is a &lt;code&gt;VARBINARY(16)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;When using &lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;bigint&lt;/code&gt; primary keys, consider making it &lt;code&gt;unsigned&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It will double the key range.&lt;/li&gt;
&lt;li&gt;If your primary programming language cannot handle &lt;code&gt;unsigned&lt;/code&gt; values, it is okay to use &lt;code&gt;signed&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Remember that Javascript has a 53-bit problem.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;In your table definition, keep the primary key to the left.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is purely cosmetic, but it will make the life easier for reviewers of your code.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;null-values-and-nullable-columns&#34;&gt;
    &lt;a href=&#34;#null-values-and-nullable-columns&#34;&gt;
	NULL values and nullable columns
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Define columns as &lt;code&gt;NOT NULL&lt;/code&gt;.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;If a column is nullable, the NULL value must have exactly one meaning, and it must be documented (e.g. in a COMMENT clause in the CREATE TABLE statement).
More on &lt;a href=&#34;https://blog.koehntopp.info/2020/08/25/null-is-null.html&#34;&gt;NULL values&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;If you are using &lt;code&gt;LEFT JOIN&lt;/code&gt; or access columns that can be nullable, consider the SQL functions &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#function_coalesce&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;COALESCE()&lt;/code&gt;&lt;/a&gt;

, &lt;code&gt;IFNULL()&lt;/code&gt; and the comparison operator &lt;code&gt;IS NULL&lt;/code&gt;.
NULL values do not compare normally, so wrap nullables into one of these functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;default-values&#34;&gt;
    &lt;a href=&#34;#default-values&#34;&gt;
	Default values
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;avoid &lt;code&gt;DEFAULT&lt;/code&gt; values&lt;/strong&gt;, except for natural &amp;ldquo;zero&amp;rdquo; values appropriate for the type.&lt;/li&gt;
&lt;li&gt;for &lt;code&gt;DEFAULT&lt;/code&gt; date and time values, &lt;strong&gt;see the section on date and time values&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;boolean&#34;&gt;
    &lt;a href=&#34;#boolean&#34;&gt;
	Boolean
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Use &lt;code&gt;TINYINT&lt;/code&gt; to store booleans.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;MySQL does not have a native boolean type, so we use &lt;code&gt;TINYINT&lt;/code&gt;.
It uses one byte.&lt;/li&gt;
&lt;li&gt;Clever hacks exist to exploit nullability (&lt;code&gt;CHAR(0) NULL&lt;/code&gt; columns) or bitfields to store data more densely.
These usually backfire later in the software development lifecycle.
Avoid them.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;integers&#34;&gt;
    &lt;a href=&#34;#integers&#34;&gt;
	Integers
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Always use &lt;code&gt;integer&lt;/code&gt; and &lt;code&gt;bigint&lt;/code&gt;.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;MySQL offers several integer data types smaller than the 4-byte &lt;code&gt;integer&lt;/code&gt; and the 8-byte &lt;code&gt;bigint&lt;/code&gt;.
They have been used in the past, and usually later created an upgrade problem when the data range was exhausted in company growth.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Do not use display widths with integers.&lt;/strong&gt; Use &lt;code&gt;int&lt;/code&gt;, not &lt;code&gt;int(11)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fractional-numbers-and-monetary-values&#34;&gt;
    &lt;a href=&#34;#fractional-numbers-and-monetary-values&#34;&gt;
	Fractional numbers and monetary values
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Always choose &lt;code&gt;double&lt;/code&gt;. Never use &lt;code&gt;float&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is a 32 bit floating point number, and the range and precision is usually too small to be useful.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the past some projects have stored pricing information as &lt;code&gt;double&lt;/code&gt;.
This comes with its own set of problems.
Consider using an appropriately sized &lt;code&gt;DECIMAL(16,4)&lt;/code&gt; variant, but be aware what the systems you depend on and the systems depending on you use.
Compatibility may be better than correctness.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For euro-values, use a column name suffix &amp;ldquo;_eur&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;char-varchar-and-the-various-text-types&#34;&gt;
    &lt;a href=&#34;#char-varchar-and-the-various-text-types&#34;&gt;
	CHAR, VARCHAR and the various TEXT types
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Avoid &lt;code&gt;CHAR&lt;/code&gt;, prefer &lt;code&gt;VARCHAR&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In very old versions of MySQL the &lt;code&gt;CHAR&lt;/code&gt; type had certain speed advantages.
None of these are true any more for modern MySQL using InnoDB.
Do not use fixed width character types anymore.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Consider row width, and slightly prefer &lt;code&gt;VARCHAR&lt;/code&gt; over &lt;code&gt;TEXT&lt;/code&gt; types.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VARCHAR&lt;/code&gt; are stored inline and contribute to row width, &lt;code&gt;TEXT&lt;/code&gt; types are stored like BLOBs and are stored in a complicated way that can have a lot of overhead.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;VARCHAR&lt;/code&gt; for string-like texts.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;TEXT&lt;/code&gt; where you actually store small &amp;lsquo;files&amp;rsquo; in the database.
If you do that, see below the notes on &lt;code&gt;BLOB&lt;/code&gt; data.
They also apply here.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Use the default &lt;code&gt;utf8mb4&lt;/code&gt; charset, it is the utf-8 you want.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VARCHAR&lt;/code&gt; and the various &lt;code&gt;TEXT&lt;/code&gt; fields have a character set associated to them.
Always use &lt;code&gt;utf8mb4&lt;/code&gt; as the character set (it should be the default, but check).
Read up on &lt;a href=&#34;https://blog.koehntopp.info/2022/01/12/utf8mb4.html&#34;&gt;Why utf8mb4?&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Avoid &lt;code&gt;ENUM&lt;/code&gt;, use lookup tables.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL offers an &lt;code&gt;ENUM&lt;/code&gt; data type, and we have used this a lot in the past.
We found that removing values from an &lt;code&gt;ENUM&lt;/code&gt; is a very costly table change.
We recommend you use a lookup table.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2020/09/18/mysql-encoding-fields-for-great-profit.html&#34;&gt;Encoding columns for great profit&lt;/a&gt;

 explains how converting string columns with low cardinality can pay off in shrinking the data size.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;blobs-and-files-in-the-database&#34;&gt;
    &lt;a href=&#34;#blobs-and-files-in-the-database&#34;&gt;
	BLOBs and files in the database
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Databases are not good file systems.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When reading values from disk, they pass on through the file system, the database server, are being converted into the column field data type the server uses internally, pushed again into the kernel into the network layer and then finally sent.
This involves making around three copies of the data, whereas using &lt;code&gt;sendfile()&lt;/code&gt; or &lt;code&gt;splice()&lt;/code&gt; to send a static file from the filesystem is zero copy.
Consider not using the database to store files.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;max_allowed_packet is an absolute limit.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All data MySQL handles must be smaller than the config value &lt;code&gt;max_allowed_packet&lt;/code&gt;, even if the field size allows for more.
In our systems that limit is 16 MB.&lt;/li&gt;
&lt;li&gt;There are ways around that, using string manipulation of very large strings.
This eats an insane amount of memory.
If you find yourself going down that route, stop and reconsider your design or life choices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;In MySQL 8, handling &lt;code&gt;TEXT&lt;/code&gt; and &lt;code&gt;BLOB&lt;/code&gt; is less costly, but still worthwhile checking.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the past, any result set that contained &lt;code&gt;TEXT&lt;/code&gt; or &lt;code&gt;BLOB&lt;/code&gt; types, no matter how small, forced sort operations to spill to disk, making them slow.
This is no longer the case for the most recent versions of MySQL 8, but it is still useful in many cases to consider a two-step approach:
&lt;ul&gt;
&lt;li&gt;Step 1: Run a query to select the primary key values you need in the order you need them.&lt;/li&gt;
&lt;li&gt;Step 2: Run a second query of the form &lt;code&gt;SELECT id, blobcolumn FROM table WHERE id IN (...)&lt;/code&gt;, with the &lt;code&gt;...&lt;/code&gt; containing a list of up to 1000 literal id values as constants to fetch the blob data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Using &lt;code&gt;BLOB&lt;/code&gt; and &lt;code&gt;TEXT&lt;/code&gt; fields larger than 1 MB can saturate the network using replication and uses a lot of disk space.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL is using row-based replication, and for each row changed will store a pre-image and post-image of the row on disk, for replication.
This is kept for up to seven days, to enable lagging replicas to catch up.&lt;/li&gt;
&lt;li&gt;Each replica is then downloading this information, so for each changed 1MB field, 2 MB are copied to each instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;date-and-time-values&#34;&gt;
    &lt;a href=&#34;#date-and-time-values&#34;&gt;
	DATE and TIME values
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Be aware of MySQLs awful date and time history.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;The date and time types in MySQL have an awful history because of a number of very bad design decisions in the past.
Most of that is cleaned up by now, but we still see legacy problems in some places because of old data or old code.
What are the reasons for the bad things:
&lt;ul&gt;
&lt;li&gt;MySQL allowed partial dates, &amp;lsquo;2022-01-00&amp;rsquo; for &amp;ldquo;I do not know the day&amp;rdquo;, or &amp;lsquo;2022-00-00&amp;rsquo; for &amp;ldquo;I have no idea about month and day&amp;rdquo;.
They are no longer allowed (&lt;code&gt;NO_ZERO_IN_DATE&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;MySQL allowed zero dates (&amp;lsquo;0000-00-00&amp;rsquo;), and conflated them with the &lt;code&gt;NULL&lt;/code&gt; value.
This is no longer allowed (&lt;code&gt;NO_ZERO_DATES&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;MySQL had a magic type &lt;code&gt;TIMESTAMP&lt;/code&gt; that in a magic position behaved magically.
Specifically, the leftmost &lt;code&gt;TIMESTAMP&lt;/code&gt; column was automatically set to &lt;code&gt;NOW()&lt;/code&gt; when it was not explicitly set to a value, but other columns of a row were changed.
This was used to implement &lt;code&gt;changed_at&lt;/code&gt; columns.
Today, you can apply this to any &lt;code&gt;DATETIME&lt;/code&gt; or &lt;code&gt;TIMESTAMP&lt;/code&gt; in any position, using an explicit &lt;code&gt;ON UPDATE CURRENT_TIMESTAMP&lt;/code&gt; clause.
There are lots of special rules and exceptions that document past behavior and an attempt at compatibility and migration. &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/timestamp-initialization.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The manual on the state of things&lt;/a&gt;

.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MySQL &lt;code&gt;DATE&lt;/code&gt;, &lt;code&gt;TIME&lt;/code&gt; and &lt;code&gt;DATETIME&lt;/code&gt; types do not deal with timezones.&lt;code&gt;TIMESTAMP&lt;/code&gt; does.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;But only if the timezone tables in the mysql.* schema are initialized.&lt;/li&gt;
&lt;li&gt;The current timezone you are in is defined as a default for the server, and can be overridden as a connection property.
It is likely not a good idea to do that.&lt;/li&gt;
&lt;li&gt;You can shoot yourself in the foot with timezones, DST boundaries and interval arithmetic. &lt;a href=&#34;https://blog.koehntopp.info/2021/04/02/making-an-unexpected-leap-with-interval-syntax.html&#34;&gt;How that happens&lt;/a&gt;

.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prefer &lt;code&gt;DATETIME&lt;/code&gt;, not &lt;code&gt;TIMESTAMP&lt;/code&gt;, unless it&amp;rsquo;s &lt;code&gt;changed_at&lt;/code&gt;.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;The range of &lt;code&gt;TIMESTAMP&lt;/code&gt; is limited and has a year 2038 problem.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATETIME, TIME and TIMESTAMP can have microsecond resolution if desired.&lt;/strong&gt; In MySQL, &lt;code&gt;DATETIME&lt;/code&gt;, &lt;code&gt;TIME&lt;/code&gt;, &lt;code&gt;TIMESTAMP&lt;/code&gt; can have fractional resolutions up to microsecond resolution. To get that, specify a precision such as &lt;code&gt;DATETIME(6)&lt;/code&gt;, &lt;code&gt;TIME(6)&lt;/code&gt; or &lt;code&gt;TIMESTAMP(6)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use minimum and maximum values as boundaries in time ranges.&lt;/strong&gt; If you define time ranges, use field names such as &lt;code&gt;valid_from&lt;/code&gt; and &lt;code&gt;valid_until&lt;/code&gt;. If you are using &lt;code&gt;DATETIME&lt;/code&gt; types for that, use &lt;code&gt;1000-01-01 00:00:00&lt;/code&gt; for &amp;ldquo;minus infinity&amp;rdquo; and &lt;code&gt;9999-12-31 23:59:59&lt;/code&gt; for &amp;ldquo;plus infinity&amp;rdquo;, as these are the minimum and maximum values for this type. Do not use &lt;code&gt;NULL&lt;/code&gt; values, as they will not compare.&lt;/li&gt;
&lt;li&gt;Be aware that the SQL &lt;code&gt;BETWEEN&lt;/code&gt; operator is a closed interval (&lt;code&gt;WHERE id BETWEEN 4 and 7&lt;/code&gt; will return 4, 5, 6 and 7), and you often want half-open interval (&lt;code&gt;WHERE now() &amp;gt;= valid_from AND now() &amp;lt; valid_until&lt;/code&gt;). &lt;strong&gt;Avoid using BETWEEN to avoid ambiguity of the nature of the interval and assumptions on the code readers side.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;json-data-type&#34;&gt;
    &lt;a href=&#34;#json-data-type&#34;&gt;
	JSON data type
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;MySQL 8 provides JSON functions.
They are a bit clunky, but work very well.
When using JSON functions, also learn about generated columns and virtual indexes.
This is new functionality in MySQL 8, and that means it is less tested than other code.
&lt;a href=&#34;https://blog.koehntopp.info/2020/09/04/mysql-json-data-type.html&#34;&gt;JSON basics&lt;/a&gt;

, &lt;a href=&#34;https://blog.koehntopp.info/2020/09/07/mysql-generated-columns-and-virtual-indexes.html&#34;&gt;Generated columns and virtual indexes&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JSON&lt;/code&gt; in MySQL always uses the &lt;code&gt;utf8&lt;/code&gt; character set.
This is a bug, it should be using &lt;code&gt;utf8mb4&lt;/code&gt;, but currently not fixed.
The effect is that Emoji and other letters with 4-byte UTF-8 encodings cannot be used there.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;common-column-types-that-applications-use&#34;&gt;
    &lt;a href=&#34;#common-column-types-that-applications-use&#34;&gt;
	Common column types that applications use
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;email&lt;/strong&gt;* varchar(255) character set utf8mb4&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;phone&lt;/strong&gt; bigint unsigned (E.164 format)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ip_address&lt;/strong&gt;  varbinary(16), because IPv6 is a thing. Check out &lt;code&gt;INET6_ATON()&lt;/code&gt; and virtual indexes on generated columns as a convenience. &lt;code&gt;SELECT ... FROM t WHERE request_ip = INET6_ATON(&amp;quot;141.255.161.178&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;base64&lt;/strong&gt;, blob, mediumblob, for &lt;strong&gt;JSON&lt;/strong&gt; there is a special new JSON type.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;language&lt;/strong&gt; char(2) for &lt;a href=&#34;https://www.iso.org/iso-639-language-codes.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ISO-639-1&lt;/a&gt;

 codes, named &lt;code&gt;lang&lt;/code&gt;, &lt;code&gt;language_code&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;country&lt;/strong&gt; char(2) for &lt;a href=&#34;https://www.iso.org/iso-3166-country-codes.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ISO-3166&lt;/a&gt;

 alpha-2 country codes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IBAN&lt;/strong&gt; varchar(34)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;foreign-key-constraints&#34;&gt;
    &lt;a href=&#34;#foreign-key-constraints&#34;&gt;
	Foreign Key Constraints
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Avoid foreign key constraints, unless you are in departments that specifically require you use them.&lt;/strong&gt;
MySQL allows you to define foreign key constraints.
They come at a price:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Foreign key constraints can only refer to columns in the same database instance, but our schemas have more data than fits into a single schema, and often requires you work across database instances using multiple handles.&lt;/li&gt;
&lt;li&gt;Foreign key constraints are always immediate.
That means they are checked at the end of each statement, not at the end of a transaction (&amp;ldquo;deferred&amp;rdquo;), forcing an order to your SQL statements inside a transaction.
This is often inconvenient.&lt;/li&gt;
&lt;li&gt;Foreign key constraints require additional lookups and additional locks.
This can lead to lock escalation and a higher deadlock rate, impacting throughput.&lt;/li&gt;
&lt;li&gt;With foreign key constraints it is possible to create undeletable and unupdatable rows.&lt;/li&gt;
&lt;li&gt;Foreign Key Constraints with &lt;code&gt;ON UPDATE&lt;/code&gt; and &lt;code&gt;ON DELETE&lt;/code&gt; clauses can cause spooky action at a distance, and can also large bulk deletes and updates that will break replication.&lt;/li&gt;
&lt;li&gt;Foreign Key Constraints break all tooling we have for Online Schema Change and for automated database splits.
Table changes become extremely toil for everyone involved.&lt;/li&gt;
&lt;li&gt;Because of that we recommend you do not use foreign key constraints.
They usually provide a lot of toil and little benefit.&lt;/li&gt;
&lt;li&gt;Exceptions exist. Check your departments engineering guides.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.koehntopp.info/2020/08/03/mysql-foreign-keys-and-foreign-key-constraints.html&#34;&gt;What are Foreign Keys, and Foreign Key Constraints&lt;/a&gt;

, &lt;a href=&#34;https://blog.koehntopp.info/2020/08/03/mysql-foreign-keys-and-foreign-key-constraints.html&#34;&gt;Foreign Key Constraints and Locking&lt;/a&gt;

.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;transactions&#34;&gt;
    &lt;a href=&#34;#transactions&#34;&gt;
	Transactions
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Keep transaction runtime short.&lt;/strong&gt; Long-running transactions will build a large Undo log and slow down the database for everyone.
A transaction taking fractions of a second is fast, a transaction being kept open for minutes or even hours is not. &lt;a href=&#34;https://blog.koehntopp.info/2019/11/18/a-blast-from-the-past.html&#34;&gt;The effect of long-running transactions on performance&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Keep transaction size in the range of 1000 to 10000 rows for batch loading.&lt;/strong&gt;
Larger transactions are incompatible with group replication, and also will not provide speedup.
Smaller transactions cause excessive sync to disk, and are not fast. &lt;a href=&#34;https://blog.koehntopp.info/2020/07/27/mysql-commit-size-and-speed.html&#34;&gt;Commit size and write speed&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use the default transaction isolation level REPEATABLE READ.&lt;/strong&gt;
There were use-cases for READ COMMITTED in the past, but with &lt;a href=&#34;https://dev.mysql.com/blog-archive/mysql-8-0-1-using-skip-locked-and-nowait-to-handle-hot-rows/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;SELECT ... SKIP LOCKED&lt;/code&gt;&lt;/a&gt;

 in MySQL 8 and row based replication, most of these are gone. &lt;a href=&#34;https://blog.koehntopp.info/2020/07/29/mysql-transactions-the-logical-view.html&#34;&gt;What are isolation levels?&lt;/a&gt;

,  &lt;a href=&#34;https://blog.koehntopp.info/2020/07/30/mysql-transactions---writing-data.html&#34;&gt;Proper counters with locking&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;To start a transaction, MySQL offers several semi-equivalent syntax variants: &lt;code&gt;BEGIN&lt;/code&gt;, &lt;code&gt;BEGIN WORK&lt;/code&gt; and &lt;code&gt;START TRANSACTION READ WRITE&lt;/code&gt;. Check what your ORM is using.
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Only &lt;code&gt;START TRANSACTION READ WRITE&lt;/code&gt; should be used.&lt;/strong&gt; It is the only syntax that signals write-intent or read-intent (&lt;code&gt;START TRANSACTION READ ONLY&lt;/code&gt;) in the opening statement, and hence the only statement that load balances properly in ProxySQL.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ProxySQL will have to assume write-intent in all cases if &lt;code&gt;BEGIN&lt;/code&gt; or &lt;code&gt;BEGIN WORK&lt;/code&gt; are being used. This will run even read-only transactions on the primary, and scale badly, unless two application database handles are being used.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;idempotent-queries&#34;&gt;
    &lt;a href=&#34;#idempotent-queries&#34;&gt;
	Idempotent Queries
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Databases have transactions.
It is not strictly necessary to formulate queries as replayable (idempotent).
Things that are being wrapped in a transaction will all either execute together or not at all, and once the commit returns successfully the data is guaranteed to be persisted.&lt;/p&gt;
&lt;p&gt;That said, &lt;strong&gt;it is useful to use replayable forms of write-queries because they are more resilient&lt;/strong&gt; and make certain recovery operations easier.&lt;/p&gt;
&lt;h3 id=&#34;read-modify-write-counters-and-select--for-update&#34;&gt;
    &lt;a href=&#34;#read-modify-write-counters-and-select--for-update&#34;&gt;
	Read-Modify-Write, Counters and &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt;
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A common scenario in transactional databases is making a change to an existing record, for example updating a description, incrementing a counter or changing the state of a work item in a state machine.&lt;/p&gt;
&lt;p&gt;You can think of that as &amp;ldquo;taking a value temporarily out of the table&amp;rdquo; (like lending a book from a library) by locking it, making the change in the application, and then putting it back by running the actual update.&lt;/p&gt;
&lt;p&gt;The correct way to do this is to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;start a transaction using &lt;code&gt;START TRANSACTION READ WRITE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;read the value to be modified by using &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt;, in order to not only select the row in question, but also pre-lock it the way a later write would. &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; is a read statement, but applies X-locks like an &lt;code&gt;UPDATE&lt;/code&gt;. This is &amp;ldquo;taking the value temporarily out of the table&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;You can now make changes to the record in application memory.&lt;/li&gt;
&lt;li&gt;Then run &lt;code&gt;UPDATE ... SET ...&lt;/code&gt; to write the change back.&lt;/li&gt;
&lt;li&gt;On &lt;code&gt;COMMIT&lt;/code&gt; the change will be persisted and the lock will be dropped.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is called a read-modify-write (RMW) transaction, and is the correct way to achieve such multi-statement changes atomically.
You need to find out how your ORM creates RMW transactions.&lt;/p&gt;
&lt;p&gt;Some notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is discussed at length in &lt;a href=&#34;https://blog.koehntopp.info/2020/07/30/mysql-transactions---writing-data.html&#34;&gt;MySQL Transactions (Read-Modify-Write)&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;Make sure &lt;code&gt;START TRANSACTION&lt;/code&gt; syntax is being used, not &lt;code&gt;BEGIN&lt;/code&gt; syntax.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COMMIT&lt;/code&gt; can fail, you must check success and be prepared to re-run the entire transaction.&lt;/li&gt;
&lt;li&gt;A transaction must not extend across a user interaction. You must not &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; and then wait for user input. A transaction must be finished fractions of a second.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;optimistic-locking&#34;&gt;
    &lt;a href=&#34;#optimistic-locking&#34;&gt;
	Optimistic locking
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;To ensure record identity across user interaction, optimistic locking is commonly used.&lt;/strong&gt; The problem to solve is: We load a record into the application memory and then let the user perform changes. We need to write the changes back, but the record may have been simultaneously changed by a second connection.&lt;/p&gt;
&lt;p&gt;We cannot take an X-lock on the record and keep record ownership for a long time across a user interaction, because that will destroy performance in many ways (Imagine a user opening the edit screen and then going on vacation or even just a lunch break).&lt;/p&gt;
&lt;p&gt;There are two common ways to solve this, which are collectively called &amp;ldquo;optimistic locking&amp;rdquo;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You write back the change in an update where you guard the &lt;code&gt;UPDATE&lt;/code&gt; with the full set of old column values in the update: &lt;code&gt;UPDATE t SET col1=new_value1, col2=new_value2, ... WHERE col1=old_value1, col2=old_value2, ...&lt;/code&gt;. The update will fail and no change any row if any old value has changed since we loaded the original row into the editor presented to the user. It is then possible to present the change to the user and let them resolve the conflict.&lt;/li&gt;
&lt;li&gt;Similarly, we can have version numbers in each row, and guard the update with the version number. &lt;code&gt;UPDATE t SET col1=changed_value, version=old_version+1 WHERE id=pk_value AND version=old_version&lt;/code&gt;. The update can happen on the combination of &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt;, and will fail if the version changed while we were waiting for user input.
&lt;ul&gt;
&lt;li&gt;It is important for the version number to be &lt;strong&gt;not&lt;/strong&gt; part of the primary key, because otherwise we get versioned entries in our data table. This is usually not a desirable trait in transactional systems (see &lt;em&gt;Tombstones&lt;/em&gt; elsewhere).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;job-queues-and-skip-locked&#34;&gt;
    &lt;a href=&#34;#job-queues-and-skip-locked&#34;&gt;
	Job Queues (and SKIP LOCKED)
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;MySQL is not actually a queueing system. &lt;strong&gt;Talk to Kafka about queues and do not use MySQL as one.&lt;/strong&gt; Using MySQL as a queue will deliver &amp;ldquo;exactly once delivery&amp;rdquo; of jobs, at the cost of at least one disk write per enqueue and dequeue, which translates into fantastic monetary values in a cloud environment by the way of very high IOPS values.&lt;/p&gt;
&lt;p&gt;MySQL has been used as a queue &lt;a href=&#34;https://blog.koehntopp.info/2021/01/28/database-as-a-queue.html&#34;&gt;in some scenarios on bare metal&lt;/a&gt;

, because it is so obvious and convenient. Looking at the cloud, avoid that and use a proper queue service for your problem.&lt;/p&gt;
&lt;p&gt;If you must use MySQL as a queue, at least &lt;a href=&#34;https://blog.koehntopp.info/2021/07/13/mysql-a-job-queue-in-python.html&#34;&gt;do it right&lt;/a&gt;

, and lock properly using &lt;code&gt;SKIP LOCKED&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For writing to MySQL and Kafka, consider the Outbox pattern (&lt;a href=&#34;https://developers.redhat.com/articles/2021/09/01/outbox-pattern-apache-kafka-and-debezium&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Outbox pattern&lt;/a&gt;

) and talk to the Kafka team.&lt;/p&gt;
&lt;h2 id=&#34;sorting&#34;&gt;
    &lt;a href=&#34;#sorting&#34;&gt;
	Sorting
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Database servers are often more expensive and centralized machines compared to their clients, and harder to scale. We have found that is it useful to &lt;strong&gt;sort in the client where it makes sense&lt;/strong&gt; instead of using &lt;code&gt;ORDER BY&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;subqueries&#34;&gt;
    &lt;a href=&#34;#subqueries&#34;&gt;
	Subqueries
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;*&lt;strong&gt;Prefer &lt;code&gt;JOIN&lt;/code&gt; over subqueries.&lt;/strong&gt; MySQL 8 is better at optimizing subqueries than older versions of MySQL, but it usually still safer to write a &lt;code&gt;JOIN&lt;/code&gt; than to use the equivalent subquery syntax. If you come from red Oracle, you have learned things to be the other way around and need to adjust.&lt;/li&gt;
&lt;li&gt;This is especially true for subqueries with negations (&lt;code&gt;WHERE NOT EXIST&lt;/code&gt;) to find missing values. Use a &lt;code&gt;LEFT JOIN&lt;/code&gt; with &lt;code&gt;IS NULL&lt;/code&gt; on a right-hand side value to achieve the same result much faster.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tombstones-is_deleted-flags&#34;&gt;
    &lt;a href=&#34;#tombstones-is_deleted-flags&#34;&gt;
	Tombstones (&lt;code&gt;is_deleted&lt;/code&gt; flags)
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Avoid Tombstones.&lt;/strong&gt; Tombstones are a per-row flag that marks a row as deleted. All queries to the table need their &lt;code&gt;WHERE&lt;/code&gt;-clause to be amended by a &lt;code&gt;AND is_deleted = 0&lt;/code&gt; term or similar to find only non-deleted rows. Tombstones are usually not a good idea.
&lt;ul&gt;
&lt;li&gt;The old data will increase the size of the active transactional table. This will increase the working set of the database, and require a larger instance.&lt;/li&gt;
&lt;li&gt;The tombstone flag needs to be indexed, or even become part of the primary key, in order to eliminate dead rows quickly.&lt;/li&gt;
&lt;li&gt;The MTTR of the system after failure is higher because the database is larger, being bloated with dead data.&lt;/li&gt;
&lt;li&gt;Actually physically deleting the tombstone data is a cumbersome process when done in large batches.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It is usually preferable to build transactional systems that are small and contain only life data in transactional tables.&lt;/strong&gt; Log data with temporary structure should at least go to other tables with log nature, or even to different machines that are handling the archival log and are not part of the critical, transactional production scope.
&lt;ul&gt;
&lt;li&gt;You can write records to the transactional table, and when they retire instead of deleting move them to a log table.&lt;/li&gt;
&lt;li&gt;You can double write records on creation to the transactional table and the log table, then mirror the entire lifecycle on both tables.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Typical scenarios where Tombstones are deadly:&lt;/strong&gt; A queue-like structure in a table (&amp;ldquo;Picklists&amp;rdquo;, &amp;ldquo;Producer/Consumer Scenarios&amp;rdquo;, &amp;ldquo;State machines in a table&amp;rdquo;)
&lt;ul&gt;
&lt;li&gt;It is sometimes okay to keep old inventory records around in a lookup table if there is a chance that items elsewhere still refer to the deactivated inventory.&lt;/li&gt;
&lt;li&gt;In general, it is often useful in transactional systems to keep the working set aggressively small, and then keep non-critical data in other tables in the same system, or even in dedicated non-transactional systems. How little data do I need in order to be able to take their money successfully?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;partitions&#34;&gt;
    &lt;a href=&#34;#partitions&#34;&gt;
	Partitions
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Partitions are a way to split a large table internally into a number of small tables, while still presenting the interface of a single table to the user.
&lt;strong&gt;They may be useful for tables &amp;gt; 30 GB in size, a quarter of an instance&amp;rsquo;s memory size.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Partitioning always works on the primary key, or the prefix of a compound (multi-column) primary key.
Internally, MySQL uses (a part of) the primary key to decide into which internal table (partition) to put the row.
The optimizer may use this to reduce the number of partitions to search when running queries.&lt;/p&gt;
&lt;p&gt;Also, instead of deleting many rows individually, it may be possible to speed up some deletions by running an &lt;code&gt;ALTER TABLE ... DROP PARTITION ...&lt;/code&gt; to quickly remove data.
On the other hand, running DDL queries in the normal application workflow likely is going to need a compliance exception.&lt;/p&gt;
&lt;p&gt;Partitions can work on a &lt;code&gt;RANGE&lt;/code&gt; or &lt;code&gt;LIST&lt;/code&gt; of column values, or on a hash function (&lt;code&gt;KEY&lt;/code&gt; uses a system-supplied hash, &lt;code&gt;HASH&lt;/code&gt; uses a user-supplied function).
&lt;code&gt;RANGE&lt;/code&gt; and &lt;code&gt;LIST&lt;/code&gt; can speed up queries by enabling the optimizer to eliminate partitions before access. &lt;code&gt;HASH&lt;/code&gt; and &lt;code&gt;KEY&lt;/code&gt; &amp;ldquo;spray&amp;rdquo; data across many partitions, and can make insertion faster and more even.&lt;/p&gt;
&lt;p&gt;Talk to a DBA about planning proper partitioning, taking your workload and access pattern into account.&lt;/p&gt;
&lt;h2 id=&#34;using-mysql-in-a-replication-environment&#34;&gt;
    &lt;a href=&#34;#using-mysql-in-a-replication-environment&#34;&gt;
	Using MySQL in a replication environment
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Our MySQL is always &lt;a href=&#34;https://blog.koehntopp.info/2021/03/24/a-lot-of-mysql.html&#34;&gt;in a treelike replication structure&lt;/a&gt;

 to place read copies of the data close to the application. This provides low latency data access.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Writes always go to the root of the replication tree, the current primary.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Your application has access to segregated read and write handles for database access.
&lt;strong&gt;Make sure you are using the proper handle.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Replication speed is mostly a function of workload.&lt;/strong&gt; DBAs can keep replication running, but they cannot really make a server replicate faster.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use replication-aware bulk functions.&lt;/strong&gt; Your database access library has functions to prevent overloading a replication hierarchy. Use them, and when they don&amp;rsquo;t work - &amp;ldquo;&lt;strong&gt;don’t get creative, get help&lt;/strong&gt;.&amp;rdquo;
&lt;ul&gt;
&lt;li&gt;DBAs can indeed speed up replication by changing the server configuration to a mode where disk writes are not properly persisted. By writing to disk less the server can replicate faster, at the cost of losing data should there be a fail-over situation while this configuration is active. This is known as &amp;ldquo;YOLO&amp;rdquo;-Mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Our MySQL topology is managed by a program called &lt;a href=&#34;https://www.percona.com/blog/2016/03/08/orchestrator-mysql-replication-topology-manager/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Orchestrator&lt;/a&gt;

.
Orchestrator takes care of Primaries and Intermediate Servers failing, rearranging the surviving members into a valid replication tree.
It also informs our server discovery mechanisms of the change.
This means:
&lt;ul&gt;
&lt;li&gt;Your application cannot rely on write- and read-handles pointing to static machines, when DNS is used.
&lt;strong&gt;You must re-resolve hostnames immediately before reconnecting.&lt;/strong&gt;
You must make sure that your code does not internally cache DNS query results (Java!).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;debugging-performance-problems&#34;&gt;
    &lt;a href=&#34;#debugging-performance-problems&#34;&gt;
	Debugging performance problems
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;high-cpu&#34;&gt;
    &lt;a href=&#34;#high-cpu&#34;&gt;
	High CPU?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;MySQL typically does not use much CPU.
Servers with high CPU usage are having one of three problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Queries not using indexes, scanning a table completely, in memory.
&lt;ul&gt;
&lt;li&gt;Identify the query not using indexes and fix the schema or the query (see below).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Excessive sorting in the server.
&lt;ul&gt;
&lt;li&gt;If possible, access the data in index order, or do the sorting in the client where it scales better.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code in the database is being run (i.e. somebody has been using stored procedures, stored functions or similar)
&lt;ul&gt;
&lt;li&gt;Destroy the codebase and start over from scratch.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;finding-problematic-queries-using-vividcortex&#34;&gt;
    &lt;a href=&#34;#finding-problematic-queries-using-vividcortex&#34;&gt;
	Finding problematic queries using Vividcortex
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;On many replication hierarchies we have probes running that log query data into &amp;ldquo;Solarwinds DPM&amp;rdquo; (previously known as VividCortex).
If you do not have access or your replication hierarchy has no probes, contact DBA.&lt;/p&gt;
&lt;h2 id=&#34;finding-problematic-queries-using-sys&#34;&gt;
    &lt;a href=&#34;#finding-problematic-queries-using-sys&#34;&gt;
	Finding problematic queries using &lt;code&gt;sys.*&lt;/code&gt;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;All database servers by default have installed a series of views in &lt;code&gt;sys.*&lt;/code&gt;.
These read data from &lt;code&gt;performance_schema.*&lt;/code&gt; (P_S for short), which is partially enabled on all machines.&lt;/p&gt;
&lt;p&gt;P_S is documented in &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/performance-schema.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://dev.mysql.com/doc/refman/8.0/en/performance-schema.html&lt;/a&gt;

.
It is optimized for logging performance data without impacting performance much.
It is not optimized for access by humans.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;sys.*&lt;/code&gt; (sys for short) is fixing that, presenting a number of useful views on P_S, for human consumption and reporting.
sys is documented in &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/sys-schema.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://dev.mysql.com/doc/refman/8.0/en/sys-schema.html&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;All views in sys exist in two variants: the regular variant for humans (&lt;code&gt;sys.host_summary_by_file_io&lt;/code&gt;) and the &lt;code&gt;x$&lt;/code&gt; variant presenting unabridged data at full resolution for reporting (&lt;code&gt;sys.x$host_summary_by_file_io&lt;/code&gt;).
Numbers in the regular variant are shortened and suffixed with units (&amp;ldquo;15m&amp;rdquo;, &amp;ldquo;100k&amp;rdquo;) or transformed into human time scales (runtime &lt;code&gt;01:02:03&lt;/code&gt;). Numbers in &lt;code&gt;x$&lt;/code&gt; views are presented raw.
It is useful to work interactively with the regular variants and the run the final report on the &lt;code&gt;x$&lt;/code&gt; variant for full data.&lt;/p&gt;
&lt;p&gt;Note that meaningful performance data can be gathered only on production instances, but you can craft performance insight queries on test instances easily.
You will then need to run these on production instances to actually get production performance data.&lt;/p&gt;
&lt;h2 id=&#34;missing-indexes&#34;&gt;
    &lt;a href=&#34;#missing-indexes&#34;&gt;
	Missing indexes
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The most common cause for slow query execution is &amp;ldquo;missing indexes&amp;rdquo;.
Once you have identified queries with slow execution time using Solarwinds DPM or sys, run the &lt;code&gt;explain&lt;/code&gt; command on them to see their execution plan.
Refer to &lt;a href=&#34;https://www.slideshare.net/isotopp/explaining-explain&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Explaining EXPLAIN: Queries and what happens when you execute them&lt;/a&gt;

 (&lt;a href=&#34;https://www.slideshare.net/isotopp/explain-explain-no-presenter-notes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;version without presenter nodes&lt;/a&gt;

) to better understand what goes on.&lt;/p&gt;
&lt;p&gt;Most commonly, one of these things needs fixing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add missing indexes&lt;/li&gt;
&lt;li&gt;formulate a query with dependent subqueries to use some kind of join&lt;/li&gt;
&lt;li&gt;formulate a query with multiple range clauses in a way that resolves in multiple steps&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DBA can help you with this of problem.&lt;/p&gt;
&lt;h2 id=&#34;mismatching-types&#34;&gt;
    &lt;a href=&#34;#mismatching-types&#34;&gt;
	Mismatching types
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;A longstanding problem in MySQL was a type mismatch in a join.
If you have a query with a &lt;code&gt;a JOIN b ON a.col1 = b.col1&lt;/code&gt;, and the instances of &lt;code&gt;col1&lt;/code&gt; in the two tables have incompatible (different, and not coercible) types, an index cannot be used to resolve the query, even if it exists.
That is, if &lt;code&gt;col1&lt;/code&gt; is a &lt;code&gt;varchar&lt;/code&gt; in &lt;code&gt;a&lt;/code&gt;, but an &lt;code&gt;int&lt;/code&gt; in &lt;code&gt;b&lt;/code&gt;, the join will be slow.&lt;/p&gt;
&lt;p&gt;The problem can also often be provoked in a &lt;code&gt;WHERE&lt;/code&gt; clause such as &lt;code&gt;WHERE a.col1 = &amp;quot;value&amp;quot;&lt;/code&gt;, with &lt;code&gt;a.col1&lt;/code&gt;
being integer, and &lt;code&gt;&amp;quot;value&amp;quot;&lt;/code&gt; written as a string literal due to the quotes.
Again, an index, even if it exists, won&amp;rsquo;t be used.&lt;/p&gt;
&lt;h2 id=&#34;bad-paging&#34;&gt;
    &lt;a href=&#34;#bad-paging&#34;&gt;
	Bad Paging
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;(based on an idea from Yves Orton)&lt;/p&gt;
&lt;p&gt;The query &lt;code&gt;SELECT id FROM Whatever LIMIT 10360000,10000&lt;/code&gt; is an example of paging, where a user or a script want to read a large, full result set in chunks of 10k.&lt;/p&gt;
&lt;p&gt;This is not an efficient practice, as the database has to execute the same query over and over.
It may be able to apply some mild optimizations for low limit values (at the start of the paging), but eventually it will have to reproduce large parts of the full table, handing out fragments of 10k rows.
On top of that, MySQL represents result sets internally in a linked list, so &lt;code&gt;LIMIT&lt;/code&gt; clauses with large offset values are very inefficient.&lt;/p&gt;
&lt;p&gt;We could instead fetch one row more, while reading in table native order.
This will get of the offset part in the &lt;code&gt;LIMIT&lt;/code&gt; clause.
It will not have to physically sort, as the table is read in native primary key order.
And it will only access actual 10k fragments of the table.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Whatever&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;limit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10001&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We output 10k values, and take the final value as a new starting point &lt;code&gt;lastid&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Whatever&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lastid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;limit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10001&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and so on.&lt;/p&gt;
&lt;h1 id=&#34;specific-host-languages&#34;&gt;
    &lt;a href=&#34;#specific-host-languages&#34;&gt;
	Specific Host languages
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;python&#34;&gt;
    &lt;a href=&#34;#python&#34;&gt;
	Python
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;As a developer using Python, I want to be able to hand a &lt;code&gt;list&lt;/code&gt; to SQL with a &lt;code&gt;WHERE id IN (…)&lt;/code&gt; clause, and it should do the right thing.
This can be done by using a prepared statement like &lt;code&gt;SELECT .... WHERE `foo` IN %s ...&lt;/code&gt; and passing in a &lt;code&gt;list&lt;/code&gt; or a &lt;code&gt;tuple&lt;/code&gt;
for the placeholder variable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full discussion in &lt;a href=&#34;https://blog.koehntopp.info/2021/10/28/python-where-in.html&#34;&gt;Python: WHERE &amp;hellip; IN (&amp;hellip;)&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Important caveats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There are no &lt;code&gt;()&lt;/code&gt; in the prepared statement after the &lt;code&gt;IN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Only &lt;code&gt;list&lt;/code&gt; and &lt;code&gt;tuple&lt;/code&gt; will work, no other iterables&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As a developer using Python, I want to be able to trace the SQL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full discussion in &lt;a href=&#34;https://blog.koehntopp.info/2022/03/24/debugging-sql-in-python.html&#34;&gt;Python: Debug SQL&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;support&#34;&gt;
    &lt;a href=&#34;#support&#34;&gt;
	Support
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;host-version-user&#34;&gt;
    &lt;a href=&#34;#host-version-user&#34;&gt;
	Host, Version, User
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The DBA will have a much easier time in helping you, if you have the output of the following query ready when you ask them about your SQL performance problem.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will tell them the actual instance hostname, the precise version string of the database and the username (and by inference, the permissions) you are using to connect.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Change Data Capture and the Binlog</title>
      <link>https://blog.koehntopp.info/2022/04/05/change-data-capture-and-the-binlog.html</link>
      <pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/04/05/change-data-capture-and-the-binlog.html</guid>
      <description>&lt;p&gt;MySQL uses replication to do an ongoing life restore of a primary server to any number of replicas.
How replication came to be I have discussed previously &lt;a href=&#34;https://blog.koehntopp.info/2020/11/27/backups-and-replication.html&#34;&gt;in another article&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Modern replication uses row based replication, with a minimal row image and compression. What is that?&lt;/p&gt;
&lt;h1 id=&#34;decoding-the-binlog&#34;&gt;
    &lt;a href=&#34;#decoding-the-binlog&#34;&gt;
	Decoding the Binlog
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;When using Row Based Replication, the Row Change event is represented using the &lt;code&gt;BINLOG&lt;/code&gt; statement in the output of the &lt;code&gt;mysqlbinlog&lt;/code&gt; command.
It has a single string parameter, the pre- and post-change row images.&lt;/p&gt;
&lt;p&gt;Adding the &lt;code&gt;-v&lt;/code&gt; option multiple times will decode that:  &lt;code&gt;mysqlbinlog -vvv&lt;/code&gt;.
It shows a pseudo SQL statement affecting a single row.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; at &lt;span class=&#34;m&#34;&gt;1140&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;220404&lt;/span&gt; 16:34:41 server id &lt;span class=&#34;m&#34;&gt;187076016&lt;/span&gt;  end_log_pos &lt;span class=&#34;m&#34;&gt;1140&lt;/span&gt; CRC32 0x0112f9b6         Table_map: &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;kris&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;.&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;testtable&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; mapped to number &lt;span class=&#34;m&#34;&gt;92&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; at &lt;span class=&#34;m&#34;&gt;1140&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;220404&lt;/span&gt; 16:34:41 server id &lt;span class=&#34;m&#34;&gt;187076016&lt;/span&gt;  end_log_pos &lt;span class=&#34;m&#34;&gt;1140&lt;/span&gt; CRC32 0xe3714794         Delete_rows: table id &lt;span class=&#34;m&#34;&gt;92&lt;/span&gt; flags: STMT_END_F
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;BINLOG &amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;AQJLYhOwjSYLWwAAAAAAAAAAAFwAAAAAAAEAEHBheW1lbnRjb21wb25lbnQAFHBheW1lbnRfc2Vz
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;c2lvbl9kYXRhAAUI9Q8P9QYEFgCHAAQeAQEAAgEItvkSAQ==
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;AQJLYiCwjSYLLAAAAAAAAAAAAFwAAAAAAAEAAgAFAQDcTtUTAAAAAJRHceM=
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;/*!*/;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;## DELETE FROM `kris`.`testtable`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;## WHERE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;##   @1=332746460 /* LONGINT meta=0 nullable=0 is_null=0 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This example from an RBR binlog shows the replication context.
Note the table map, which translates a table name into an internal table_id, followed by the binlog checksum and log positions.
Below that, the actual row change is decoded into a &lt;code&gt;BINLOG&lt;/code&gt; statement, and the pseudo SQL it translates to.&lt;/p&gt;
&lt;p&gt;The MySQL primary and its replicas have identical metadata.
While some metadata is part of replication, such as column numbers and data types, other metadata is not part of replication, for example, the column names.&lt;/p&gt;
&lt;p&gt;Note that even with &lt;code&gt;binlog_format=row&lt;/code&gt; configured, some statements are still being replicated as statements &amp;ndash; notably, all statements that do not change rows are replicated as statements.
That is for example all DDL: you will see &lt;code&gt;CREATE&lt;/code&gt;, &lt;code&gt;DROP&lt;/code&gt; and &lt;code&gt;ALTER&lt;/code&gt; statements.&lt;/p&gt;
&lt;h1 id=&#34;how-much-row-is-in-an-rbr-binlog&#34;&gt;
    &lt;a href=&#34;#how-much-row-is-in-an-rbr-binlog&#34;&gt;
	How much row is in an RBR binlog?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Originally, the rows in an RBR binlog were full images of the row, once before the change and once after the change.
This can be a lot of data in a table that has &lt;code&gt;TEXT&lt;/code&gt;, &lt;code&gt;BLOB&lt;/code&gt; or &lt;code&gt;JSON&lt;/code&gt; columns.&lt;/p&gt;
&lt;p&gt;The pathological case is a table with a primary key, a counter and a large &lt;code&gt;TEXT&lt;/code&gt; column, incrementing the counter.
In this case, the &lt;code&gt;TEXT&lt;/code&gt; is replicated twice per changed row, unchanged, for an increment of a 4 byte counter.&lt;/p&gt;
&lt;p&gt;This was relatively quickly fixed by introducing the &lt;code&gt;NOBLOB&lt;/code&gt; and &lt;code&gt;MINIMAL&lt;/code&gt; row image formats.
&lt;code&gt;NOBLOB&lt;/code&gt; contains all columns before and after the change, except for &lt;code&gt;BLOB&lt;/code&gt; and &lt;code&gt;TEXT&lt;/code&gt; columns, unless they changed.
&lt;code&gt;MINIMAL&lt;/code&gt; logs only the primary key in the pre-image and contains only changed columns in the post-image.&lt;/p&gt;
&lt;p&gt;This saves a lot of disk space, while still maintaining all information necessary to safely update a replica.&lt;/p&gt;
&lt;p&gt;Surprisingly, this is already quite efficient: For our workloads at work, RBR already creates smaller binlogs than SBR, even with &lt;code&gt;FULL&lt;/code&gt; format (around 1/2 to 1/3 the size of SBR binlogs).
&lt;code&gt;MINIMAL&lt;/code&gt; can bring these numbers down even further.&lt;/p&gt;
&lt;h1 id=&#34;if-rbr-is-so-efficient-why-compression&#34;&gt;
    &lt;a href=&#34;#if-rbr-is-so-efficient-why-compression&#34;&gt;
	If RBR is so efficient, why compression?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Yet, for a large number of replication hierarchies, binlog storage is expensive and often a limiting factor given the fixed size of the disks we use.&lt;/p&gt;
&lt;p&gt;We want to store several days of binlog, in order to be able to roll forward from restored backups.
But because some replication hierarchies see a lot of churn, we get a lot of rows changes due to all these write operations.
That is not unexpected: Online Transaction Processing has a singular purpose in life: to transact.
So we expect to see a lot of transactions.&lt;/p&gt;
&lt;p&gt;Using compression, we use less disk space to store transaction, so we can store more of them in the same amount of disk space.
MySQL compressed binlog events using zstd compression.
Compressed binlog events encapsulate a regular binlog event each, so compression is per-event.&lt;/p&gt;
&lt;p&gt;That is slightly less efficient than per-file, but has the advantage of easy implementation:
After applying decompression to a compressed binlog event, a normal binlog event emerges, as before the change.&lt;/p&gt;
&lt;p&gt;That makes it easy for all binlog consumers to update to the new format with minimal changes:
Basically you need to add zstd as a dependency, and if you see a compressed event, decompress it and handle it as before.&lt;/p&gt;
&lt;h1 id=&#34;cdc-versus-replication&#34;&gt;
    &lt;a href=&#34;#cdc-versus-replication&#34;&gt;
	CDC versus replication
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The binlog is a MySQL internal data structure.
It exists to facilitate replication between instances of MySQL.
It is useful for other things, but as the binlog evolves, these other things have to track the changes.&lt;/p&gt;
&lt;p&gt;For example, a lot of work is currently being done on CDC with various tools.
The objective is mainly
&amp;ldquo;Use replication as a channel to extract database changes in a defined format, and put them on a Kafka bus.
These change events will then be used to re-create a database image in other formats, for example in Hadoop or elsewhere.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;So, to formulate it somewhat pointedly, at the purely operational level we are busy reinventing replication in JSON or Avro on Kafka.
To save face: At the data modelling level things are a bit more involved.&lt;/p&gt;
&lt;p&gt;Unfortunately, this poses several challenges on the source databases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Initial data load does not consume a backup in one of our backup formats, but requires a life database instance, as the data load happens by queries instead of parsing data files.
&lt;ul&gt;
&lt;li&gt;As the data load needs to be consistent, mapping to exactly one binlog position, it holds a consistent read view for a long time.
Holding a consistent read view for a long time slows down MySQL a lot, so this instance becomes unusable for everybody but the data loader.
Some data loads use multiple instances for speed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The CDC log parsers ask for full binlogs for simpler parsing.
&lt;ul&gt;
&lt;li&gt;MySQLs own replication demonstrates that a minimal binlog is sufficient for replication, so it must be sufficient for CDC as well &amp;ndash; but that requires access to the full previous image of the row to fill in the missing data.
As CDC does not have access to the full previous row image, it requests full format.
Fixing that is considerable scope creep:
instead of reinventing replication you are now reinventing the database.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The CDC log parsers ask for uncompressed binlogs.
&lt;ul&gt;
&lt;li&gt;That&amp;rsquo;s fixable relatively easily by learning to parse and use zstd, and doable.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;transactionality-and-cdc&#34;&gt;
    &lt;a href=&#34;#transactionality-and-cdc&#34;&gt;
	Transactionality and CDC
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;MySQL writes a binlog record only on commit.
As long as the transaction does not commit successfully, nothing is visible to replicas, and neither to CDC.&lt;/p&gt;
&lt;p&gt;The data written to the binlog are all the row changes affected by a set of statements in a transaction.
It is not geared to business level events of the kind we want to see on our Kafka, but logs table level changes to the SQL schema.&lt;/p&gt;
&lt;h2 id=&#34;outboxes---why-and-how&#34;&gt;
    &lt;a href=&#34;#outboxes---why-and-how&#34;&gt;
	Outboxes - why and how?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The data written to the binlog will reflect changes to the table structure, as the schema evolves based on the needs of the team owning that schema.
Since the CDC stream sees the same changes, the data format in there will also change, and break downstream consumers.&lt;/p&gt;
&lt;p&gt;One might entertain the idea of not reading data from MySQL binlogs, but implementing CDC at the application level.
This has a few advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL binlog format may evolve and change, as MySQL evolves and changes.
For example, a hierarchy may convert to group replication (many do), compression is being introduced, compliance may require encryption or other changes.
We may not want this tight coupling, but be able to upgrade and change individual instances at will.&lt;/li&gt;
&lt;li&gt;The schema may evolve depending on the needs of the schema owner, which affects the format of events in the binlog, breaking downstream CDC consumers.
We may not want this tight coupling, but be able to evolve applications and their schema at will.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But emitting CDC events at the application level introduces great complexity:
We must make sure that only events that are actually committed are visible on the bus, and that conversely no events are lost.&lt;/p&gt;
&lt;p&gt;The default workaround at this point in time is the outbox:
Applications perform their changes to the data as they wish, and in the same transaction also write to a table in a fixed format, the outbox.&lt;/p&gt;
&lt;p&gt;CDC reads the complete binlog, discards all writes except writes to the outbox, and uses the outbox changes to create a message on the bus.&lt;/p&gt;
&lt;p&gt;This guarantees a fixed data format, as the format of the outbox table is fixed, while allowing the data owner to change all other tables at will.&lt;/p&gt;
&lt;p&gt;It guarantees transactionality as well: as the writes to the private tables and to the outbox happen in a single transaction, they will always succeed or fail together.&lt;/p&gt;
&lt;p&gt;And it is relatively simple to implement.&lt;/p&gt;
&lt;h2 id=&#34;not-using-outboxes-and-not-using-binlog&#34;&gt;
    &lt;a href=&#34;#not-using-outboxes-and-not-using-binlog&#34;&gt;
	Not using Outboxes and not using binlog
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;But Outboxes are still dependent on reading the MySQL binlog format.
Every time that changes, CDC breaks.
Or if it needs to change, the change needs to be coordinated between the data owners of a schema and all their consumers and dependencies.&lt;/p&gt;
&lt;p&gt;The alternative, emitting a CDC event and performing a change to the database, can only work with some kind of commit tracking in the database.&lt;/p&gt;
&lt;p&gt;This exists, but is a relatively new and untested feature in MySQL:
&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/session-state-tracking.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Server Tracking of Client Session State&lt;/a&gt;

.
Not all client libraries have full support for session state tracking, yet.&lt;/p&gt;
&lt;p&gt;Session State Tracking allows a client to MySQL to know what the server is currently doing:
for each piece of
&lt;a href=&#34;2020-07-28-mysql-connection-scoped-state.md&#34;&gt;Connection Scoped State&lt;/a&gt;


a tracker exists, so the client has access to the session state on a controlled way, and is notified if any state on the server changes.&lt;/p&gt;
&lt;p&gt;For the purposes of CDC, the GTID tracker informs the client if a commit to the server succeeded and a global transaction id was assigned.
The client gets a chance to correlate bus events with database transactions, and make sure both match.&lt;/p&gt;
&lt;p&gt;While being a much more complicated approach, it has the chance of breaking the dependency of being able to read MySQL binlogs.
It is still a work in progress, though.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DevOps meets Databases</title>
      <link>https://blog.koehntopp.info/2022/04/04/devops-meets-databases.html</link>
      <pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/04/04/devops-meets-databases.html</guid>
      <description>&lt;p&gt;On Twitter, &lt;a href=&#34;https://twitter.com/Der_Pesse/status/1510386289924837383&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Samuel Nitsche&lt;/a&gt;

 asked:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Are there &amp;ldquo;IT history nerds&amp;rdquo; on this app? Like people who have the skills/knowledge to tell how some trends/evolutions in IT appeared? I&amp;rsquo;d love to connect!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Asking about what he wanted to know specifically he said, he&amp;rsquo;s interested in the reasons why DevOps and Agile take up in DBA circles is so slow and low.
That forced me to brain dump stuff that has been active in the back of my mind for quite some time now, but which I never collected properly.&lt;/p&gt;
&lt;p&gt;This is not yet a proper talk, but some kind of collection of material I wrote and some connecting thoughts.&lt;/p&gt;
&lt;h1 id=&#34;what-is-devops&#34;&gt;
    &lt;a href=&#34;#what-is-devops&#34;&gt;
	What is &amp;ldquo;DevOps&amp;rdquo;?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;I had a talk on the German UNIX Users Group Spring Talks titled &amp;ldquo;Go Away, or I Will Replace You With a Very Little Shell Script&amp;rdquo; (&amp;ldquo;There is no such thing as a DevOps Team&amp;rdquo;).
The slides are on &lt;a href=&#34;https://www.slideshare.net/isotopp/go-away-of-i-will-replace-you-with-a-little-shell-script-english&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slideshare&lt;/a&gt;

, and I also have a &lt;a href=&#34;https://blog.koehntopp.info/2015/03/27/go-away-or-i-will-replace-you.html&#34;&gt;Blog article&lt;/a&gt;

.
The talk basically explains what happened in the 10 years after the Dotcom Boom, and how the adoption of &amp;ldquo;scale-out&amp;rdquo; instead of &amp;ldquo;scale-up&amp;rdquo; created the need for Sysadmins to pick up Developer tooling and some developer methods in order to deal with machinery in numbers.&lt;/p&gt;
&lt;p&gt;While the tooling largely aligned, the outlook on life did not &amp;ndash; developers are looking at new features, basically new best cases.
But operations people still are judged by resiliency, and how they are handling failures, so by new worst cases.
The gap in mindset between Developers and Operations is hard to bridge, but it can be done with a little trickery.
In any case, the traditional Sysadmin job died out.&lt;/p&gt;
&lt;p&gt;Some people ask about the distinction between &amp;ldquo;DevOps vs. SRE&amp;rdquo;, and there is very little.
To some, &amp;ldquo;SRE&amp;rdquo; is the Google employer branding for the &amp;ldquo;DevOps&amp;rdquo; profile.
Others make a vague distinction which riffs on the fact that &amp;ldquo;SRE&amp;rdquo; are people that care about worst cases, resiliency and fighting operational toil, and which also care about observability.
In my experience that is too subtle a distinction to hold up in a hiring interview, much less in day to day operations.&lt;/p&gt;
&lt;h1 id=&#34;devops-and-databases&#34;&gt;
    &lt;a href=&#34;#devops-and-databases&#34;&gt;
	DevOps and Databases
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;In regard to databases, this development did not happen at the same speed.
There is a number of reasons for it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There are usually very few databases compared to frontends, so the need to automate databases is much less pressing for most companies, with very few exceptions (Booking.com, Facebook and a few others).
Only when you have thousands of databases, or when you limit database instance lifetime for whatever reasons you need to properly automate databases.&lt;/li&gt;
&lt;li&gt;Databases are very stateful systems.
In fact, dealing with state, with transactions and with persistence is their only purpose in life.
These things make proper database automation hard, and make most existing DevOps tooling unsuitable for the task.
So you&amp;rsquo;d have to be very specific about tool choice, or invent tooling from scratch.
Also, existing DBaaS developments are outdated and way behind the time (AWS RDS, I am looking at you!).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;state-everywhere&#34;&gt;
    &lt;a href=&#34;#state-everywhere&#34;&gt;
	State everywhere
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The most obvious exposure to state that developers have when dealing with databases is when seeing and handling database connections.
These are not https/TLS connections, and cannot be sent through regular https proxies such as Envoy.
Why is that?&lt;/p&gt;
&lt;p&gt;Databases have a lot of &lt;a href=&#34;https://blog.koehntopp.info/2020/07/28/mysql-connection-scoped-state.html&#34;&gt;connection scoped state&lt;/a&gt;

.
The most glaring example of state in a database connection is the transaction:
If you are in the middle of a transaction and lose the connection to the database, the open transaction is being rolled back.&lt;/p&gt;
&lt;p&gt;Developers need to catch this problem, and go back to the beginning of the transaction, restarting it from the beginning.
So reconnecting to the database transparently and hiding the disconnect/reconnnect from the application is almost impossible.
Developers are hating the database for this, or ignore the problem, producing incorrect code.&lt;/p&gt;
&lt;p&gt;Developers want a pony, and failing that, at least &lt;a href=&#34;https://blog.koehntopp.info/2021/01/28/database-as-a-queue.html&#34;&gt;a queue with exactly-once semantics&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;They can have that, up to a point, but at a terrible cost of one transaction per state change.
It is a legal wish to have, if you can afford the cost, because it makes development easier and a lot more boring.
But you need to track this as an absolute scaling limit, and be prepared to handle this as a tech debt item later on, in time.&lt;/p&gt;
&lt;p&gt;You can, as a company, get away with &amp;ldquo;&lt;a href=&#34;https://www.slideshare.net/isotopp/boring-dot-com-the-virtues-of-boring-technology&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;boring technology&lt;/a&gt;

&amp;rdquo; for a very long time.
That is good, because it simplifies developer life and allows them to move forward without much technical complexity to take into account.
Eventually you run out of runway, though, and need to take this on.
That&amp;rsquo;s usually a painful breakpoint in the company&amp;rsquo;s growth journey.
It also makes it very hard &lt;a href=&#34;https://blog.koehntopp.info/2021/09/27/mysql-booking-2010-a-hiring-interview-question.html&#34;&gt;to find database SRE people&lt;/a&gt;

.&lt;/p&gt;
&lt;h2 id=&#34;automating-databases-is-hard-because-of-internode-dependencies&#34;&gt;
    &lt;a href=&#34;#automating-databases-is-hard-because-of-internode-dependencies&#34;&gt;
	Automating databases is hard, because of internode dependencies
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Scaling out databases and automating their operation is a hard task.&lt;/p&gt;
&lt;p&gt;Not only are connections stateful,
but things like SQL databases, consensus systems (such as Zk, etcd, Consul), and things that have consensus systems inside, are clusters.
They cannot be handled by tooling that thinks of a deployment as a set of independent boxes without constraints between them.&lt;/p&gt;
&lt;p&gt;So when you look at puppet, chef, terraform, &amp;ldquo;harness.io&amp;rdquo; or other things, they have no concept of a cluster, of a quorum, or of a replication hierarchy.
The point being: making changes to such a cluster creates an order to the updates, as they are applied.
Also, checkpoints are needed for the change to proceed, to make sure quorum is kept at all times.&lt;/p&gt;
&lt;p&gt;For example, in a replication tree, updates need to be made to the leaf nodes, then their parents and so on, to make sure that a replica is always newer than its primary.&lt;/p&gt;
&lt;p&gt;And updates to clusters with quorums can only be made while maintaining quorum.
So after each application of a change to a cluster node, the update orchestrator needs to check if the node it just worked on came back properly.
Only then it may proceed with the next node.
None of the tools mentioned above have any concept of such constraints, they are simply unfit to deal with databases that are not a SPOF.&lt;/p&gt;
&lt;p&gt;Ansible can dig itself out of that hole by the sequential and slow nature of its processing and delegation, but is still unaware of the actual topology of constraints.
Only salt and k8s have concepts that can handle clusters or where you can implement what k8s calls an Operator.&lt;/p&gt;
&lt;h2 id=&#34;automating-database-is-slow-because-data-has-weight&#34;&gt;
    &lt;a href=&#34;#automating-database-is-slow-because-data-has-weight&#34;&gt;
	Automating database is slow, because data has weight
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Working with databases is always slow, &lt;a href=&#34;https://blog.koehntopp.info/2022/02/16/databases-how-large-is-too-large.html&#34;&gt;because data has weight&lt;/a&gt;

. At 400 MB/s, copying 1 TB takes 45 minutes, and replication catchup and cache warmup take another 15 minutes, so we can calculate and communicate &amp;ldquo;1 hour per 1 TB of data size&amp;rdquo;.
Of course &amp;ldquo;reactive autoscaling&amp;rdquo; is never a thing for persistence systems.
All changes always need to be planned, and then take time.&lt;/p&gt;
&lt;h2 id=&#34;automating-databases-is-possible-but-usually-not-done&#34;&gt;
    &lt;a href=&#34;#automating-databases-is-possible-but-usually-not-done&#34;&gt;
	Automating databases is possible, but usually not done
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.koehntopp.info/2021/03/24/a-lot-of-mysql.html&#34;&gt;When you have automated databases&lt;/a&gt;

 to a point where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;instances are made automatically,&lt;/li&gt;
&lt;li&gt;instances enter their replication hierarchies automatically,&lt;/li&gt;
&lt;li&gt;replication capacity and catchup speed is monitored and sized automatically,&lt;/li&gt;
&lt;li&gt;schema changes are handled automatically using Online Schema Change tooling,&lt;/li&gt;
&lt;li&gt;backups with restore tests are done automatically,&lt;/li&gt;
&lt;li&gt;primary key exhaustion is monitored,&lt;/li&gt;
&lt;li&gt;all instances are being remade cyclically within 60 days,&lt;/li&gt;
&lt;li&gt;instance discovery by applications is handled properly,&lt;/li&gt;
&lt;li&gt;secret managent including account and password rotation is automated&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;so that you can upgrade database versions automatically within 60 days or less across a fleet of thousands of database instances, then you are finished.&lt;/p&gt;
&lt;p&gt;But that requires a unique approach to automation that is not available widely, even in 2022.
It is certainly not available in AWS RDS, which thinks about singular instances at the level of &amp;ldquo;create an instance and apply a configuration&amp;rdquo;, with basic passive replication management tacked on as an afterthought (and expensive resiliency with DRBD).
It is ten years old technology, and that shows.&lt;/p&gt;
&lt;h2 id=&#34;observability-is-lacking&#34;&gt;
    &lt;a href=&#34;#observability-is-lacking&#34;&gt;
	Observability is lacking
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Also, Devops usually requires good observability:
Stack upwards, in the general direction of the developer, and stack downwards, into the general direction of the hardware.
MySQL for example, has pretty good aggregate monitoring &amp;ndash; the Telegraf MySQL collector is splendid and rather complete for a general MySQL collector.&lt;/p&gt;
&lt;p&gt;But the data collection for a singular query is underdeveloped, and gathering the data is slow and painful.
If you try to collect data about a single SQL query that just ran, &lt;a href=&#34;https://blog.koehntopp.info/2021/09/15/mysql-tracing-a-single-query-with-performanceschema.html&#34;&gt;it takes 10-12 followup queries to P_S&lt;/a&gt;

 to extract data about what this particular query did.
And you still did not have the execution plan, or the number of actual pages read for this single query.&lt;/p&gt;
&lt;p&gt;Conversely, while &lt;code&gt;blktrace&lt;/code&gt; collects all kinds of data about the I/O a system sees, the open source tools to visualize this are underdeveloped.
It took a commercial company and a commercial tool (&lt;a href=&#34;https://blog.koehntopp.info/2021/02/24/validating-storage.html&#34;&gt;Oakgate Workload Intelligence Analytics&lt;/a&gt;

) to provide tools to parse &lt;code&gt;blktrace&lt;/code&gt; and paint useful images from it.&lt;/p&gt;
&lt;h1 id=&#34;stateful-is-different-and-the-gap-is-far-from-closing&#34;&gt;
    &lt;a href=&#34;#stateful-is-different-and-the-gap-is-far-from-closing&#34;&gt;
	Stateful is different, and the gap is far from closing
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Of course, the YOLO stateless lets-quickly-make-another-instance mindset of DevOps cannot survive in Database Land.
Nobody in the DevOps crowd understands these things, and that in stateful systems errors and mistakes are not reversible.
Mistakes are persistent: data that is gone, is gone forever.
And new instances take an hour per TB.&lt;/p&gt;
&lt;p&gt;Nothing in the current DevOps propaganda takes any of this into account, hence Samuel&amp;rsquo;s observation is correct.&lt;/p&gt;
&lt;p&gt;On  the other side, there is little movement in DBA land.
There is a very complacent DBA crowd, and there are extremely complacent companies.
Oracle for example never ran their own products at scale, at least MySQL as a company, and later as a division in Oracle, never did it at scale until recently.&lt;/p&gt;
&lt;p&gt;So MySQL always had a bunch of wrong defaults, broken upgrade paths, insecure workflows and so on &amp;ndash; until Oracle Cloud was a thing.
Suddenly Oracle, at least Blue Oracle, had to actually run operations for their own stuff.
And that was good: the last 2 years have done more for MySQL Operational Simplicity than all the 20 years before.&lt;/p&gt;
&lt;p&gt;On the DBA side: most DBA departments positioned themselves as &amp;ldquo;guardians of the data&amp;rdquo; and as choke points, like old sysadmins did before DevOps.
They also did not automate database operations properly (&amp;ldquo;as a service&amp;rdquo;).
So there are few mature operational concepts for databases in the field, and even fewer codebases implementing them.
Mostly, I believe because there was never sufficient pressure.&lt;/p&gt;
&lt;p&gt;There is also not a lot of tooling for developers.
If you look at MySQL blogs, for example the collection at &lt;a href=&#34;https://planet.mysql.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Planet MySQL&lt;/a&gt;

, you will find that they often write about the database from an operational point of view (&amp;ldquo;How to configure mysql&amp;rdquo;, &amp;ldquo;How to make a backup&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;Only rarely, they write from a developer point of view (&amp;ldquo;How can I see my query performance through the ORM&amp;rdquo;, &amp;ldquo;What is the right way to notice a rollback, and restart a transaction in my host language&amp;rdquo;, &amp;ldquo;What is an efficient way to handle RMW-cycles in my host language&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;There is a big divide between Developers as users of a database, DBAs, and vendors/bloggers/community advocates.
With this being the case, and not being acknowledged, there is little chance for development.
Pickup of new strategies, discussion about gaps in tooling and social innovation is slow in such an environment.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debugging SQL in Python</title>
      <link>https://blog.koehntopp.info/2022/03/24/debugging-sql-in-python.html</link>
      <pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/03/24/debugging-sql-in-python.html</guid>
      <description>&lt;p&gt;When using MySQL with Python, you may want to use the &lt;code&gt;mysqlclient&lt;/code&gt; library, which is what most people do and which will work just fine.
Or you are using the official MySQL 8 Connector/Python package, which will behave slightly differently, but maybe supports the unique MySQL 8 feature already that is not in &lt;code&gt;mysqlclient&lt;/code&gt;, yet.&lt;/p&gt;
&lt;p&gt;Your SQL may be hand-writtten, or it may be generated using SQL Alchemy, Django or some other package.
If the latter is the case, it may be useful to be able to see the actual SQL string that has been sent to the database in order to facilitate interactive debugging.&lt;/p&gt;
&lt;h1 id=&#34;using-mysqlclient&#34;&gt;
    &lt;a href=&#34;#using-mysqlclient&#34;&gt;
	Using mysqlclient
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;If you are using &lt;code&gt;mysqlclient&lt;/code&gt; with Python, the class internally sends the SQL to the server in a method &lt;code&gt;_query(self, q)&lt;/code&gt; in the Cursor class (&lt;a href=&#34;https://github.com/PyMySQL/mysqlclient/blob/6ebc1a1972dee69fb54b56867fc795ee220b5d79/MySQLdb/cursors.py#L206&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;

).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;_query(self, q)&lt;/code&gt; method itself updates an &lt;code&gt;_executed&lt;/code&gt; member of the cursor to store the literal query string sent to the server.
But it does so only after having sent the query.
On error, an exception is raised and &lt;code&gt;_executed&lt;/code&gt; is not updated (&lt;a href=&#34;https://github.com/PyMySQL/mysqlclient/blob/6ebc1a1972dee69fb54b56867fc795ee220b5d79/MySQLdb/cursors.py#L316&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;

).&lt;/p&gt;
&lt;p&gt;To always get access to the actual query string, define a class &lt;code&gt;DebugCursor&lt;/code&gt;, and specify it with your connnection &lt;code&gt;**kwargs&lt;/code&gt;. In &lt;code&gt;DebugCursor&lt;/code&gt;, do the needful.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;MySQLdb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;MySQLdb.cursors&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DebugCursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MySQLdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DictCursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Debug: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;db_config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;kris&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;passwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;secret&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;kris&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;cursorclass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DebugCursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# referenced class must be defined before&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MySQLdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;select d from testtable where id = 3&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetchall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In our class &lt;code&gt;DebugCursor&lt;/code&gt;, we inherit from our cursor of choice.
We override &lt;code&gt;_query(self, q)&lt;/code&gt;, printing the query string &lt;code&gt;q&lt;/code&gt;, and then calling the parent class implementation.&lt;/p&gt;
&lt;p&gt;The output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; python3 probe.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Debug: b&amp;#39;select d from testtable where id = 3&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;({&amp;#39;d&amp;#39;: &amp;#39;drei&amp;#39;},)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can use this to trace-log all literal SQL before it is being executed, even if the query string is invalid or contains syntax errors.&lt;/p&gt;
&lt;h1 id=&#34;using-mysql-connectorpython&#34;&gt;
    &lt;a href=&#34;#using-mysql-connectorpython&#34;&gt;
	Using MySQL Connector/Python
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;If you are using Oracle MySQL Connnector/Python to connect to the database, the implementation can internally use Cython or a Pure Python implementation of the protocol.&lt;/p&gt;
&lt;p&gt;Both implementations behave slightly differently, unfortunately.
Only the Pure Python implementation can be debugged easily in all circumstances.
It is therefore important that you specify &lt;code&gt;use_pure=True&lt;/code&gt; with your connnection &lt;code&gt;**kwargs&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The raw SQL statement will be found in the cursor&amp;rsquo;s &lt;code&gt;_executed&lt;/code&gt; member.
If you are using multi-statements (don&amp;rsquo;t!), they will be logged in the &lt;code&gt;_executed_list&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We write:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;mysql.connector&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;mysql.connector.errors&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;db_config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;kris&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;passwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;geheim&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;kris&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;use_pure&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mysql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;=== Valid SQL: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;select d from testtable where id = 3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Debug: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_executed&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetchall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;=== Invalid SQL: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;syntaxerror d from testtable where id = 3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mysql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;errors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ProgrammingError&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Debug: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_executed&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Error: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The output looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; python3 probe.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;=== Valid SQL:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Debug: b&amp;#39;select d from testtable where id = 3&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[(&amp;#39;drei&amp;#39;,)]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;=== Invalid SQL:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Debug: b&amp;#39;syntaxerror d from testtable where id = 3&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Error: 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#39;syntaxerror d from testtable where id = 3&amp;#39; at line 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Again, we can use this to trace raw SQL and identify actual generated SQL syntax much easier.
This will allow us to pick up the literal SQL string, and debug interactively.&lt;/p&gt;
&lt;p&gt;The same program, when run without &lt;code&gt;use_pure=True&lt;/code&gt;, will not update &lt;code&gt;c._executed&lt;/code&gt; properly if the SQL is malformed.
It will produce the following output, which is worthless for debugging:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; python3 probe.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;=== Valid SQL:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Debug: b&amp;#39;select d from testtable where id = 3&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[(&amp;#39;drei&amp;#39;,)]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;=== Invalid SQL:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Debug: b&amp;#39;select d from testtable where id = 3&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Error: 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#39;syntaxerror d from testtable where id = 3&amp;#39; at line 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note how &lt;code&gt;c._executed&lt;/code&gt; still holds the previous statement and not the statement that actually errored.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Truncated incorrect DOUBLE value</title>
      <link>https://blog.koehntopp.info/2022/03/24/truncated-incorrect-double-value.html</link>
      <pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/03/24/truncated-incorrect-double-value.html</guid>
      <description>&lt;p&gt;I record this for posteriority without much comment.&lt;/p&gt;
&lt;p&gt;The error message &amp;ldquo;Truncated incorrect DOUBLE value&amp;rdquo; when issued by MySQL can be a confused parser, and masks unintended barely legal syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;testtable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;----+------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;----+------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eins&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zwei&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;drei&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;----+------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;testtable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;vier&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;and&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ERROR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1292&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22007&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Truncated&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;incorrect&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DOUBLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;vier&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The actual problem here is the incorrect use of &lt;code&gt;and&lt;/code&gt; in the &lt;code&gt;set&lt;/code&gt;-clause of the &lt;code&gt;update&lt;/code&gt; statement when a comma was intended.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;testtable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;vier&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Query&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;affected&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;02&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matched&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Changed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Warnings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Technically, an &lt;code&gt;and&lt;/code&gt; is possible and legal, if you wanted to produce a &lt;code&gt;boolean&lt;/code&gt;.
Most people do not want this at this point in the statement, though.
The error message is particularly unhelpful if you have no access to the literal raw SQL string for whatever reason.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spaces</title>
      <link>https://blog.koehntopp.info/2022/02/21/spaces.html</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/02/21/spaces.html</guid>
      <description>&lt;p&gt;On the morning of Saturday, 22nd February 2020, two years ago, my colleagues and I woke up to the a message from the company that said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&amp;ldquo;Spaces&amp;rdquo; Closed for Operations 23 Feb - 28 Feb&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;During the morning hours of Saturday, 22 February, a fire occurred on the first floor of the &amp;ldquo;Spaces&amp;rdquo; building.
The fire was extinguished promptly but due to smoke and residue particles that spread throughout the building, we will not be able to open &amp;ldquo;Spaces&amp;rdquo; for at least one weeks time.
The closure of the building is required to ensure we fully inspect the building, our equipment, clean the office of all smoke damage and residue and more importantly, ensure we have a safe working environment to return to.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It then took exactly one month instead of one week to fix that, and the planned reopening of the building fell on the exact day of the beginning of the COVID-19 lockdown.
So it has been today two years ago that I worked in an office the last time.&lt;/p&gt;
&lt;p&gt;I wrote into a company forum one year ago:&lt;/p&gt;
&lt;p&gt;We will be keeping this up until at least October, and I would be surprised if we are not going to be doing this for much longer the way this country handles Covid.&lt;/p&gt;
&lt;p&gt;Anyway, this is the cluttered mess of my Desk at home:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/02/spaces-1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Home machine, and lab equipment to the left, company Mac on the desk during the daytime, bunch of books left and right. On top, the stick for my Internet Spaceship. Under the desk to the right, the file server and gaming box.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It is very… lived in. I do change things too often for any pretty cabling or other cleanup to hold up.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/02/spaces-2.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;At least it has a decent view. That one hour commute to Spaces did pay off with a much more rural and spacious environment for home.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;But at least the view from my Desk is decent…&lt;/p&gt;
&lt;p&gt;I am sitting on a Dauphin Shape XXL, a proper office chair instead of some gaming thing, and the desk is an older IKEA standing desk, motorized.
I have cabled Internet at my desk, Wifi by Unifi in the house, and we have a 500/500 Mbit fiber connection at home, because faster Internet is not available where I live.&lt;/p&gt;
&lt;p&gt;Life ain’t bad.&lt;/p&gt;
&lt;p&gt;Never has been, actually.&lt;/p&gt;
&lt;p&gt;Going back, I always had a desk to work on at home. In Berlin, an entire room (which also had an office desk for my wife).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/02/spaces-3.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Geek wife doing geek wifey things on her Berlin desk.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In Karlsruhe, my GF and I had work desks in an office room, and actually almost never did use our living room.
We sat back to back, because that makes it easy to roll over and look at the other screen to check things out and help.&lt;/p&gt;
&lt;p&gt;In Kiel we had an office/living room double room, but the living room really saw use only on Tuesdays ever other week for the Tuesday meeting, when a bunch of Geeks were coming around for cooking and talks.&lt;/p&gt;
&lt;p&gt;And even as a student, having a working desk was more important than a proper living room, actually.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/02/spaces-4.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;1996 computer science student desk (see below &amp;ndash; 1)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I am thinking about it, I believe it’s because of my Dad.
He had a Ham Radio license, and “his” place in the house always was his shack, with all the electronics, the radios and antenna controls, basically a desk and a workbench next to it.
You’d find him more often there than anywhere else in the house.&lt;/p&gt;
&lt;p&gt;Why do we even have living rooms?
It’s a social convention that is hard to break.
I know that I would be in for a fight to the blood suggesting that we get rid of ours, but seriously?
“My” space is that desk/shack shown above, and not the living room.
It’s the place that I’ll fight for.&lt;/p&gt;
&lt;p&gt;Discussing this elsewhere, a friend sends me &lt;a href=&#34;https://www.youtube.com/watch?v=CJWOWksT1x4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Space &amp;ndash; A cluttered life: Middle-Class Abundance&lt;/a&gt;

.
The video discusses space use in American middle class families, who seem to have lives centered around the kitchen/eating space, which makes a lot of sense.&lt;/p&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li&gt;That 1996 desk.
That version of me had a Euro-ISDN semipermanent connection to my provider (128/128 kBit/s) and I also spent 50 Deutschmark for my own /24 provider independent IPv4 range.
All my machines had public addresses.
The machine is a Nextstation with 24 MB of memory, and a 25 MHz 68040 CPU, running what later would become MacOS X.
The white tower next to it has a 1 GB SCSI HDD full height (the two top slots), a 1x SCSI CD-ROM drive (Caddies required) and a SCSI QIC drive for DC 6525 tapes (525 MB/tape).
My body hides the full height tower case for the Dual-Pentium Linux box, you can only see the beige case of the b/w monitor it has.
We were using BNC based 10 MBit/s Ethernet at that time.
This box also has the ISDN card.
Unfortunately the driver had a memory leak, and we were losing a bit of memory every time the ISDN link goes up or down, because some driver internal data structures are allocated and never deallocated.
The loss accumulates to around 1 MB per week.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Databases: How large is too large?</title>
      <link>https://blog.koehntopp.info/2022/02/16/databases-how-large-is-too-large.html</link>
      <pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/02/16/databases-how-large-is-too-large.html</guid>
      <description>&lt;p&gt;A database is a special kind of structured, persistent, global variable with concurrent access over the network.&lt;/p&gt;
&lt;p&gt;You write data to a cell of a row of a table in a schema in the server, and it is being kept around for you, with a lifetime longer than the runtime of your program.
The database takes care of making sure of ordering access to that data, so there is a clearly defined series of changes to the data – locking, transactions, isolation are things that make databases popular.&lt;/p&gt;
&lt;p&gt;And so one gets to have a lot of database schemas in server instances, and they grow.
Sometimes that becomes a problem.&lt;/p&gt;
&lt;h1 id=&#34;databases-dont-scale-even-when-they-scale&#34;&gt;
    &lt;a href=&#34;#databases-dont-scale-even-when-they-scale&#34;&gt;
	Databases don&amp;rsquo;t scale, even when they scale
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;These days, the MySQL server can easily utilize the resources even of very large servers.
At work, we have taken instances easily up to 400.000 queries per second on AMD EPYC servers with 64 cores and one terabyte of memory, without special tuning.
With careful tuning, more than a million QPS is achievable.
MySQL scales extremely well these days.&lt;/p&gt;
&lt;p&gt;For a long time, MySQL also has been a very low latency/high connection database:
since it uses a multithreading approach with a pre-generated thread pool, it can handle up to around 10k connections comfortably, and three times more at cost.
It can handle disconnect and reconnect situations in a way that is more reminiscent of an LDAP server than a database.&lt;/p&gt;
&lt;p&gt;And it can answer single point primary key lookups from memory – the workload a &lt;code&gt;memcached&lt;/code&gt; handles – at &lt;code&gt;memcached&lt;/code&gt; speeds:
We see query resolution times including SQL parsing that are as low as 0.12ms (120µs).&lt;/p&gt;
&lt;h1 id=&#34;what-doesnt-scale-_server-creation-time_&#34;&gt;
    &lt;a href=&#34;#what-doesnt-scale-_server-creation-time_&#34;&gt;
	What doesn&amp;rsquo;t scale: &lt;em&gt;server creation time&lt;/em&gt;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;MySQL replication hierarchies are designed as shared-nothing architectures.
Creating a new server means you have to copy the data for the server into place, and then let replication catch up.&lt;/p&gt;
&lt;p&gt;There are storage trickeries that can be played, but they have long term consequences that need mitigation.
They also tie their user to very costly and very specific storage architectures and that is not a thing anybody can afford to have as a technical debt item on their sheet.&lt;/p&gt;
&lt;h1 id=&#34;a-relativity-theory-of-databases-for-data-space-is-time&#34;&gt;
    &lt;a href=&#34;#a-relativity-theory-of-databases-for-data-space-is-time&#34;&gt;
	A Relativity Theory of databases: For data, space is time.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;When we create new databases, we copy the data over.
In the end, the network is very fast:
At 10  Gbit/s, we are looking at a stream of 1.25 GB/s coming in that we need to be able to persist at the receiving end, and that we need to provide at the sending end.&lt;/p&gt;
&lt;p&gt;Looking at storage, we can see that in all but one situation, the bottleneck is not the network:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A conventional HDD with rotating rust can serve reliably around 200 MB/s in a linear read or write (&lt;a href=&#34;https://toshiba.semicon-storage.com/ap-en/storage/product/data-center-enterprise/cloud-scale-capacity/articles/mg07acaxxx.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Toshiba HDD specs&lt;/a&gt;

 provide some reference).&lt;/li&gt;
&lt;li&gt;A SSD usually gives us twice this, so we see streams of around 400-500 MB/s (&lt;a href=&#34;https://www.micron.com/-/media/client/global/documents/products/product-flyer/5300_product_brief.pdf?la=en&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Micron SSD specs&lt;/a&gt;

 provide some reference).&lt;/li&gt;
&lt;li&gt;Openstack instances are quota&amp;rsquo;ed, and often get something like 400 MB/s quota again, which nicely matches expectations of SSD users.&lt;/li&gt;
&lt;li&gt;A NVME flash device can provide on the upside of 3000 MB/s (3 GB/s) sustained data rate when enterprise grade hardware is purchased (&lt;a href=&#34;http://brochure.stebis.nl/Micron9300.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Micron NVME specs&lt;/a&gt;

 provide some reference).
This is the one single case where a 10 GBit/s network interface actually is becoming a bottleneck, but of course more network is available if you have the coin.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How long does it take to copy one Terabyte of data, assuming linear streaming access?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;At 200 MB/s, we get 12000 MB/min = ~12 GB/min, or around 85.3 minutes for 1024 GB.&lt;/li&gt;
&lt;li&gt;At 400 MB/s, that is twice the speed or half the time, 42.6 minutes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add time for replication to catch up, and round up to a nice round number for rule of thumb estimates:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;At 400 MB/s, copying one Terabyte of data takes 45 minutes to copy and 15 minutes for replication catchup, for a total of &lt;strong&gt;one hour per Terabyte of data size&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;size-constraints-for-databases&#34;&gt;
    &lt;a href=&#34;#size-constraints-for-databases&#34;&gt;
	Size constraints for databases
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;In database land, we copy databases all the time:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To make backups.&lt;/li&gt;
&lt;li&gt;To make more replicas in order to scale a pool up.&lt;/li&gt;
&lt;li&gt;To replace replicas that have left the pool to go into maintenance.&lt;/li&gt;
&lt;li&gt;To create special purpose replicas that may or may not be useful after having served their special purpose.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each replica we make needs a donor instance, and often a donor instance can donate only to one receiver at a single point in time.&lt;/p&gt;
&lt;p&gt;All taken together means that asking for more replicas is not instantaneous.
You will have to wait one hour per TB of data size, and longer if there is need to clone up some donors to be able to parallelize cloning.&lt;/p&gt;
&lt;p&gt;Here are some good numbers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Typical HPE or Dell blades at work have a single or two internal drives of 1.92 TB (&amp;ldquo;two TB&amp;rdquo;) each.
If the instances make full use of them, preparing a blade takes slightly under 2h or 4h.&lt;/li&gt;
&lt;li&gt;In a single workday of 8h, you can probably expect one attempt per day to do &amp;ldquo;a thing&amp;rdquo;  to a database of ~10 TB size.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From this we get a few very strong recommendations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;200-250 GB&lt;/strong&gt; databases can be replicated in intervals that fit into K8s readiness probes.
That is why Vitess and also many Postgres based clustering products recommend small instance sizes of 250 GB or less.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2-4 TB&lt;/strong&gt; data size give you &amp;ldquo;several attempts at maintenance per day&amp;rdquo;, and also fit standard blade on premises or i3.2xl and i3.4xl instances in EC2.
They are probably the upper end of supportable database size in terms of wait times due to data copies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;10 TB&lt;/strong&gt; data size is where toil explodes, because they are in the &amp;ldquo;a single attempt per day&amp;rdquo; class.
If you have databases that are larger than this, you need to have a long and hard look at your life and architecture choices, and the implications of them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;reactive-autoscaling-is-not-a-thing&#34;&gt;
    &lt;a href=&#34;#reactive-autoscaling-is-not-a-thing&#34;&gt;
	Reactive autoscaling is not a thing
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;It also means that reactive autoscaling of database instances does not work at all:
By the time you have scaled up, the demand is already handled by existing capacity or you have died.&lt;/p&gt;
&lt;p&gt;You will need ongoing capacity testing and predictive autoscaling that gives you some headroom  for the unexpected.&lt;/p&gt;
&lt;p&gt;Using spot instances is also very likely to make you very unhappy or very offline or both.&lt;/p&gt;
&lt;h1 id=&#34;tldr&#34;&gt;
    &lt;a href=&#34;#tldr&#34;&gt;
	TL;DR
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;There is a soft 2 TB boundary and a hard 10 TB boundary.
They are defined by physics, so they are not negotiable and cannot be removed by throwing money at it.&lt;/p&gt;
&lt;p&gt;When you reach these sizes, talk to your DBA about alternatives.
Treat the 2TB boundary as a complexity inflection point, and use the remaining time as runway to branch out into alternative solutions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Revisiting the file server</title>
      <link>https://blog.koehntopp.info/2022/02/06/revisiting-the-file-server.html</link>
      <pubDate>Sun, 06 Feb 2022 21:06:03 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/02/06/revisiting-the-file-server.html</guid>
      <description>&lt;p&gt;The new disks in the file server had synchronized nicely, and that resulted in an interesting graph:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/02/disk-sync.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sectors on the outer part of a hard disk are transferred faster than inner sectors. You can see how the disk speed halves between the outermost and the innermost part.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;While watching, I decided on a whim that I wanted to convert the entire setup from using Linux &lt;code&gt;mdraid&lt;/code&gt; to &lt;code&gt;dmraid&lt;/code&gt;, the LVM2 implementation of RAID1.
It is essentially the same code, but integrated into LVM2 instead of using &lt;code&gt;mdadm&lt;/code&gt; for control.&lt;/p&gt;
&lt;p&gt;I had already experimented with &lt;code&gt;dmraid&lt;/code&gt; before, as documented in &lt;a href=&#34;https://blog.koehntopp.info/2019/12/02/cloning-and-splitting-logical-volumes.html&#34;&gt;an earlier article&lt;/a&gt;

, and that was &lt;a href=&#34;https://blog.koehntopp.info/2019/12/03/trying-lvmraid-for-real.html&#34;&gt;not without problems&lt;/a&gt;

.
But since the array would contain no original data, only backups, I decided to give it a try.&lt;/p&gt;
&lt;p&gt;So here we go:&lt;/p&gt;
&lt;h1 id=&#34;destroying-the-mdraid&#34;&gt;
    &lt;a href=&#34;#destroying-the-mdraid&#34;&gt;
	Destroying the &lt;code&gt;mdraid&lt;/code&gt;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;I had created a RAID-1 pair of the disks &lt;code&gt;/dev/sdb2&lt;/code&gt; and &lt;code&gt;/dev/sdc2&lt;/code&gt; under the name &lt;code&gt;/dev/md126&lt;/code&gt;, then added &lt;code&gt;/dev/md126&lt;/code&gt; to the &lt;code&gt;hdd&lt;/code&gt; volume group. In order to get the disks back, I had to undo this.&lt;/p&gt;
&lt;p&gt;So we need to check if the &lt;code&gt;/dev/md126&lt;/code&gt; PV is empty:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvdisplay --map /dev/sda2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  --- Physical volume ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PV Name               /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  VG Name               hdd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PV Size               9.09 TiB / not usable 1022.98 MiB
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Allocatable           yes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PE Size               1.00 GiB
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Total PE              9303
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Free PE               9303
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Allocated PE          0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PV UUID               ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;  --- Physical Segments ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 1 to 9302:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    FREE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s fine. We can remove the pair from the volume group again, remove the LVM2 label, and then stop and destroy the raid:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; vgreduce hdd /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvremove /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mdadm --stop /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mdadm --remove /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mdadm --zero-superblock /dev/sdb2 /dev/sdc2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That did not work: An Ubuntu Component, &lt;code&gt;os-prober&lt;/code&gt;, took possession of the devices after removing the RAID-1. I had to actually uninstall the component and remove the &lt;code&gt;osprober&lt;/code&gt; from devicemapper before I could continue:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;### After uninstalling os-prober:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; dmsetup ls
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; dmsetup remove osprober-linux-sdb2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; dmsetup remove osprober-linux-sdc2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mdadm --zero-superblock /dev/sdb2 /dev/sdc2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;preparing-the-disks-individually-for-lvm2&#34;&gt;
    &lt;a href=&#34;#preparing-the-disks-individually-for-lvm2&#34;&gt;
	Preparing the disks individually for LVM2
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Only then I could continue, add the disks to LVM2 and extend the &lt;code&gt;hdd&lt;/code&gt; volume group:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvcreate /dev/sd&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;b,c&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; vgextend hdd /dev/sd&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;b,c&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We now have a very weird, asymmetric VG in which there is a single 9.09 TiB raid PV and two 9.09 TiB unraided PVs.
Our next objective is to evacuate the raided PV, and then destroy this as well, adding the disks back unraided.
This will result in a 36 TiB total VG.&lt;/p&gt;
&lt;h1 id=&#34;evacuating-devmd127-to-unraid-it&#34;&gt;
    &lt;a href=&#34;#evacuating-devmd127-to-unraid-it&#34;&gt;
	Evacuating &lt;code&gt;/dev/md127&lt;/code&gt; to unraid it
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;This is going to take a long time. We need to do this in a &lt;code&gt;tmux&lt;/code&gt; session:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvmove /dev/md127 /dev/sdb2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will, over the course of about one day, move all physical extents from &lt;code&gt;/dev/md127&lt;/code&gt; to &lt;code&gt;/dev/sdb2&lt;/code&gt;.
This exposes us to disk failure, as for the moment the data on &lt;code&gt;/dev/sdb2&lt;/code&gt; is unraided.&lt;/p&gt;
&lt;h1 id=&#34;restoring-redundancy&#34;&gt;
    &lt;a href=&#34;#restoring-redundancy&#34;&gt;
	Restoring redundancy
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;There are two kinds of backup on this disk pack:
A number of Apple Time Machine targets and an Acronis Windws target, &lt;code&gt;tm_*&lt;/code&gt; and &lt;code&gt;win_*&lt;/code&gt;, and an internal backup that is being produced by a cron job, &lt;code&gt;rsync&lt;/code&gt;ing data from the internal SSDs to the disks, &lt;code&gt;/backup&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I decided to destroy the &lt;code&gt;/backup&lt;/code&gt; LV and recreate it as a &lt;code&gt;raid10&lt;/code&gt; across all 4 disks.
This was relatively easy, and worked immediately &amp;ndash; it just took a few hours for the backup job to run from scratch.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; umount /backup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvremove /dev/hdd/backup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvcreate --type raid10 -i2 -m1 -n backup -L4T hdd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mkfs -t xfs -f /dev/hdd/backup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mount /backup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; /root/bin/make-backup
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For the Time Machine and Acronis targets, I decided to &lt;code&gt;lvconvert&lt;/code&gt; them to &lt;code&gt;raid1&lt;/code&gt;.
&lt;a href=&#34;https://blog.koehntopp.info/2019/12/02/cloning-and-splitting-logical-volumes.html&#34;&gt;As stated before&lt;/a&gt;

, there are two competing implementations of of RAID in LVM2, &lt;code&gt;--type mirror&lt;/code&gt; and &lt;code&gt;--type raid1&lt;/code&gt;.
The &lt;code&gt;mirror&lt;/code&gt; implementation is very extremely strongly deprecated, the &lt;code&gt;raid1&lt;/code&gt; implementation is okay, because it uses the same code as  &lt;code&gt;mdraid&lt;/code&gt; internally.&lt;/p&gt;
&lt;p&gt;We need to make sure to specify &lt;code&gt;--type raid1&lt;/code&gt; in the &lt;code&gt;lvconvert&lt;/code&gt; command to ensure the proper type is being used.
For each target we do&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvconvert --type raid1 -m1 /dev/hdd/tm_...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This returns immediately, and begins to sync the mirror halves internally.
If we at this point convert all Time Machine and Acronis targets at once, the sync speed is abysmally slow, because of disk head treshing.
There is no way to stop this.
The only option is to slow down all resyncs except one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;### for all targets, slow them down to minimum&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;  lvchange --maxrecoveryspeed&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1k /dev/hdd/tm_...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;### for one target, set a very large max speed:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvchange --maxrecoveryspeed&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;100000k /dev/hdd/tm_...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and then let one &lt;code&gt;tm_...&lt;/code&gt; target finish.
After that, we can increase the max sync speed for the next target, and so on.&lt;/p&gt;
&lt;p&gt;This is what a &lt;code&gt;--type raid1&lt;/code&gt; looks like in &lt;code&gt;lsblk&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lsblk /dev/sda2 /dev/sdg2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;NAME                     MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sda2                       8:2    0  9.1T  0 part
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;├─hdd-tm_aircat_rmeta_0  253:18   0    1G  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;│ └─hdd-tm_aircat        253:20   0    1T  0 lvm  /export/tm_aircat
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;├─hdd-tm_aircat_rimage_0 253:25   0    1T  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;│ └─hdd-tm_aircat        253:20   0    1T  0 lvm  /export/tm_aircat
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sdg2                       8:98   0  9.1T  0 part
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;├─hdd-tm_aircat_rmeta_1  253:26   0    1G  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;│ └─hdd-tm_aircat        253:20   0    1T  0 lvm  /export/tm_aircat
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;├─hdd-tm_aircat_rimage_1 253:30   0    1T  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;│ └─hdd-tm_aircat        253:20   0    1T  0 lvm  /export/tm_aircat
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That is, for each leg of the RAID1 you get a &lt;code&gt;rimage&lt;/code&gt; and &lt;code&gt;rmeta&lt;/code&gt; LV.
If the LVs are named &lt;code&gt;mimage_0&lt;/code&gt; and &lt;code&gt;mimage1&lt;/code&gt; and there is no &lt;code&gt;rmeta&lt;/code&gt; but only a single &lt;code&gt;mlog&lt;/code&gt;, this is not &lt;code&gt;--type raid&lt;/code&gt;, but the deprecated &lt;code&gt;mirror&lt;/code&gt; implementation.
This is not good, and should be converted to &lt;code&gt;--type raid1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There is no way to convert a &lt;code&gt;linear&lt;/code&gt; or &lt;code&gt;raid1&lt;/code&gt; to &lt;code&gt;raid10&lt;/code&gt;, unfortunately.&lt;/p&gt;
&lt;h1 id=&#34;checking-status-and-progress&#34;&gt;
    &lt;a href=&#34;#checking-status-and-progress&#34;&gt;
	Checking status and progress
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A few handy commands to check the status and the progress of the conversion.&lt;/p&gt;
&lt;p&gt;Monitor the sync state of the devices:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvs -a -o name,copy_percent,devices,raid_max_recovery_rate,raid_mismatch_count,raid_sync_action hdd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;-a&lt;/code&gt; shows all the LVs, even the internal ones.
We are interested into the &lt;code&gt;copy_percent&lt;/code&gt; to see the progress of the sync.
We also want the &lt;code&gt;max_recovery_rate&lt;/code&gt;, because we might have throttled it with the &lt;code&gt;lvchange&lt;/code&gt; command mentioned above.
And we want to see the &lt;code&gt;raid_mismatch_count&lt;/code&gt; and &lt;code&gt;raid_sync_action&lt;/code&gt; to see what&amp;rsquo;s going on.&lt;/p&gt;
&lt;p&gt;Of course, the ubiquitous &lt;code&gt;lvs -a -o +devices&lt;/code&gt; is always handy to get an impression of the entire VG:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvs -a -o +devices hdd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  LV                   VG  Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert Devices
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  backup               hdd rwi-aor---   4.00t                                    100.00           backup_rimage_0(0),backup_rimage_1(0),backup_rimage_2(0),backup_rimage_3(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rimage_0]    hdd iwi-aor---   2.00t                                                     /dev/sdb2(2561)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rimage_1]    hdd iwi-aor---   2.00t                                                     /dev/sdc2(1)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rimage_2]    hdd iwi-aor---   2.00t                                                     /dev/sda2(1026)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rimage_3]    hdd iwi-aor---   2.00t                                                     /dev/sdg2(3158)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rmeta_0]     hdd ewi-aor---   1.00g                                                     /dev/sdb2(2560)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rmeta_1]     hdd ewi-aor---   1.00g                                                     /dev/sdc2(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rmeta_2]     hdd ewi-aor---   1.00g                                                     /dev/sda2(1025)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rmeta_3]     hdd ewi-aor---   1.00g                                                     /dev/sdg2(3157)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  tm_aircat            hdd rwi-aor---   1.00t                                    100.00           tm_aircat_rimage_0(0),tm_aircat_rimage_1(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_aircat_rimage_0] hdd iwi-aor---   1.00t                                                     /dev/sda2(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_aircat_rimage_1] hdd iwi-aor---   1.00t                                                     /dev/sdg2(2133)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_aircat_rmeta_0]  hdd ewi-aor---   1.00g                                                     /dev/sda2(1024)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_aircat_rmeta_1]  hdd ewi-aor---   1.00g                                                     /dev/sdg2(2132)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  tm_joram             hdd rwi-aor---   1.50t                                    100.00           tm_joram_rimage_0(0),tm_joram_rimage_1(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_joram_rimage_0]  hdd iwi-aor---   1.50t                                                     /dev/sdc2(2049)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_joram_rimage_1]  hdd iwi-aor---   1.50t                                                     /dev/sdb2(1)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_joram_rmeta_0]   hdd ewi-aor---   1.00g                                                     /dev/sdc2(3585)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_joram_rmeta_1]   hdd ewi-aor---   1.00g                                                     /dev/sdb2(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  tm_mini              hdd rwi-aor--- 512.00g                                    100.00           tm_mini_rimage_0(0),tm_mini_rimage_1(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_mini_rimage_0]   hdd iwi-aor--- 512.00g                                                     /dev/sdb2(8786)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_mini_rimage_1]   hdd iwi-aor--- 512.00g                                                     /dev/sdc2(4609)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_mini_rmeta_0]    hdd ewi-aor---   1.00g                                                     /dev/sdb2(9298)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_mini_rmeta_1]    hdd ewi-aor---   1.00g                                                     /dev/sdc2(4608)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  win_kk               hdd rwi-aor---   2.08t                                    100.00           win_kk_rimage_0(0),win_kk_rimage_1(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [win_kk_rimage_0]    hdd iwi-aor---   2.08t                                                     /dev/sdg2(2)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [win_kk_rimage_1]    hdd iwi-aor---   2.08t                                                     /dev/sda2(3075)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [win_kk_rmeta_0]     hdd ewi-aor---   1.00g                                                     /dev/sdg2(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [win_kk_rmeta_1]     hdd ewi-aor---   1.00g                                                     /dev/sda2(3074)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Another way to look at the construct is &lt;code&gt;lsblk&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lsblk /dev/sd&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;a,b,c,g&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;NAME                       MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sda                          8:0    0  9.1T  0 disk
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;├─sda1                       8:1    0   10G  0 part
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;└─sda2                       8:2    0  9.1T  0 part
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  ├─hdd-tm_aircat_rmeta_0  253:18   0    1G  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  │ └─hdd-tm_aircat        253:20   0    1T  0 lvm  /export/tm_aircat
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  ├─hdd-tm_aircat_rimage_0 253:25   0    1T  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  │ └─hdd-tm_aircat        253:20   0    1T  0 lvm  /export/tm_aircat
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  ├─hdd-backup_rmeta_2     253:35   0    1G  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  │ └─hdd-backup           253:39   0    4T  0 lvm  /backup
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  ├─hdd-backup_rimage_2    253:36   0    2T  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  │ └─hdd-backup           253:39   0    4T  0 lvm  /backup
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  ├─hdd-win_kk_rmeta_1     253:42   0    1G  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  │ └─hdd-win_kk           253:23   0  2.1T  0 lvm  /export/win_kk
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  └─hdd-win_kk_rimage_1    253:43   0  2.1T  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    └─hdd-win_kk           253:23   0  2.1T  0 lvm  /export/win_kk
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;what-is-where&#34;&gt;
    &lt;a href=&#34;#what-is-where&#34;&gt;
	What is where?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;And of course, we might be interested into the actual distribution of data on the disk:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvdisplay --map /dev/sd&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;a,b,c,g&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  --- Physical volume ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PV Name               /dev/sdg2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  VG Name               hdd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PV Size               9.09 TiB / not usable 1022.98 MiB
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Allocatable           yes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PE Size               1.00 GiB
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Total PE              9303
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Free PE               4098
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Allocated PE          5205
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PV UUID               ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;  --- Physical Segments ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 0 to 0:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/win_kk_rmeta_0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 1 to 1:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    FREE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 2 to 2131:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/win_kk_rimage_0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 2129
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 2132 to 2132:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/tm_aircat_rmeta_1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 2133 to 3156:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/tm_aircat_rimage_1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 1023
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 3157 to 3157:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/backup_rmeta_3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 3158 to 5205:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/backup_rimage_3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 2047
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 5206 to 9302:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    FREE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;defragmenting-devsdb2&#34;&gt;
    &lt;a href=&#34;#defragmenting-devsdb2&#34;&gt;
	Defragmenting &lt;code&gt;dev/sdb2&lt;/code&gt;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Due to the way we created things, initially all &lt;code&gt;RAID1&lt;/code&gt; have the left leg of their mirror on &lt;code&gt;/dev/sdb2&lt;/code&gt;, because that is where we &lt;code&gt;pvmove&lt;/code&gt;ed stuff initially.
We might want to fix that, and push a few things over.
I did that, as can be seen by the &lt;code&gt;lvs -a -o +devices hdd&lt;/code&gt; output further up.&lt;/p&gt;
&lt;p&gt;Here is how:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvmove -n &amp;lt;LV_name&amp;gt; /dev/sdb2 /dev/sdg2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will move all data belonging to &lt;code&gt;LV_name&lt;/code&gt; that is currently on &lt;code&gt;/dev/sdb2&lt;/code&gt; to &lt;code&gt;/dev/sdg2&lt;/code&gt;.
Again, this will take a long time, and there should be no other sync action currently active for maximum speed, as rotating disks slow down a lot when there are competing disk seeks.&lt;/p&gt;
&lt;p&gt;This leaves us with a fragmented &lt;code&gt;/dev/sdb2&lt;/code&gt; and LVs on higher numbered extents, which are a lot slower than lower numbered extents.
We could fix that as well, again with &lt;code&gt;pvmove&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvdisplay --map /dev/sdc2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 3587 to 3596:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/keks_rimage_1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 9
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 3597 to 4607:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    FREE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvmove -n keks --alloc anywhere /dev/sdc2:3587-3596 /dev/sdc2:4000-4009
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; /dev/sdc2: Moved: 0.00%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; /dev/sdc2: Moved: 100.00%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This moves extents internally on a drive.
&lt;code&gt;pvmove&lt;/code&gt; normally refuses to do this, so we have to tell it to shut up about this, using &lt;code&gt;--alloc anywhere&lt;/code&gt;.
We then use extent-addressing to change the map manually:
We move data from &lt;code&gt;/dev/sdc2:3587-3596&lt;/code&gt;, the entire &lt;code&gt;keks&lt;/code&gt; Test-LV, somewhere into the &lt;code&gt;FREE&lt;/code&gt; space, &lt;code&gt;4000-4009&lt;/code&gt;.
The result looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 3587 to 3999:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    FREE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 4000 to 4009:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/keks_rimage_1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 9
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 4010 to 4607:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    FREE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvremove /dev/hdd/keks
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Do you really want to remove and DISCARD active logical volume hdd/keks? [y/n]: y
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Logical volume &amp;#34;keks&amp;#34; successfully removed
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And that concludes a largely pointless refactoring of my home storage, because I could.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; vgs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  VG     #PV #LV #SN Attr   VSize   VFree
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  data     2  15   0 wz--n-   7.28t   3.25t
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  hdd      4   5   0 wz--n-  36.34t  18.17t
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  system   1   4   0 wz--n- 466.94g 234.94g
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;do-you-have-checksums&#34;&gt;
    &lt;a href=&#34;#do-you-have-checksums&#34;&gt;
	Do you have checksums?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Not yet.
There is a thing called &lt;code&gt;dm-integrity&lt;/code&gt;, though, and a &lt;a href=&#34;https://gist.github.com/MawKKe/caa2bbf7edcc072129d73b61ae7815fb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gist&lt;/a&gt;

 that I have to try. The &lt;a href=&#34;https://www.kernel.org/doc/html/latest/admin-guide/device-mapper/dm-integrity.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dm-integrity Documentation&lt;/a&gt;

 is here.
And &lt;code&gt;integritysetup&lt;/code&gt; is part of &lt;code&gt;cryptsetup-bin&lt;/code&gt; on Ubuntu.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time to grow the file server</title>
      <link>https://blog.koehntopp.info/2022/02/01/time-to-grow-the-file-server.html</link>
      <pubDate>Tue, 01 Feb 2022 21:06:03 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/02/01/time-to-grow-the-file-server.html</guid>
      <description>&lt;p&gt;The old file server was full, and since the little one got more local storage in his laptop, I also needed more storage for backup to match.
I am running a 5x cage using up 3 disk slots in a Midi-Tower.
Two slots are filled with Seagate Ironwolf 10 TB disks already, the rest is available.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.amazon.de/-/en/gp/product/B019HE69FO&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/02/cold-storage1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A 5x &lt;a href=&#34;https://www.amazon.de/-/en/gp/product/B019HE69FO&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hot swap disk cage&lt;/a&gt;

 using 3 disk slots in a midi tower.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The disk situation in the machine was like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo vgs
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[sudo] password for kris: 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  VG     #PV #LV #SN Attr   VSize   VFree
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  data     2  16   0 wz--n-   7.28t   3.24t
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  hdd      2   5   0 wz--n-   9.08t   5.00g
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  system   1   4   0 wz--n- 466.94g 234.94g
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;hdd&lt;/code&gt; volume group is running in a RAID-1 configuration using &lt;code&gt;mdraid&lt;/code&gt; for historical reasons - this is a very old machine.
Additional space would be added as another &lt;code&gt;mdraid&lt;/code&gt;, and then linearly extend the existing volume.
That is fine, the disks are used as backup targets for a number of Mac devices only and speed or seeks are not our primary goal.&lt;/p&gt;
&lt;p&gt;I ordered two additional Seagate Ironwolf 10 TB disks to match the existing ones.
They came in rather cold from the delivery van:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/02/cold-storage2.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;After unpacking the disk chassis had single digit celsius temperatures.
When I remembered to take a thermal image they were already warmed up a bit.
I let them warm up a bit more before I put them in.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Pushing in the disks generated a lot of kernel log, and also a nice graph in the temperature monitoring:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/02/cold-storage3.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The new disks are warming up rapidly. The dropping line is a scratch disk that I have been taking out of slot 3 and pushing back in into slot 5.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556459.695008] ata2: SRST failed (errno=-16)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.651016] ata2: SATA link up 3.0 Gbps (SStatus 123 SControl 300)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.671217] ata2.00: ATA-11: ST10000VN0008-2PJ103, SC61, max UDMA/133
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.671220] ata2.00: 19532873728 sectors, multi 16: LBA48 NCQ (depth 31/32)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676016] ata2.00: configured for UDMA/133
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676157] scsi 1:0:0:0: Direct-Access     ATA      ST10000VN0008-2P SC61 PQ: 0 ANSI: 5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676549] sd 1:0:0:0: Attached scsi generic sg1 type 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676844] sd 1:0:0:0: [sdb] 19532873728 512-byte logical blocks: (10.0 TB/9.10 TiB)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676847] sd 1:0:0:0: [sdb] 4096-byte physical blocks
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676879] sd 1:0:0:0: [sdb] Write Protect is off
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676885] sd 1:0:0:0: [sdb] Mode Sense: 00 3a 00 00
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676973] sd 1:0:0:0: [sdb] Write cache: enabled, read cache: enabled, doesn&amp;#39;t support DPO or FUA
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.771798] sd 1:0:0:0: [sdb] Attached SCSI disk
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556464.406986] ata3: link is slow to respond, please be patient (ready=0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556468.514986] ata3: SRST failed (errno=-16)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.586999] ata3: SATA link up 3.0 Gbps (SStatus 123 SControl 300)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.589417] ata3.00: ATA-11: ST10000VN0008-2PJ103, SC61, max UDMA/133
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.589420] ata3.00: 19532873728 sectors, multi 16: LBA48 NCQ (depth 31/32)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.594222] ata3.00: configured for UDMA/133
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.594361] scsi 2:0:0:0: Direct-Access     ATA      ST10000VN0008-2P SC61 PQ: 0 ANSI: 5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.594676] sd 2:0:0:0: Attached scsi generic sg2 type 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.594933] sd 2:0:0:0: [sdc] 19532873728 512-byte logical blocks: (10.0 TB/9.10 TiB)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.594937] sd 2:0:0:0: [sdc] 4096-byte physical blocks
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.595017] sd 2:0:0:0: [sdc] Write Protect is off
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.595022] sd 2:0:0:0: [sdc] Mode Sense: 00 3a 00 00
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.595120] sd 2:0:0:0: [sdc] Write cache: enabled, read cache: enabled, doesn&amp;#39;t support DPO or FUA
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.695659] sd 2:0:0:0: [sdc] Attached SCSI disk
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Yup, 3 GBps. This is an old &lt;code&gt;i7-3770&lt;/code&gt; with an old SATA subsystem to match.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I created partition tables using &lt;code&gt;sfdisk&lt;/code&gt;, copying from the existing &lt;code&gt;sda&lt;/code&gt; (another Ironwolf) to the new devices &lt;code&gt;sdb&lt;/code&gt; and &lt;code&gt;sdc&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo sfdisk -d /dev/sda | sudo sfdisk /dev/sdb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo sfdisk -d /dev/sda | sudo sfdisk /dev/sdc
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo sfdisk -d /dev/sdb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;label: gpt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;label-id: ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;device: /dev/sdb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;unit: sectors
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;first-lba: 34
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;last-lba: 19532873694
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;/dev/sdb1 : start=        2048, size=    20971520, type=..., uuid=...., name=&amp;#34;Linux filesystem&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/dev/sdb2 : start=    20973568, size= 19511900127, type=..., uuid=...., name=&amp;#34;Linux RAID&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This works, because &lt;code&gt;sfdisk&lt;/code&gt; like &lt;code&gt;sgdisk&lt;/code&gt; understands about MBR and GPT partition tables, and can handle large 10 TB partitions. We have a 10 GB &lt;code&gt;/dev/sdb1&lt;/code&gt; as a potential boot space, and use the rest of the disk as a giant &lt;code&gt;/dev/sdb2&lt;/code&gt; in LVM2. The other disk, &lt;code&gt;/dev/sdc&lt;/code&gt; matches this.&lt;/p&gt;
&lt;p&gt;We can then construct the RAID from the two partitions &lt;code&gt;/dev/sd{b,c}2&lt;/code&gt;. Because this is a large device, &lt;code&gt;mdadm&lt;/code&gt; will also automatically add an internal bitmap.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo mdadm -C /dev/md126 --level=1 --raid-devices=2 /dev/sd{b,c}2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo mdadm --detail /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/dev/md126:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;           Version : 1.2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     Creation Time : Tue Feb  1 20:23:20 2022
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        Raid Level : raid1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        Array Size : 9755817920 (9303.87 GiB 9989.96 GB)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     Used Dev Size : 9755817920 (9303.87 GiB 9989.96 GB)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Raid Devices : 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     Total Devices : 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       Persistence : Superblock is persistent
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;     Intent Bitmap : Internal
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;       Update Time : Tue Feb  1 21:27:07 2022
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;             State : clean, resyncing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Active Devices : 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   Working Devices : 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Failed Devices : 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     Spare Devices : 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Consistency Policy : bitmap
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;     Resync Status : 0% complete
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;              Name : server:126  (local to host server)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;              UUID : ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;            Events : 799
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;    Number   Major   Minor   RaidDevice State
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       0       8       18        0      active sync   /dev/sdb2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       1       8       34        1      active sync   /dev/sdc2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And while the RAID synchronizes in the background, we can turn the new device into a physical volume and add it to the &lt;code&gt;hdd&lt;/code&gt; volume group.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo pvcreate /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; Physical volume &amp;#34;dev/md126&amp;#34; successfully created.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo vgextend hdd /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; Volume Group &amp;#34;hdd&amp;#34; successfully extended
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ vgs
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  VG     #PV #LV #SN Attr   VSize   VFree
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  data     2  16   0 wz--n-   7.28t   3.24t
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  hdd      2   5   0 wz--n-  18.17t   9.09t
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  system   1   4   0 wz--n- 466.94g 234.94g
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With that, we now have sufficient disk space to continue to work.
After the sync completes, I will &lt;code&gt;lvconvert&lt;/code&gt; two existing backup partitions into mirrors to move them to the new disk pair, and then dissolve the mirror, dropping the image on the old half.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunga Tonga</title>
      <link>https://blog.koehntopp.info/2022/01/16/hunga-tonga.html</link>
      <pubDate>Sun, 16 Jan 2022 06:28:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/01/16/hunga-tonga.html</guid>
      <description>&lt;p&gt;This is the Hunga Tonga underwater volcano explosion in Pacific Ocean (animated gif, click to start):&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/01/hunga-tonga3.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;This is data from &lt;a href=&#34;https://blog.koehntopp.info/2020/11/15/my-home-sensor-network.html&#34;&gt;my sensors&lt;/a&gt;

, 15h later:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/01/hunga-tonga.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;The second wave took the long way around, and arrived around 2am-4am on the morning of the 16th, but barely registered.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/01/hunga-tonga2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UTF8MB4</title>
      <link>https://blog.koehntopp.info/2022/01/12/utf8mb4.html</link>
      <pubDate>Mon, 10 Jan 2022 16:28:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/01/12/utf8mb4.html</guid>
      <description>&lt;p&gt;On Twitter, Jan Wildeboer &lt;a href=&#34;https://twitter.com/jwildeboer/status/1481308177727729668&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;linked&lt;/a&gt;

 an &lt;a href=&#34;https://adamhooper.medium.com/in-mysql-never-use-utf8-use-utf8mb4-11761243e434&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;article by Adam Hooper&lt;/a&gt;

 on MySQL and the weird &lt;code&gt;utf8mb4&lt;/code&gt; character set.&lt;/p&gt;
&lt;p&gt;The recommendation is correct:&lt;/p&gt;
&lt;p&gt;In MySQL, use &lt;code&gt;utf8mb4&lt;/code&gt; when you mean to work with &lt;code&gt;utf8&lt;/code&gt; in your programming language.&lt;/p&gt;
&lt;p&gt;The background and reasoning for this (and why it is wrong) is way more complicated than outlined by Adam Hooper.
So let&amp;rsquo;s walk through this:&lt;/p&gt;
&lt;h1 id=&#34;mysql-utf8-means-3-byte-unicode-and-access-to-only-the-bmp&#34;&gt;
    &lt;a href=&#34;#mysql-utf8-means-3-byte-unicode-and-access-to-only-the-bmp&#34;&gt;
	MySQL &lt;code&gt;utf8&lt;/code&gt; means 3-byte Unicode, and access to only the BMP
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;utf8&lt;/code&gt; in MySQL encodes the &lt;a href=&#34;https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unicode BMP&lt;/a&gt;

.
The Unicode Basic Multilingual Plane, or BMP, is the original 65536 character plane.
It was the only character plane available in Unicode 1.0
It was thought to be enough for all scripts in the world.
It wasn&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;Unicode was extended, as early as with the 2.0 release, to have more characters than that, in more code planes.
Currently, there can be up to 17 Unicode planes, but most of them are unused.&lt;/p&gt;
&lt;p&gt;Uncode 1.0 is also different in other ways. Vladislav Vaintroub commented to me:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unicode 1.0 had a &lt;a href=&#34;https://en.wikipedia.org/wiki/Hangul_%28obsolete_Unicode_block%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;different range for Hangul&lt;/a&gt;

.
Unicode 2.0 fixed that, and remapped Hangul (which is a unique action, and they issued a policy to forbid remapping in the future).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Making things immutable is important with character sets and sort orders, also for databases, as we will see.
It is in fact the entire reason for &lt;code&gt;utf8mb4&lt;/code&gt; to exist.&lt;/p&gt;
&lt;h2 id=&#34;encodings-and-the-65536-character-barrier&#34;&gt;
    &lt;a href=&#34;#encodings-and-the-65536-character-barrier&#34;&gt;
	Encodings and the 65536 character barrier
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;There are various ways to encode codepoints of Unicode.&lt;/p&gt;
&lt;p&gt;Originally, with only the BMP existing, people thought of extending the concept of &amp;ldquo;byte&amp;rdquo; = &amp;ldquo;character&amp;rdquo; to double bytes.
This is how you get the &lt;code&gt;wchar&lt;/code&gt; and a 16 bit character set, the obsolete ucs-2 encoding.&lt;/p&gt;
&lt;p&gt;When it became clear that 65536 characters are insufficient to represent all scripts and languages in the world, a larger 31-bit space was introduced and the naive encoding of that, ucs-4.
This would require 4 bytes per character.&lt;/p&gt;
&lt;p&gt;Both are incredibly wasteful:&lt;/p&gt;
&lt;p&gt;Using ucs-2 with western scripts means that every other byte is a null byte, and with ucs-4 for every character there will be 3 null bytes.
Even with non-western scripts there will be at least one, if not two null bytes per character.&lt;/p&gt;
&lt;p&gt;Extending Unicode beyond the BMP posed a bit of a problem:
Windows NT had started to use Unicode as a character set, and ucs-2 as the standard encoding.&lt;/p&gt;
&lt;p&gt;The solution was the character range 0xD800 to 0xDFFF, which was unassigned to characters, so far:
2048 (11 bit) of unassigned positions.&lt;/p&gt;
&lt;p&gt;The resulting encoding takes characters beyond the BMP, with codes greater than 0xFFFF, and subtracts 0x10000.
This leaves a 20 bit number, which is then split into a high 10 bit part and a low 10 bit part.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The high ten bits are added to 0xd800 (0xd800-0xdbff).&lt;/li&gt;
&lt;li&gt;The low then bits are added to 0xdc00 (0xdc00-0xdfff).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This was called utf-16 encoding, and became the character set of Windows starting with Windows 2000.&lt;/p&gt;
&lt;p&gt;utf-16 also, for now, limits the number of characters that can be represented in Unicode to 1112064, a number that can be represented in 21 bits.&lt;/p&gt;
&lt;h2 id=&#34;plan-9-and-utf-8&#34;&gt;
    &lt;a href=&#34;#plan-9-and-utf-8&#34;&gt;
	Plan 9 and utf-8
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In the Unix world, the experimental Plan 9 operating system from A&amp;amp;T explored variable length encodings of Unicode:
utf-8 could represent 31-bit Unicode with encodings between 1 and 6 bytes in length.
Single byte codes would be compatible with ASCII, so that valid ASCII is also valid utf-8.&lt;/p&gt;
&lt;p&gt;Because the utf-16 hack had restricted the number of possible Unicode characters effectively from 31 bit to 21 bit, actual utf-8 encodings can only be up to 4 bytes long.
And because utf-8 is so much denser than other encodings, it is by far the dominant encoding of Unicode.
Even Microsoft, heavily invested in ucs-2 and utf-16 with Windows, started to support utf-8, beginning with the development of Windows 11 in 2019.&lt;/p&gt;
&lt;p&gt;In an utf-8 multibyte sequence, the &amp;ldquo;number of 1-bits before the first 0-bit&amp;rdquo; in the first byte of a multibyte character determine the length of the encoding:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Single byte characters are in the range 0x00-0x7f (0 leading 1-bits, single byte), for ASCII compatibility.&lt;/li&gt;
&lt;li&gt;Multibyte characters start with &lt;code&gt;110xxxxx&lt;/code&gt; for a two byte sequence, &lt;code&gt;1110xxxx&lt;/code&gt; for a three byte sequence and &lt;code&gt;11110xxx&lt;/code&gt; for a four byte sequence.&lt;/li&gt;
&lt;li&gt;The second, and possible third and fourth byte are all of the form &lt;code&gt;10xxxxxx&lt;/code&gt;, which is otherwise unused, so that these bytes are always identifiable as continuation bytes in a multibyte encoding.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This makes utf-8 restartable:
If you end up at a byte of the form &lt;code&gt;10xxxxxx&lt;/code&gt;, you know you are in the middle of a multibyte sequence of at most 4 bytes length.
You can backtrack a few bytes, and check for the clearly recognizable start pattern of a multibyte encoding, or error out with an invalid encoding.&lt;/p&gt;
&lt;p&gt;We get 128 single byte characters that are identical to ASCII, 1920 two byte characters, and three bytes for the rest of the BMP.
Four bytes are needed for rare CJK characters, a bunch of math, some dead scripts and
&lt;a href=&#34;https://blog.koehntopp.info/2017/11/05/unicode-is-over-and-it-dies-over-emoji.html&#34;&gt;a ton of emoji that should not exist in the first place&lt;/a&gt;

.&lt;/p&gt;
&lt;h2 id=&#34;mysql-and-three-byte-utf8&#34;&gt;
    &lt;a href=&#34;#mysql-and-three-byte-utf8&#34;&gt;
	MySQL, and three byte &lt;code&gt;utf8&lt;/code&gt;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;MySQL did support the &amp;ldquo;full full&amp;rdquo; range of 31 bit Unicode in the beginning, with up to 6 bytes being used for a single character.
That was changed &lt;a href=&#34;https://github.com/mysql/mysql-server/commit/43a506c0ced0e6ea101d3ab8b4b423ce3fa327d0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;in a single byte change commit&lt;/a&gt;

 in September 2002.
&lt;a href=&#34;https://dri.es/the-history-of-mysql-ab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Back then&lt;/a&gt;

 MySQL 3.23 was the active release and InnoDB was not yet enabled by default.&lt;/p&gt;
&lt;p&gt;Vladislav Vaintroub commented about this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Anyway MySQL&amp;rsquo;s utf8 was always meant to be castrated utf8, from its invention.&lt;/p&gt;
&lt;p&gt;It was a little gamble, and hope that supplemental plane won&amp;rsquo;t be used much, thus we could save a couple of bytes in filesort.
Although already by 2001 (Unicode 3.1) there were characters in supplemental range, they could be seen as &amp;ldquo;rarely used&amp;rdquo; (music notation, old Egyptian, Deseret and what not).
Thus only few people needed supplemental characters, until everyone&amp;rsquo;s favorite U+1F4A9 PILE OF POO premiered in Unicode 6.0, in 2010, actually a couple of years after, until smartphone made emoji ubiquitous.&lt;/p&gt;
&lt;p&gt;So that gamble - that supplemental plane remains rarely used, did not work out, but who would know that by 2003.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Vaintroub&amp;rsquo;s comment about sorting refers to a limitation of MySQL that was only removed in MySQL 8.
More about that below.&lt;/p&gt;
&lt;h2 id=&#34;character-sets-have-collations&#34;&gt;
    &lt;a href=&#34;#character-sets-have-collations&#34;&gt;
	Character sets have collations
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Unicode not only defines character sets, they also define a comparison algorithm for characters.
This is called UCA, Unicode Comparison Algorithm.
Like Unicode itself, &lt;a href=&#34;https://unicode.org/Public/UCA/9.0.0/ReadMe.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;it is versioned&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Older versions of UCA had issues in various ways:
&lt;a href=&#34;https://lefred.be/content/mysql-character-sets-unicode-and-uca-compliant-collations/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lefred&amp;rsquo;s Blog article&lt;/a&gt;

 and
&lt;a href=&#34;https://dev.mysql.com/blog-archive/sushi-beer-an-introduction-of-utf8-support-in-mysql-8-0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Manyi Lu&amp;rsquo;s article&lt;/a&gt;

 about the
&lt;a href=&#34;https://bugs.mysql.com/bug.php?id=76553&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sushi-Beer issue&lt;/a&gt;

 explain this in depth.&lt;/p&gt;
&lt;h2 id=&#34;indexes-are-materialized-collations&#34;&gt;
    &lt;a href=&#34;#indexes-are-materialized-collations&#34;&gt;
	Indexes are materialized collations
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Databases have indexes, and these extract values from a column, &lt;strong&gt;sort them&lt;/strong&gt; and store back pointers to the full row with each extracted column value.
This allows for fast searching.&lt;/p&gt;
&lt;p&gt;Thus, indexes are materialized collations, and when a collation (or a charset) is changed, all indexes that contain values of that charset are invalid and need to be recreated.&lt;/p&gt;
&lt;p&gt;In the deep dark past, MySQL made changes and bugfixes to existing collations, which made MySQL upgrades a pain:
The moment you apply the upgrade, you are forced to drop and recreate the indexes.
Depending on the amount of data and the size of the index, that requires an extraordinary amount of time and makes updates complicated.&lt;/p&gt;
&lt;h1 id=&#34;utf8mb4-because-utf8-was-taken&#34;&gt;
    &lt;a href=&#34;#utf8mb4-because-utf8-was-taken&#34;&gt;
	&lt;code&gt;utf8mb4&lt;/code&gt;, because &lt;code&gt;utf8&lt;/code&gt; was taken.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;MySQL adopted a polity similat to the Unicode Consortium itself:&lt;/p&gt;
&lt;p&gt;MySQL never updates existing character sets and collations, not even for bugfixes.&lt;/p&gt;
&lt;p&gt;And because the name &lt;code&gt;utf8&lt;/code&gt; was taken, a new name was needed:
&lt;code&gt;utf8mb4&lt;/code&gt; is the version of Unicode utf-8 in MySQL that extends past the BMP, and also uses UCA 9.0 for comparison.&lt;/p&gt;
&lt;p&gt;Compare to &lt;code&gt;utf8&lt;/code&gt; which encodes only the BMP, and uses an older UCA for comparison.
So &lt;code&gt;utf8&lt;/code&gt; not only has a smaller character range, it also sorts differently.&lt;/p&gt;
&lt;p&gt;This makes upgrades mich simpler:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You install a new version.
Nothing changes, you are just running new code which hopefully sorts and orders as before.&lt;/li&gt;
&lt;li&gt;You can create new columns using the new character set and collations, even in existing tables, because in MySQL a charset and collation is a column attribute.
Tables, databases and servers just provide defaults that are inherited at the time of subordinate object creation.&lt;/li&gt;
&lt;li&gt;To complete the upgrade check all columns, and note which ones need changing.&lt;/li&gt;
&lt;li&gt;Actually change these columns, table by table, at your own leisure.
If necessary, use tooling such as Percona Online Table Change (&amp;ldquo;OSC&amp;rdquo;), making the change in the background without service interruption.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;side-note-mysqls-sorting-and-file-formats-are-portable&#34;&gt;
    &lt;a href=&#34;#side-note-mysqls-sorting-and-file-formats-are-portable&#34;&gt;
	Side note: MySQL&amp;rsquo;s sorting and file formats are portable
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;MySQL does not use &lt;code&gt;libc&lt;/code&gt; and the character set comparison functions in there for itself.
It brings its own collations instead.&lt;/p&gt;
&lt;p&gt;That is also an important fact.
It means that MySQL does not break when you upgrade the operating system &lt;code&gt;libc&lt;/code&gt; on your machine.&lt;/p&gt;
&lt;p&gt;If MySQL used &lt;code&gt;libc&lt;/code&gt; fort sorting and comparing, the database could break without any changes to the database whatsoever &amp;ndash; an innocent security update to the operating system &lt;code&gt;libc&lt;/code&gt; (which for some reason also touched &lt;code&gt;libc&lt;/code&gt; sorting and comparison) would break all character indexes in your database.&lt;/p&gt;
&lt;p&gt;MySQL does not do that.
It lets you migrate these things in a way that is operationally convenient.&lt;/p&gt;
&lt;p&gt;It also means that MySQL versions sort the same between Linux, FreeBSD, Solaris and even Windows.&lt;/p&gt;
&lt;p&gt;Just like the on disk format is compatible across all platforms, so is character handling and time zone handling.
MySQL is MySQL on any platform, and copying files and replication always work across these boundaries.&lt;/p&gt;
&lt;h1 id=&#34;so-why-the-6-to-3-byte-commit&#34;&gt;
    &lt;a href=&#34;#so-why-the-6-to-3-byte-commit&#34;&gt;
	So why the 6-to-3-byte commit?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Not that it matters much: Because Unicode and UCA changes between versions of Unicode, you&amp;rsquo;d still have to use different names for character sets and collations, and migrations to do.&lt;/p&gt;
&lt;p&gt;But why was it important that &amp;ldquo;we could save a couple of bytes in filesort&amp;rdquo; as Vaintroub puts it?
Here we go:&lt;/p&gt;
&lt;h2 id=&#34;sorting-is-important-and-hard-to-scale&#34;&gt;
    &lt;a href=&#34;#sorting-is-important-and-hard-to-scale&#34;&gt;
	Sorting is important, and hard to scale
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Not only can databases, tables and individual indexes be very large, they also need to be kept sorted, and sometimes data needs to be re-sorted.
Databases usually have a large number of strategies for that.&lt;/p&gt;
&lt;p&gt;Small things are sorted in memory.
That is, the database creates the full rows of the result table in memory, using all columns.
It then sorts these rows in memory by shuffling around the full rows.
That uses up a lot of memory bandwidth, because we copy around full rows, which can be large.&lt;/p&gt;
&lt;p&gt;Sometimes we do not want to move around full rows, because these rows are large.
So we only sort the columns specified in the &lt;code&gt;ORDER BY CLAUSE&lt;/code&gt;, which is a tiny subset of the full columns set of each row of the result table, and attach a row pointer to each of these sort rows.&lt;/p&gt;
&lt;p&gt;In the end we have a tiny in-memory table in sort order, which only holds columns from the &lt;code&gt;ORDER BY&lt;/code&gt;, and each row in it points to the unsorted full rows somewhere else - in memory or on disk.
We can then output the full rows in sort order, but at the cost of a lot of seeks - possibly on disk.
That is, because the full rows have not been sorted, so the row pointers from the sorted data to the full rows are a mess.&lt;/p&gt;
&lt;p&gt;Sometimes we have very many rows.
So we do as before, but for a subset of all rows - as many as fit into our sort buffer.
When the sort buffer is full, we write it out to disk.
Then we continue with the next batch.
Across all partial results we perform a merge sort.&lt;/p&gt;
&lt;p&gt;If the things sorted were full rows, we can emit full result rows rather quickly.
If the things sorted were only &lt;code&gt;ORDER BY&lt;/code&gt; columns or other partial result set rows with row pointers attached, we may have to perform one or multiple seeks in order to get the missing columns from all tables involved.&lt;/p&gt;
&lt;p&gt;The optimizer has to decide which strategy to use here, based on estimates of the row width, size of the result set (which has not yet been produced, so it&amp;rsquo;s a guess) and the available amount of resources.&lt;/p&gt;
&lt;h2 id=&#34;and-then-implementation-issues&#34;&gt;
    &lt;a href=&#34;#and-then-implementation-issues&#34;&gt;
	And then, implementation issues
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Older versions of MySQL have different storage engines: &lt;code&gt;MYISAM&lt;/code&gt;, &lt;code&gt;INNODB&lt;/code&gt;, &lt;code&gt;MEMORY&lt;/code&gt; and others.
Modern MySQL has only &lt;code&gt;INNODB&lt;/code&gt;, but for temporary tables has a few tricks ready to make things faster:
for example, temporary tables can be recreated and do not need to be crash safe, so no redo and undo logging is required.&lt;/p&gt;
&lt;p&gt;Other storage engines than &lt;code&gt;INNODB&lt;/code&gt; had restrictions.&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;MEMORY&lt;/code&gt; tables could not have variable length columns, there was no &lt;code&gt;VARCHAR&lt;/code&gt;, only &lt;code&gt;CHAR&lt;/code&gt;.
So when sorting with temporary tables in memory, MySQL created these temp tables as &lt;code&gt;MEMORY&lt;/code&gt; tables, promoting every &lt;code&gt;varchar(255)&lt;/code&gt; to &lt;code&gt;CHAR(255)&lt;/code&gt;.
A row with a varchar value of &lt;code&gt;hello&lt;/code&gt; suddenly used 255 bytes instead of 6 bytes to represent the string &lt;code&gt;hello&lt;/code&gt; (plus a lot of padding).&lt;/p&gt;
&lt;p&gt;Of course, with &lt;code&gt;utf8&lt;/code&gt;, a &lt;code&gt;varchar(255) charset utf8&lt;/code&gt; is promoted to a &lt;code&gt;char(255) charset utf8&lt;/code&gt;, which instead allocates 765 bytes of memory, out of which the first five bytes contain the string &lt;code&gt;hello&lt;/code&gt;, and the rest is wasteful padding.
With 6 bytes, it would be twice that amount of memory.
So reducing this from 6 to 3 bytes was quite worthwhile.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MEMORY&lt;/code&gt; tables had a configurable size limit, and if your table exceeded that (which happened rather quickly, given the above restrictions), it was converted to an on-disk temporary table in &lt;code&gt;MYISAM&lt;/code&gt; format: a spill.
&lt;code&gt;MYISAM&lt;/code&gt; of course had &lt;code&gt;varchar(255) charset utf8&lt;/code&gt; as a native type, and your &lt;code&gt;hello&lt;/code&gt; would again shrink to six bytes.
Looking at the on disk temporary file, which was rather small, you might wonder what caused the spill.&lt;/p&gt;
&lt;p&gt;MySQL 8 introduces unlogged &lt;code&gt;INNODB&lt;/code&gt; temporary tables (and a failed experiment involving mmap that you may want to disable).
So this problem is gone, once and for all:
&lt;code&gt;varchar&lt;/code&gt; is &lt;code&gt;varchar&lt;/code&gt; at all times, and representing Unicode variants in temporary tables is no longer a problem - if you use MySQL 8.&lt;/p&gt;
&lt;p&gt;This is in fact one of the major reasons to graduate from 5.7 for many people.&lt;/p&gt;
&lt;h2 id=&#34;tldr&#34;&gt;
    &lt;a href=&#34;#tldr&#34;&gt;
	TLDR
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We learned:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Your programming languages &lt;code&gt;utf8&lt;/code&gt; is called &lt;code&gt;utf8mb4&lt;/code&gt; in MySQL.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;utf8&lt;/code&gt; and &lt;code&gt;utf8mb4&lt;/code&gt; sort differently due to changes in the Unicode Collation Algorithm (UCA).&lt;/li&gt;
&lt;li&gt;Indexes are physically materialized sort orders of column sets. They can become pretty large.&lt;/li&gt;
&lt;li&gt;MySQL never changes character sets or collations, even if they are buggy. Instead a new collation with a new name is created.&lt;/li&gt;
&lt;li&gt;That is, because changing a sort order may require dropping and recreating an index, which is expensive if the index is large.&lt;/li&gt;
&lt;li&gt;Sorting things can be done in different ways, depending on data set size, column size and other considerations.&lt;/li&gt;
&lt;li&gt;Implementation details can make sorting even more complicated.&lt;/li&gt;
&lt;li&gt;MySQL 8 is a worthwhile upgrade.&lt;/li&gt;
&lt;li&gt;Databases manage state so you don&amp;rsquo;t have to. If you think databases are complicated, consider what you would have to do if the database and your DBA would not be there for you.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Never check for an error condition you don&#39;t know how to handle</title>
      <link>https://blog.koehntopp.info/2022/01/10/never-check-for-an-error-condition.html</link>
      <pubDate>Mon, 10 Jan 2022 07:11:35 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/01/10/never-check-for-an-error-condition.html</guid>
      <description>&lt;p&gt;This is the english version of an &lt;a href=&#34;https://blog.koehntopp.info/2009/08/21/was-bedeutet-eigentlich-never-check-for-an-error-condition-you-don-t-know-how-to-handle.html&#34;&gt;older text in German&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Computer scientists are weird.
In their science there are a few rules that sound wrong when you hear them first, but make a lot of sense if you think about them.
Some of them are making sense even outside of computer science.&lt;/p&gt;
&lt;p&gt;One of those rules is&lt;/p&gt;
&lt;h1 id=&#34;never-check-for-an-error-condition-you-dont-know-how-to-handle&#34;&gt;
    &lt;a href=&#34;#never-check-for-an-error-condition-you-dont-know-how-to-handle&#34;&gt;
	Never check for an error condition you don&amp;rsquo;t know how to handle.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;When you encounter this the first time that sounds very questionable.
There are known error conditions in my program that I know they can happen, and I should not check for them?&lt;/p&gt;
&lt;p&gt;If you read that left to right, that&amp;rsquo;s exactly what it means.
Let&amp;rsquo;s have a look at an example and try to understand what goes on.
Here is a very simple case: I could try to allocate memory from the operating system and that can fails.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;someSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;what_now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That is a very typical situation.
For example, why does the library function &lt;code&gt;malloc()&lt;/code&gt; not check itself for &lt;code&gt;p == NULL&lt;/code&gt;  and handles this case?
Because it does not, I have to do that every time and must not forget that in a single case.&lt;/p&gt;
&lt;p&gt;Indeed, most programs have a function &lt;code&gt;safe_malloc()&lt;/code&gt;, which wraps &lt;code&gt;malloc()&lt;/code&gt; and more or less looks like the example above.
The point being that each program has their own implementation of &lt;code&gt; what_now()&lt;/code&gt;, because the desired behavior is specific to the application and cannot be provided by the library.&lt;/p&gt;
&lt;p&gt;One could argue that &lt;code&gt;malloc()&lt;/code&gt; should internally call a &lt;code&gt;what_now()&lt;/code&gt;, and each library user would have to provide an implementation for that.
But that would proscribe a certain mode of usage for &lt;code&gt;malloc()&lt;/code&gt;.
The solution that &lt;code&gt;malloc()&lt;/code&gt; does not do the check, but only signals the error, is the most flexible solution &amp;ndash; and hence suitable for a library function, because it leaves the choice to the user.
It provides mechanism, but not policy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Side thought:&lt;/strong&gt; That&amp;rsquo;s one of the main differences between a library and a framework.
Libraries provide mechanism, but do not enforce a policy.
They do not proscribe a default way of working with problems.
Frameworks are opinionated, and have been designed with a specific way of working in mind, and provide policies that are considered default solutions in the context of the framework.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Side side though:&lt;/strong&gt; Kernel, libraries and frameworks are all infrastructure, and as all infrastructure they are being judged by how they fail.
In this case: What solutions exist to bypass the policy in a framework, if the policy does not fit.
&amp;ldquo;How can I have queries in &lt;a href=&#34;https://en.wikipedia.org/wiki/Ruby_on_Rails&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RoR&lt;/a&gt;

 that bypass &lt;a href=&#34;https://en.wikipedia.org/wiki/Active_record_pattern&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Active Record&lt;/a&gt;

&amp;rdquo; is one example.
How free of policy is this library?
Is it just a mechanism or is there an obvious or hidden intention, a policy?&lt;/p&gt;
&lt;p&gt;A library ideally supplies just a mechanism, but that makes it mandatory for the developer to think about a policy for error handling and how to implement it.
That&amp;rsquo;s a relatively obvious point, but one that in my experience is not taught sufficiently.
If it wasn&amp;rsquo;t, we&amp;rsquo;d have less bad code in many projects.
And I do not want to limit myself to the tons of toxic PHP-MYSQL that fire queries at a database without checking for errors at all.&lt;/p&gt;
&lt;p&gt;The point is rather that a missing policy for error handling requires that you provide one in the application (or at least some minimal standards in the application).
Some programming environments have a name for such an informal construct:
A convention, a contract between library developer and application developer that is informal and not enforced by the mechanisms of the language.
The convention is also often unspoken, or not made explicit enough in the documentation of the library.
And hence taught insufficiently, and then implemented insufficiently.&lt;/p&gt;
&lt;p&gt;But you can take the sentence&lt;/p&gt;
&lt;h1 id=&#34;never-check-for-an-error-condition-you-dont-know-how-to-handle-1&#34;&gt;
    &lt;a href=&#34;#never-check-for-an-error-condition-you-dont-know-how-to-handle-1&#34;&gt;
	Never check for an error condition you don&amp;rsquo;t know how to handle.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;and read it backwards.
What exactly does it mean to handle an error condition?
Specifically, if the error happens, what are our options and what is the desired failure mode?
What is supposed to happen?&lt;/p&gt;
&lt;p&gt;Going back to the &lt;code&gt;malloc()&lt;/code&gt; above:
When that happens, the operating system can&amp;rsquo;t or won&amp;rsquo;t give us more memory.
We don&amp;rsquo;t know why, so we have to assume the worst.
That is: memory is full, nobody gets any memory any more.
In fact, there could be another program that permanently allocates more memory.
So even if we gave memory back to the operating system, we wouldn&amp;rsquo;t get it back when trying to reserve it.&lt;/p&gt;
&lt;p&gt;So handling this error means that we already have all memory required to recover from the situation before the error happens.
That&amp;rsquo;s a really complicated situation, and too complicated for most application developers when we force them to think about it.
At the point in time when this happens they are usually busy with completing the non-failing, actually function path of the application before they are ready to turn to failure modes and their code paths.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Side thought:&lt;/strong&gt; This is another main reason for bad code:
We force developers to think about failing code paths at the wrong point in time.
They really want to write programs that work well.
But we shouldn&amp;rsquo;t bother them with failure handling right when they are busy with completing the money earning part of the code.&lt;/p&gt;
&lt;p&gt;If we bother devs at the wrong moment in time, we get error handling like this at best:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;someSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ENOMEM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// out of memory error
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Well, at least they checked for an error.
Maybe there are even some &lt;code&gt; atexit(3)&lt;/code&gt; handlers stacked that will try to clean up, but did you ever see any of those?&lt;/p&gt;
&lt;p&gt;If you see code like this, it is screaming at you &amp;ldquo;Yes, yes, I know, but I am really busy now with other things. Go away!&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Another common problem is that we need to check for the error at the lowest level, but need more context at the higher levels of our code to handle it properly.
Sometimes there is not even a contract on how errors are being bubbled up to the next layer without losing information.
The interiors of the MySQL codebase used to be a prime example of that.
You could find code that mapped error codes similar to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;errcode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;doSomeThing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;errcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;E_THIS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;E_THAT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is taking detailed internal error codes and flattens them into larger categories, losing detail.
Sometimes a higher level handler has more context, but no longer sufficient detail to decide what exactly went wrong at the lower layers.&lt;/p&gt;
&lt;p&gt;The rule&lt;/p&gt;
&lt;h1 id=&#34;never-check-for-an-error-condition-you-dont-know-how-to-handle-2&#34;&gt;
    &lt;a href=&#34;#never-check-for-an-error-condition-you-dont-know-how-to-handle-2&#34;&gt;
	Never check for an error condition you don&amp;rsquo;t know how to handle.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;means we need to discuss things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Diagnosis:&lt;/strong&gt; Capture the error. Formulate a test which at some point in the code checks that we have a problem and distinctively signals which error that is.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Policy:&lt;/strong&gt; Determine the desired behavior for handling the error, that is, have a policy that explains how to handle the error.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Context:&lt;/strong&gt; Decide where in the stack the error can be handled best, or if we need to escalate. When we escalate, make sure an escalation is expected at the higher layer and check for their policy. They need to have one. Also make sure the escalation does not lose detail.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;this-is-useful-outside-of-computer-science&#34;&gt;
    &lt;a href=&#34;#this-is-useful-outside-of-computer-science&#34;&gt;
	This is useful outside of computer science.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The original trigger to write this article in 2009 was a discussion about a 911-button (110-Taste) in a web browser.
&amp;ldquo;If you see something, say something&amp;rdquo;: If you find web pages that contain things that may be relevant for law enforcement, have a way to call for help.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s a very german and very 2009 idea, but suppose you want that: Coding that is easy, right? A button in a browser that raises an alarm somewhere should be very few lines of code in an extension.&lt;/p&gt;
&lt;p&gt;The real problem - and that is not a code problem - is the &lt;code&gt;what_now()&lt;/code&gt;.
What is supposed to happen with that alarm signal.
That&amp;rsquo;s a process question, that is &lt;strong&gt;WHO needs to talk WHEN with WHOM about WHAT?&lt;/strong&gt;
What information needs to be sent when the button is pressed and what reaction is then expected?&lt;/p&gt;
&lt;p&gt;Do we build a central emergency call center?
Do we transport location and identity information together with the call, if that is necessary?
If so, how?&lt;/p&gt;
&lt;p&gt;What other information is necessary to provide context?
The current URL?
The persistent state of the browser, with all bookmarks, the history and so on?
The volatile state of the browser, eg with all active spywat, but also all legit variables?
The whole state of the computer, processlist, memory and program information, installed software and so on?&lt;/p&gt;
&lt;p&gt;How is that call then handled and classified?&lt;/p&gt;
&lt;p&gt;What are standard reactions to verified and classfied emergency escalations?
Can the emergency call center take over the computer and extract further information and do a full forensic analysis?
Can they write and change the state of the machine to help?
Or can they just call back, and request a read-only screen sharing session to talk the user trough the emergency?&lt;/p&gt;
&lt;p&gt;What taxonomy of emergencies do we build, and what are the required steps to verify a case?&lt;/p&gt;
&lt;p&gt;Do we plan for preventatice action, when we register a spike in incidents of a certain type (ie a computer virus outbreak)?
Do we have a problem management and change managent on top of our incident management that would want to and be able to prevent a large scale situation in the field?
In the case of an outbreak, for example, by forcing patches on all machines?&lt;/p&gt;
&lt;p&gt;How do we build the technical and legal framework for this?
How do we build the organisation for this?
How to we enforce the technical changes required to be able to do this?
Do we make the installation of some software mandatory to be able to be on the Internet?
How do we protect this infrastructure against abuse?&lt;/p&gt;
&lt;p&gt;The check was easy &amp;ndash; an emergency call button in a browser.&lt;/p&gt;
&lt;p&gt;The work is in the handling, which can be &amp;ldquo;somewhat involved&amp;rdquo;.
But these are details that are gracefully elided in the discussion when politicans demand such a button.
That&amp;rsquo;s providing quite simplicistic discussions:
Why do we not have such a button in every browser already?&lt;/p&gt;
&lt;p&gt;Can&amp;rsquo;t be that hard, right?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>... and a happy new hack.</title>
      <link>https://blog.koehntopp.info/2022/01/01/and-a-happy-new-hack.html</link>
      <pubDate>Sat, 01 Jan 2022 16:28:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/01/01/and-a-happy-new-hack.html</guid>
      <description>&lt;p&gt;Und das neue Jahr beginnt für uns mit einem Minecraft-Server, auf dem wichtige Personen, die sich nichts haben zuschulden kommen lassen, plötzlich gebannt sind.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/01/banned.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Nach einem Unban an der Console: Der Spawn, der Eintrittspunkt für neue Spieler, ist komplett verwüstet.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/01/spawn.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Wir haben tägliche Backups, sodass das schnell behoben ist. Bleibt die Frage, was passiert ist.&lt;/p&gt;
&lt;h2 id=&#34;gehackt&#34;&gt;
    &lt;a href=&#34;#gehackt&#34;&gt;
	Gehackt
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Unter den Spielern ist die Frage schnell geklärt: &amp;ldquo;&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; wurde gehackt.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Es stellt sich raus:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt;&amp;rdquo; bekommt einen &lt;a href=&#34;https://blog.koehntopp.info/2021/11/30/discord-nitro-spam-and-2fa.html&#34;&gt;Free Nitro Spam&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;Er klickt darauf.&lt;/li&gt;
&lt;li&gt;Er wird gebeten, &amp;ldquo;&lt;code&gt;FreeNitro.exe&lt;/code&gt;&amp;rdquo; zu installieren und macht das, startet dann das &lt;code&gt;.exe&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Sein Rechner macht ein Dutzend Fenster auf, rappelt los, und geht am Ende aus (und bleibt aus).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Im Rahmen des Exploits wurde er gebeten, seinen Minecraft Login und seinen Discord Login mit Passwort anzugeben, was er dann auch brav tat.
Zwei-Faktor-Authentisierung hat er nicht benutzt.&lt;/p&gt;
&lt;h2 id=&#34;impact&#34;&gt;
    &lt;a href=&#34;#impact&#34;&gt;
	Impact
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;nur-minecraft&#34;&gt;
    &lt;a href=&#34;#nur-minecraft&#34;&gt;
	Nur Minecraft
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Den ersten Minecraft-Server für unser Kind und seine Freunde hatten wir daheim.
Das ging gut: Die Maschine hat 8 Cores, 32 GB Speicher und ist sowieso an, weil sie Dinge im Haus tut.
Die Anbindung ist mit Glasfaser und fester IP auch überaus zufriedenstellend.&lt;/p&gt;
&lt;p&gt;Als der ganze Server größer wurde, habe ich mit externen Anbietern herumexperimentiert und am Ende einen VPS besorgt.
Wichtig dabei ist nur, daß es eine Maschine ist, die nicht zu Hause steht, auf der nichts als Minecraft läuft und die keine Vertrauensbeziehung in irgendeiner Form mit anderen Maschinen von uns hat.&lt;/p&gt;
&lt;p&gt;Das hat sich nun bezahlt gemacht.&lt;/p&gt;
&lt;h3 id=&#34;restore&#34;&gt;
    &lt;a href=&#34;#restore&#34;&gt;
	Restore
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wir haben auf dem Server daheim ein tägliches Backup: Der Minecraft-Server wird einmal pro Tag aus dem Internet nach Hause kopiert.
Das ist ein Pull, d.h. wir loggen uns auf dem Minecraft-Server ein und nicht der Minecraft-Server daheim.&lt;/p&gt;
&lt;p&gt;Wir heben die Backups 30 Tage lang auf und das Backup vom 1. jeden Monats unlimitiert.&lt;/p&gt;
&lt;p&gt;Dadurch konnten wir das gesamte Minecraft-Verzeichnis zur Seite bewegen, und dann aus dem Backup vom Vortag wiederherstellen.
Das hat 2 Minuten gedauert.&lt;/p&gt;
&lt;h3 id=&#34;logs&#34;&gt;
    &lt;a href=&#34;#logs&#34;&gt;
	Logs
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Das alte Verzeichnis liegt noch vor.
Dort sind auch die Logs vom Vorfall.&lt;/p&gt;
&lt;p&gt;Der Vorfall spielt sich so ab:
Der kompromittierte Account von &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; loggt sich ein und fängt an, &lt;code&gt;/lp&lt;/code&gt; Kommandos für das LuckPerms-Plugin zu senden.
Er listet alle User mit Rechten, und kickt und bannt diese dann.
Danach entzieht er ihnen Rechte.&lt;/p&gt;
&lt;p&gt;Das Plugin &lt;code&gt;WorldEdit&lt;/code&gt; ist installiert und der Account von &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; teleportiert sich auf den Spawn und fängt dort an, mit grossflächigen Brushes umzudekorieren.
Das Vorgehen sieht jedoch nicht systematisch und auch nicht schnell aus:
Die Aktion dauert beinahe 30 Minuten.
Das spricht nicht für einen gescripteten Angriff, und ist inkonsistent mit meinem Bild von einem &amp;ldquo;Free Nitro&amp;rdquo; Scammer und Angreifer.&lt;/p&gt;
&lt;p&gt;Das Logbuch des Serves und der mit &lt;code&gt;debsums&lt;/code&gt; verifizierte Zustand des Systems macht eine Reinstallation von allem
vermutlich nicht notwendig.
Es genügt, mit dem Stand aus dem Backup weiterzufahren.
Das ist angenehm:
Zwar ist der Server vollständig ansibilisiert und mit dem Backup in weniger als 30 Minuten aus einer kompletten Neuinstallation wiederherzustellen, aber wenn das nicht notwendig ist, ist das angenehm.&lt;/p&gt;
&lt;h3 id=&#34;der-user&#34;&gt;
    &lt;a href=&#34;#der-user&#34;&gt;
	Der User
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Der betreffende User hat Accounts auf Dutzenden von Minecraft-Servern.
Als engagierter und intensiver Spieler oft mit Sonderrechten.
Alle diese Server sind beschädigt, viele weniger automatisiert als unserer.&lt;/p&gt;
&lt;p&gt;Account-Recovery ohne 2FA ist schwierig.
Account-Recovery bei gleichem Paßwort für Minecraft und die Recovery-Mailadresse unmöglich.
Daraus folgt, daß man seine Recoveryadresse für den Minecraft Account eventuell nicht bei Hotmail haben sollte.
Daraus folgt auch, daß man Kindern Passwort Re-Use gar nicht früh genug aberziehen kann.&lt;/p&gt;
&lt;h2 id=&#34;maßnahmen-und-fazit&#34;&gt;
    &lt;a href=&#34;#ma%c3%9fnahmen-und-fazit&#34;&gt;
	Maßnahmen und Fazit
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wir verlangen in Zukunft für alle Benutzer mit Rechten auf dem Server oder im Discord zu beweisen, daß sowohl ihr Minecraft (Microsoft) Account als auch ihr Discord-Account mit Zwei-Faktor-Authentisierung gesichert sind.
Das wird helfen, den Schaden von solchen falschen Klicks zu minimieren und Accounts recoverbar zu machen.&lt;/p&gt;
&lt;p&gt;Die Analyse der Logfiles war hilfreich bei der Rekapitulation der Vorgänge, und um das Ausmaß des Schadens und den Reifegrad des Angreifers zu bestimmen.&lt;/p&gt;
&lt;p&gt;Einen externen, nur für Minecraft verwendeten Server zu nehmen, der nicht im Heimnetz steht, war sinnvoll und hat sich bezahlt gemacht.&lt;/p&gt;
&lt;p&gt;Der Vorfall ist ein gutes Werkzeug, um der Spielergruppe zu erläutern, wieso Accountsicherheit wichtig ist und wie man sich gegen solche Angriffe verteidigt.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dein Kind will Minecraft spielen</title>
      <link>https://blog.koehntopp.info/2021/12/20/dein-kind-will-minecraft-spielen.html</link>
      <pubDate>Mon, 20 Dec 2021 13:32:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/12/20/dein-kind-will-minecraft-spielen.html</guid>
      <description>&lt;p&gt;Nachdem mich jetzt das dritte Paar computer-affiner Eltern mal gefragt hat, was man denn braucht, sobald der Nachwuchs sich &amp;ldquo;Minecraft&amp;rdquo; wünscht, hier der Aufschrieb zum Thema.&lt;/p&gt;
&lt;p&gt;Minecraft ist ursprünglich von der schwedischen Firma Mojang in Java entwickelt worden.
Der Eigner, Markus &amp;ldquo;Notch&amp;rdquo; Persson, hat das Spiel und die Firma Mitte 2014 auf Twitter zum Verkauf angeboten, und Microsoft hat die Firma gekauft.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/notch/status/478766808841732096&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft6.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;


&lt;em&gt;Spiel zu verkaufen - Minecraft ist auf Twitter angeboten worden. Jeder mit dem notwendigen Kleingeld &amp;ndash; 2.5 Milliarden USD &amp;ndash; konnte zuschlagen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Techradar hat mehr zur &lt;a href=&#34;https://www.techradar.com/news/the-history-of-minecraft&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Geschichte von Minecraft&lt;/a&gt;

.&lt;/p&gt;
&lt;h2 id=&#34;java-und-bedrock-edition&#34;&gt;
    &lt;a href=&#34;#java-und-bedrock-edition&#34;&gt;
	Java und Bedrock-Edition
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Eine der Aktivitäten von Microsoft war, das Spiel in C# neu zu schreiben. Dies ist die Bedrock-Edition, im Gegensatz zur Java-Edition des Originalspiels.&lt;/p&gt;
&lt;p&gt;Bedrock und Java sind nicht kompatibel, es gibt kein Crossplay, und die beiden Spiele werden nicht parallel entwickelt.
Es sind für alle praktischen Zwecke zwei verschiedene Spiele.&lt;/p&gt;
&lt;p&gt;Man will unbedingt und ausschließlich die Java-Edition kaufen.
Die Bedrock-Edition ist steril:
Erweiterungen für den Client und den Server werden von Microsoft verkauft.
Als Entwickler muss man sich anmelden, Verträge unterschreiben und Gebühren managen.
Es gibt deswegen praktisch keine Mod-Scene, sondern nur abgepacktes Gameplay.&lt;/p&gt;
&lt;p&gt;Niemand spielt Bedrock, und wenn Dein Kind von Minecraft redet, meint es die &lt;a href=&#34;https://www.minecraft.net/en-us/store/minecraft-java-edition&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java-Edition&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Die Maskottchen und default Skins: Steve und Alex.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Java-Edition ist extrem lebendig, genau genommen ein unregulierter Dschungel.
Hier gibt es viele nette Leute, die spannende Dinge machen, und ein paar sehr dunkle Ecken.
Das ist aber im Grunde kein das Spiel verderbendes Problem, sondern eine gute Gelegenheit, gleich auch ein wenig Medienkompetenz und Grundlagen der Sicherheit zu vermitteln.&lt;/p&gt;
&lt;h2 id=&#34;was-wird-gespielt&#34;&gt;
    &lt;a href=&#34;#was-wird-gespielt&#34;&gt;
	Was wird gespielt?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Minecraft ist ein Spiel, das für Kinder ab 8 interessant ist.
Es ist zunächst einmal eine Art virtuelles Lego im Anzug eines Survival- und Crafting-Spieles:
Die Spieler müssen in einer Welt aus Blöcken erkunden, Ressourcen sammeln, aus den Ressourcen Dinge bauen und dabei die Nacht überleben.
Das ist nicht unbedingt einfach, denn in der Nacht kommen verschiedene Monster, gegen die man nur bestehen kann, wenn man tagsüber einen Unterschlupf gebaut und Ausrüstung gewonnen hat.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft2.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Die Overworld, die normale Welt, hat verschiedene Klimazonen (&amp;ldquo;Biome&amp;rdquo;), in denen unterschiedliche Ressourcen zu finden sind.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Das Spiel hat eine marginale Story, im Laufe derer die Spieler weitere &amp;ldquo;Welten&amp;rdquo; entdecken und durch Portale betreten können:
der Nether und the End.
Das ist jedoch im Grunde alles nebensächlich, weil es in der ersten Iteration darum geht, mit Freunden zusammen aus Klötzen Dinge zu bauen.&lt;/p&gt;
&lt;h2 id=&#34;hardware-anforderungen&#34;&gt;
    &lt;a href=&#34;#hardware-anforderungen&#34;&gt;
	Hardware-Anforderungen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wegen der Zielgruppe hat das Spiel (mindestens bis Version 1.14.4) praktisch keine Mindestanforderungen an die Hardware.
Wortwörtlich jeder abgelegte Kartoffelcomputer kann Minecraft irgendwie ausführen &amp;ndash; Probleme entstehen vermutlich erst, wenn eine IDE (siehe unten) oder ein Videoschnitt-System oder Streaming-Support dazu kommen.
Wie dem auch sei:
Das schließt ein 2009er MacBook Pro, einen Raspi 4 und circa jede Intel-Büchse der letzten 10 Jahre ein.
Weil es Java ist, funktioniert das alles mit demselben Spiel.&lt;/p&gt;
&lt;p&gt;Wegen der Modding-Community (dazu unten mehr) gibt es praktisch auch keine Höchstanforderungen an die Hardware:
Wenn man Raytracing Renderer installiert hat, reizt das Spiel auch eine &lt;a href=&#34;https://www.youtube.com/watch?v=AdTxrggo8e8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nvidia RTX 3090&lt;/a&gt;

 voll aus.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft3.jpg&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft3.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;


&lt;em&gt;Minecraft Standard und mit einem Raytracing Render Mod auf einer Nvidia RTX. Was ein paar hingeworfene Kissen ausmachen&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Minecraft ist eine Client-Server-Anwendung. Ein oder mehr Spieler verbinden ihre Clients mit dem Minecraft-Server und bespielen dann zusammen diese Welt.
Spielt man &amp;ldquo;offline&amp;rdquo;, startet der Launcher im Hintergrund einen lokalen Server auf dem Laptop, und verbindet den Client im Einzelspielermodus mit dem Server.&lt;/p&gt;
&lt;p&gt;Im Onlinebetrieb verbindet man sich mit einem zentralen Server, der von irgendjemandem betrieben wird, und spielt dann dort mit anderen.
Das sind im Zweifel echt viele Spieler &amp;ndash; auf einem öffentlichen Server irgendwelche Personen irgendwelchen Alters.
Auf einem privaten Server ist es so, wie immer es die Zugangs-Policy des Servers definiert.&lt;/p&gt;
&lt;h2 id=&#34;kein-minecraft-ohne-discord-kein-login-ohne-2fa&#34;&gt;
    &lt;a href=&#34;#kein-minecraft-ohne-discord-kein-login-ohne-2fa&#34;&gt;
	Kein Minecraft ohne Discord, kein Login ohne 2FA
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Öffentliche Server gibt es viele, die verschiedenen Serverlisten zeigen um eine halbe Million Serverinstallationen an.
Die meisten sind relativ kleine Communities mit beschränktem Zugang, einige sind sehr grosse öffentliche Installationen.
Besonders hervorstechend ist &lt;a href=&#34;https://de.wikipedia.org/wiki/Hypixel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hypixel&lt;/a&gt;

, einer der am besten gewarteten und entwickelten öffentlichen Server.&lt;/p&gt;
&lt;p&gt;Zu jedem öffentlichen Server gehört dieser Tage auch immer ein Discord (früher war das Teamspeak).
Der Hypixel Discord ist zum Beispiel &lt;a href=&#34;https://discord.com/invite/hypixel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hier&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Discord ist ein Hoster für Text-, Sprach-, Video-Chat und Game-Streaming.
&amp;ldquo;Ein Discord&amp;rdquo; ist ein geschlossener (zunächst kostenloser) virtueller Chatserver mit verschiedenen Kanälen für Text- und AV-Chat.&lt;/p&gt;
&lt;p&gt;Mit einem einzelnen Discord-Login kann man Zugang zu einer Reihe von Communities unterschiedlicher Größe bekommen.
Es ist also sinnvoll, mit dem Java-Minecraft-Account auch noch gleich einen (kostenlosen) Discord-Account zu erstellen.&lt;/p&gt;
&lt;p&gt;Dabei ist es extrem sinnvoll, diesen Zugang (wie auch den Microsoft-Zugang) mit 2-Faktor-Authentisierung abzusichern und das Kind gleich von Anfang an zu 2FA zu erziehen.
Warum ist das so?
&lt;a href=&#34;https://blog.koehntopp.info/2021/11/30/discord-nitro-spam-and-2fa.html&#34;&gt;Dazu hier ein kleines Erlebnis&lt;/a&gt;

.&lt;/p&gt;
&lt;h2 id=&#34;was-wird-eigentlich-gespielt&#34;&gt;
    &lt;a href=&#34;#was-wird-eigentlich-gespielt&#34;&gt;
	Was wird eigentlich gespielt?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Nach einer Weile Spiel wird das Kind weitere Wünsche und Fragen haben, weil das Spiel selbst nicht der primäre Inhalt von Minecraft ist.&lt;/p&gt;
&lt;p&gt;Minecraft ist ein kollaboratives Multiplayer-Spiel, das von den Spielern selbst verändert wird, indem diese Mods (Client-Erweiterungen) und Plugins (Server-Erweiterungen) erstellen.
Das heißt, sehr bald kommen die folgenden Fragen und Probleme:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Es gibt Streit, weil verschiedene Spielstile und Wünsche sich gegenseitig ausschließen, und weil mitunter Arschlöcher dabei sind. Ein Repertoire von Verhaltensweisen zur Konfliktlösung muss eingeübt werden.&lt;/li&gt;
&lt;li&gt;Es gibt den Wunsch nach einem eigenen Server, der bezahlt und irgendwo installiert werden muss. Der Wunsch nach Taschengeld muss mit konkreten monatlichen Kosten vereinbar gemacht werden.&lt;/li&gt;
&lt;li&gt;Es gibt den Wunsch, den Client zu modden. Dazu sind besondere Tools auf dem lokalen Rechner notwendig, da weder Client noch Server nativ eine Moddingschnittstelle haben.&lt;/li&gt;
&lt;li&gt;Es gibt den Wunsch, besondere Spielmomente mit anderen zu Teilen. Die Frage nach Youtube und Twitch (konsumierend und erstellend) kommt auf, und es braucht Regeln (was, ab wann, Stimme, Gesicht zeigen, Namen nennen, und andere Verhaltensregeln).&lt;/li&gt;
&lt;li&gt;Es gibt den Wunsch, eigene Mods oder Plugins zu programmieren. Der Wunsch nach Java lernen, einer IDE und Hilfe von den Eltern kommt auf.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Der Reihe nach&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;streit-um-minecraft&#34;&gt;
    &lt;a href=&#34;#streit-um-minecraft&#34;&gt;
	Streit um Minecraft
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Minecraft kann man kooperativ (PvE, wir gegen die Monster) oder kompetetiv (PvP, Spieler gegeneinander) spielen.
Auch bei kooperativem Spiel kann es Probleme geben:
Wir hatten bisher&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vandalismus (Spieler zerstören die Bauten anderer Spieler auf einem Sandkasten-Bauserver),&lt;/li&gt;
&lt;li&gt;Spieler fühlen sich ausgeschlossen oder zu wenig beachtet (&amp;ldquo;Niemand hört mir zu oder lässt mich aussprechen&amp;rdquo;),&lt;/li&gt;
&lt;li&gt;destruktive Verhaltensweisen und emotionale Erpressung (&amp;ldquo;Wenn Du nicht x für mich machst, spiele ich nicht mehr mit Dir&amp;rdquo;),&lt;/li&gt;
&lt;li&gt;und inkompatible Spielziele.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Das ist alles kein Beinbruch und nicht unerwartet.
Es macht es aber notwendig, daß man sich mit der ganzen Runde zusammensetzt und miteinander redet.
Auch dazu ist der Discord sehr nützlich.&lt;/p&gt;
&lt;p&gt;Minecraft Server können als PvE und PvP Server konfiguriert sein.
Mit Plugins sind auch Welten mit besonderen PvP-Varianten möglich, &amp;ldquo;Bedwars&amp;rdquo; (&amp;ldquo;Capture the Flag&amp;rdquo;, hier ein Bett) und Variationen zum Thema &amp;ldquo;Among Us&amp;rdquo; sind sehr populär.
PvP muss also nicht zwingend First-Person-Shooter Spiel sein.&lt;/p&gt;
&lt;p&gt;Weder im PvE noch im PvP fließt Blut. Es kommen Schwerter und Bogenwaffen vor, keine Gewehre. Die Grafik ist auch mit Render-Plugin immer blockig-pixelig, und es sind keine Details erkennbar.&lt;/p&gt;
&lt;p&gt;Bisher hatten die meisten bei uns erlebten Probleme ihren Kontext eher im PvE-Umfeld als im PvP Umfeld.&lt;/p&gt;
&lt;h2 id=&#34;ein-eigener-server&#34;&gt;
    &lt;a href=&#34;#ein-eigener-server&#34;&gt;
	Ein eigener Server
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Es gibt irgendwo auf der Minecraft-Site einen vom Client getrennten Server zum Herunterladen.
Dieser Server ist langsam und buggy.
Niemand verwendet ihn, außer als Grundlage für etwas Richtiges.&lt;/p&gt;
&lt;p&gt;Stattdessen durchläuft man den Installationsprozeß von &lt;a href=&#34;https://getbukkit.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bukkit oder Spigot&lt;/a&gt;

.
Dies setzt eine Maschine mit ausreichend Kernen und Speicher sowie einem installierten headless OpenJDK voraus.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Bukkit&lt;/dt&gt;
&lt;dd&gt;ist ein minimal veränderter Vanilla-Server und eher eine Demo für den Reverse Engineering und Patching Prozess.&lt;/dd&gt;
&lt;dt&gt;Spigot&lt;/dt&gt;
&lt;dd&gt;ist ein auf Performance optimierter und weiter aufgehackter Bukkit, und eher die Version die man installieren will.&lt;/dd&gt;
&lt;dt&gt;PaperMC&lt;/dt&gt;
&lt;dd&gt;ist ein weiterer Zweig, basierend auf Spigot, und noch klarer auf Performance optimiert. PaperMC unterstützt jedoch anders als Spigot nur die beiden neusten Versionen von Minecraft aktiv. Wer älteres Minecraft verwenden will oder muß wird mit PaperMC nicht glücklich.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Der Installationsprozeß ist dabei ein wahres Wunderwerk an Installationsautomation:
Er lädt den originalen Minecraft-Server herunter, ein obfuscated JAR.
Dies wird dann dekompiliert und mit einer Symboltabelle deobfuscated.
Dadurch entsteht ein reproduzierbarer lesbarer Sourcetree, der dann gepatcht wird.
Der resultierende Sourcetree wird dann compiliert, zusammengepackt und ein neues Server-JAR entsteht.
Dies ist dann die Grundlage für den eigenen Serverprozeß.&lt;/p&gt;
&lt;p&gt;Der ganze komplizierte Prozess klingt komplett haarsträubend, ist ein aber vollautomatischer Vorgang, der ausgesprochen reibungsfrei abläuft.
Der gepatchte Serverprozeß ist gegenüber dem Originalserver deutlich ärmer an Fehlern, um Größenordnungen schneller und hat eine dokumentierte und stabile API für Server-Erweiterungen (Plugins).&lt;/p&gt;
&lt;p&gt;Zum Server gehören auch noch eine &lt;code&gt;eula.txt&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;~minecraft/bukkit $ cat eula.txt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;By changing the setting below to TRUE you are indicating your agreement to our EULA &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;https://account.mojang.com/documents/minecraft_eula&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;Mon Aug &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt; 17:04:21 CEST &lt;span class=&#34;m&#34;&gt;2019&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;eula=true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;und eine etwa längliche &lt;code&gt;server.properties&lt;/code&gt;-Datei, die die eigentliche &lt;a href=&#34;https://www.spigotmc.org/wiki/spigot-configuration-server-properties/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Konfiguration&lt;/a&gt;

 des Basis-Servers darstellt.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft4.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Dem Serverprozeß wird reichlich Speicher gegeben, aber trotz der großen Anzahl von Plugins liegt die effektive Prozeßgröße bei circa 3 GB (aber es laufen 84 Java-Threads).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Der Serverprozeß ist ursprünglich recht klein, aber wenn man den Server mit Plugins vollstopft nach oben offen.
Andererseits liegt ein Strato VPS mit 8 Kernen und 32 GB Speicher bei monatlich kündbaren 17 Euro und ist reichlich überprovisioniert für die Aufgabe.
Irgendwo zwischen dieser Größe und einem Raspi 4 findet man sicherlich was Passendes.&lt;/p&gt;
&lt;p&gt;Wer den Server nicht selbst installieren will, nimmt sich einen Servermanager &amp;ndash; es gibt viele mit zweifelhaftem Code und bunten Panels, und es gibt &lt;a href=&#34;https://github.com/dirien/minectl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;minectl&lt;/code&gt;&lt;/a&gt;

. Ich nehme einfach ein Shellscript:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;~minecraft/bukkit  $ cat starter.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#! /bin/bash --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;TIME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/home/minecraft/bukkit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;SERVER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;basename &lt;span class=&#34;nv&#34;&gt;$DIR&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$DIR&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; :
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        java -Xmx8192M -Xms3072M -Xss1m -jar &lt;span class=&#34;nv&#34;&gt;$DIR&lt;/span&gt;/server.jar nogui
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$SERVER&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;: Java stopped or crashed. Waiting &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TIME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; seconds...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        sleep &lt;span class=&#34;nv&#34;&gt;$TIME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;clients-managen&#34;&gt;
    &lt;a href=&#34;#clients-managen&#34;&gt;
	Clients managen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wie auch der Server ist der Minecraft-Client eigentlich nicht erweiterbar.
Der Minecraft Launcher erlaubt immerhin die Verwaltung mehrerer Versionen, legt einen aber auf ein bestimmtes JDK fest (je nach Version auf ein anderes).&lt;/p&gt;
&lt;p&gt;Bastelt man intensiver am Client rum, hat man aber schnell das Problem, bestimmte (andere) JDK-Versionen verwenden zu müssen, den Client mit einer Mod-API modifizieren zu müssen oder unterschiedliche Mod-Konfigurationen für verschiedenen Gruppen und Aufgaben zu haben.
Das Werkzeug der Wahl für die Client-Verwaltung ist &lt;a href=&#34;https://multimc.org/#Download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MultiMC&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Es erlaubt es, das Spiel mit einem anderen, moderneren JDK auszuführen und unterschiedliche Spieler-Accounts zu verwalten.
Es automatisiert auch analog zum Server-Build, den Client automatisiert zu dekompilieren und zu patchen, um ihm eine stabile Mod-API zu verpassen.
Populär sind Forge und Fabric, die direkt von MultiMC integriert werden.
Danach kann man den Client dann mit Mods voll laden.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft5.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;MultiMC mit einer Instanz von Minecraft 1.14.4 und installiertem Fabric. Zu neue Minecraft-Versionen werden von der Mod-Community noch nicht voll unterstützt, zu alte nicht mehr. Die 1.14-Serie hat im Moment gute Kompatibilität.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Mit den Mods und Plugins sollte man unbedingt mit dem Kind Vereinbarungen treffen.
Je nach Lebenserfahrung und Verständnis von Werten kann das Kind hier leicht ein Opfer von Scam, Abzocke und Phishing werden.
Auf der anderen Seiten kann man mit dem Kind, sobald es fragt oder sich die Gelegenheit bietet, über Merkmale von vertrauenswürdigen und seltsamen Webseiten reden und am Beispiel erklären, was eine Seite komisch aussehen lässt.&lt;/p&gt;
&lt;p&gt;Auch wenn man dem Kind zuhört, bieten die Geschichten von anderen und wie es ihnen ergangen ist, viele Haken und Themen, an denen man erklärend ansetzen kann, oder die man zum Anlass nehmen kann, gemeinsam nachzusehen und darüber zu sprechen, wie ehrliche und unehrliche Angebote aussehen.
Einige alternative Clients bieten Anti-Cheat-Möglichkeiten durch Totalüberwachung des Clients an.
Auch hier kann man einhaken, Regeln setzen und erklären, warum zum Beispiel dauernd laufende Hintergrundprozesse, Gerätetreiber, die Tastendrücke überwachen und andere Kontrollmaßnahmen ein No-Go sind.&lt;/p&gt;
&lt;h2 id=&#34;content-konsumieren-und-produzieren&#34;&gt;
    &lt;a href=&#34;#content-konsumieren-und-produzieren&#34;&gt;
	&amp;ldquo;Content&amp;rdquo; konsumieren und produzieren
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Der ganze Teil der Community, der sich mit Plugins und Mods beschäftigt, dokumentiert und bildet aus.
Das geschieht in der Regel nicht nur geschrieben im Wiki, sondern auch mit Tutorials auf Youtube, Twitch und GitHub.
Sobald das Kind hier aktiv wird, wird man wieder Accounts machen müssen (2FA!).
Und ja, das heißt vermutlich auch GitHub.&lt;/p&gt;
&lt;p&gt;Wir haben die Vereinbarung, daß wir die Accounts machen, und daß wir allen Content zu sehen bekommen, bevor er veröffentlicht wird.
Es ist okay, Bildschirme zu zeigen und zu sprechen.
Gesichter und reale Namen und Adressen sind tabu: Es werden nur Avatare gezeigt und nur Handles benutzt.&lt;/p&gt;
&lt;p&gt;Die Vereinbarung, Plugins und Mods vor der Installation zu sehen zu bekommen hat sich nicht bewährt:
Es ist also damit zu rechnen, daß der Server oder der Client verloren gehen.
Eine Recovery-Strategie, etwa &amp;ldquo;der Server kann mit Ansible neu gemacht werden&amp;rdquo; und &amp;ldquo;es läuft nachts um 3 ein automatisches Backup&amp;rdquo; für den Server ist erfolgversprechender.
Auch für den Client (&amp;ldquo;verwende Time Machine&amp;rdquo;, &amp;ldquo;Hier ist ein Acronis&amp;rdquo;) ist das notwendig.&lt;/p&gt;
&lt;p&gt;Wegen &lt;a href=&#34;https://en.wikipedia.org/wiki/Children%27s_Online_Privacy_Protection_Act&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;COPPA&lt;/a&gt;

 läuft man Gefahr, Accounts bei US-Anbietern zu verlieren, wenn man nicht über das Geburtsjahr lügt &amp;ndash; das Kind muss über 13 Jahre alt sein, um legal einen Account haben zu können.
Anbieter, die Kinder unter 13 nicht komplett ablehnen, schränken die Accounts oft funktional bis zur Nutzlosigkeit ein.
Mit einem regulären Account, ein wenig partnerschaftlicher Aufsicht, und einer Lüge bei der Altersangabe fährt man in der Regel weitaus besser als mit verdummten Accounts.&lt;/p&gt;
&lt;p&gt;Falls das Kind selbst Content produziert ist das Risiko den Account zu verlieren oder gesperrt zu bekommen noch höher.
Daher sollte man den privaten Account und den publizierenden Account des Kindes strikt trennen, sodaß bei einer Sperrung nicht die Kontakte, private Mail und alle Kommunikationsmöglichkeiten mit weg sind.
Über Chrome Browser &lt;a href=&#34;https://www.techsolutions.support.com/how-to/how-to-create-and-switch-profiles-in-chrome-12564&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;User Profiles&lt;/a&gt;

 kann man das schnell und bequem umschalten, und das Kind lernt gleich noch OpSec und sich selbst geschickt zu publizieren.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.amazon.de/Its-Complicated-Social-Lives-Networked-ebook/dp/B00HUYT8TS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;It&amp;rsquo;s complicated&lt;/a&gt;

, und danach boyd ist immer lesenswert.&lt;/p&gt;
&lt;h2 id=&#34;selber-programmieren&#34;&gt;
    &lt;a href=&#34;#selber-programmieren&#34;&gt;
	Selber programmieren
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Minecraft ist eine Einstiegsdroge für die Programmierung.
Das Potenzial für die Selbstmotivation ist enorm, und der Support in der Community gewaltig.&lt;/p&gt;
&lt;p&gt;Für JetBrains IntelliJ existieren ganz ausgezeichnete Plugins für Server-Plugins und Client-Mods: &lt;a href=&#34;https://plugins.jetbrains.com/plugin/8327-minecraft-development&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Minecraft Development&lt;/a&gt;

 unterstützt Bukkit, Spigot und PaperMC sowie einen Haufen weiterer populärer Servervarianten.&lt;/p&gt;
&lt;p&gt;IntelliJ selbst ist stabil (Eclipse meiner Erfahrung nach nicht) und hat einen sehr überschaubaren Ressourcenverbrauch: ~2 GB maximale Prozeßgröße, realer Verbrauch oszilliert von 512 MB bis 1024 MB.&lt;/p&gt;
&lt;h1 id=&#34;fazit&#34;&gt;
    &lt;a href=&#34;#fazit&#34;&gt;
	Fazit
    &lt;/a&gt;
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Maschine zum Spielen bereitstellen. Ein abgelegtes Mac oder Windows-Notebook tun sicher, die kommende Java-IDE wird die Maschine eher an die Grenzen bringen als das Spiel.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.minecraft.net/en-us/store/minecraft-java-edition&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Minecraft Java Edition&lt;/a&gt;

 kaufen.
&lt;ul&gt;
&lt;li&gt;Oder den Gamepass holen &amp;ndash; Minecraft ist seit kurzem in der Java und in der Bedrock Edition Teil vom Gamepass.&lt;/li&gt;
&lt;li&gt;Den dazu notwendigen Microsoft-Account mit 2FA sichern.&lt;/li&gt;
&lt;li&gt;Einen Screenshot vom 2FA QR-Code offline (USB-Stick?) archivieren.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://discord.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Discord&lt;/a&gt;

 Account machen.
&lt;ul&gt;
&lt;li&gt;2FA aktivieren.&lt;/li&gt;
&lt;li&gt;Den QR-Code sichern.&lt;/li&gt;
&lt;li&gt;Discord installieren.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Java installieren.
&lt;ul&gt;
&lt;li&gt;Man will OpenJDK, nicht Oracle, und man will vermutlich JDK 11, 16 oder 17 (das hängt später ein wenig von den Mods ab).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://multimc.org/#Download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MultiMC&lt;/a&gt;

 installieren.
&lt;ul&gt;
&lt;li&gt;Es kann sein, daß gleich nach dem Download beim ersten Run ein Upgrade angeboten wird. Annehmen.&lt;/li&gt;
&lt;li&gt;Sicherstellen, daß das gewünschte JDK gefunden wird. Dadurch wird nicht das steinalte Default-Download-JDK verwendet.&lt;/li&gt;
&lt;li&gt;Minecraft (Microsoft Account eintragen) eintragen.&lt;/li&gt;
&lt;li&gt;Spiel-Instanz erzeugen.&lt;/li&gt;
&lt;li&gt;Forge &lt;em&gt;oder&lt;/em&gt; Fabric installieren.&lt;/li&gt;
&lt;li&gt;Danach erst die Mods zufügen.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Server mit externen Spielern nicht daheim betreiben:
&lt;ul&gt;
&lt;li&gt;VPS oder ähnlich besorgen.&lt;/li&gt;
&lt;li&gt;Installation ansibilisieren.&lt;/li&gt;
&lt;li&gt;Backup einrichten und Restore testen.&lt;/li&gt;
&lt;li&gt;Server Buildprozess durchlaufen lassen, resultierendes Binary ansibilisieren.&lt;/li&gt;
&lt;li&gt;Server in Betrieb nehmen, Zugang kontrollieren.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Zusammen mit dem Server auch gleich eine virtuelle Discord-Serverinstanz für die Spieler einrichten.
&lt;ul&gt;
&lt;li&gt;Selbst Owner vom Dicord bleiben: Kind so weit entrechten, daß es den Server noch moderieren kann, aber nicht kaputt machen.&lt;/li&gt;
&lt;li&gt;Das Kind wird vermutlich bald selbst eine 2. Discord-Instanz ohne Eltern einrichten.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Es funktioniert wie spezifiziert</title>
      <link>https://blog.koehntopp.info/2021/12/14/funktioniert-wie-spezifiziert.html</link>
      <pubDate>Tue, 14 Dec 2021 20:32:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/12/14/funktioniert-wie-spezifiziert.html</guid>
      <description>&lt;p&gt;Dieser Artikel basiert auf
&lt;a href=&#34;https://twitter.com/isotopp/status/1470668771962638339&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;einem Twitter-Thread&lt;/a&gt;


und ist in deutscher Sprache als
&lt;a href=&#34;https://www.heise.de/meinung/Kommentar-zu-log4j-Es-funktioniert-wie-spezifiziert-6294476.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Heise Kommentar&lt;/a&gt;


erschienen.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Über den Java-Slogan &amp;ldquo;Write Once, Run Everywhere&amp;rdquo; wurden schon viele Witze gemacht.
Den log4j-Exploit behandeln viele nun wie einen Bug – das ist er nicht.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Eine kritische Lücke in der Java-Bibliothek Log4j beherrscht gerade die Schlagzeilen.
Die IT-Welt ruft &amp;ldquo;Warnstufe Rot&amp;rdquo; aus – weil offenbar der log4j-Code JNDI-Variablenexpansion vornehmen kann.
Doch was ist JNDI?
Jindi al Dap ist der Name eines alten arabischen Philosophen und Mathematik-Pioniers, der für Sun/Oracle gearbeitet hat, um &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/jndi/overview/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ein System von Directory Lookups in Java&lt;/a&gt;

 zu entwickeln.
Dieses System lädt irgendwie Code aus dem Internet nach.
Aber selbst, wenn man länger auf das Systemdiagramm starrt, erkennt man nicht unbedingt sofort, an welcher Stelle sich der Java CLASSPATH so erweitert, dass er das gesamte Internet umfasst:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/spezifiziert1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Systemdiagramm des JNDI Subsystems von Java, aus der &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/jndi/overview/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dokumentation&lt;/a&gt;

.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;nichts-ist-jemals-simpel&#34;&gt;
    &lt;a href=&#34;#nichts-ist-jemals-simpel&#34;&gt;
	Nichts ist jemals simpel.
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das ist so, weil in Java nichts jemals simpel ist.
Java Code ist unstrukturierter trockener Staub von Codefragmenten in Klassendateien, die inert in keiner Weise miteinander interagieren.
Erst mit den passenden Factories, Delegates, Generators und ClassLoaders werden sie instanziiert und zusammengesetzt.
Der entstehende Haufen an Querverweisen führt dann nur zufällig irgendwann einmal tatsächlich wirksamen Code aus. Man könnte jetzt auf die Idee kommen, eine IDE mit integrierter syntaktischer Codesuche zu verwenden, um diesen Quelltexthaufen in Form zu bringen und zu verstehen.
Aber das ist vergebens:
Auch mit der gesamten Codebasis und einem Index darauf kann man nicht vorhersagen, was eine gegebene Java Codebase tun wird, wenn man sie startet.&lt;/p&gt;
&lt;p&gt;Es braucht auch noch Konfigurationsdateien.
Diese sind ein weiterer Haufen &amp;ndash; Properties-Dateien &amp;ndash; in einem vorsintflutlichen Vorläufer von YAML geschrieben: XML.
Oder jedenfalls, das ist es, was wir denken sollen:
Mit den Properties und der Codebasis können wir endlich versuchen zu verstehen, was Java tut.
Und das wäre auch beinahe so, aber JNDI ist genau angetreten, dieses Problem zu beheben:
Directory Lookups!
Statt also die Anwendung und ihre Konfiguration zu paketieren, und dann die Pakete in Produktion zu installieren, können wir nun mit JNDI die Konfiguration vom Netz lesen.
Das heißt, die eigentlichen Konfigurationsdateien, die uns sagen, was die Anwendung tut sind&amp;hellip; nicht mehr da.
Fortschritt!&lt;/p&gt;
&lt;p&gt;Das stellt sicher, dass uns niemand mehr hacken kann, weil niemand den Code mehr versteht:
Wichtige, zum Verständnis der Codebasis notwendige Informationen sind versteckt in einem Verzeichnisdienst, und wir wissen nicht mal welcher.
Aber wir können das noch einen Schritt weiterspielen:
Der Code, der den Directory Lookup vornimmt, ist auch nicht da, nur ein Bootstrap:
&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/jndi/overview/event&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Event and Service Provider Packages&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/spezifiziert2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Laut &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/jndi/overview/event&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dokumentation&lt;/a&gt;

 können wir Objekte aus der Nameing API bekommen und dort hinein serialisieren. Wir bekommen also Printer-Objekte mit Printer-Methoden aus dieser API, wenn wir danach fragen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Dank JDNI SPI können wir also Java Classfiles von einem LDAP-Server ausliefern lassen, die angeblich ein Printer-Object generieren, wenn wir nach einem Printer fragen &amp;ndash; dann aber stattdessen Doom installieren.
Oder einen Kryptominer oder Verschlüsselungstrojaner.
So geht Enterprise Security!&lt;/p&gt;
&lt;h2 id=&#34;write-once-run-everywhere&#34;&gt;
    &lt;a href=&#34;#write-once-run-everywhere&#34;&gt;
	Write Once, Run Everywhere!
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Der Java-Slogan ist ja &amp;ldquo;Write Once, Run Everywhere&amp;rdquo;.
Wir haben da viele Witze drüber gemacht, weil Java so oft gecrashed ist &amp;ndash; die meisten Java-Anwendungen liefern inzwischen ja die gesamte Ausführungsumgebung einschließlich der JRE mit, damit überhaupt etwas funktioniert.
Jetzt funktioniert endlich mal alles, und die Leute sind wieder unglücklich.
Aber im Ernst: Viele behandeln den log4j-Exploit wie einen Bug, einen Programmierfehler, eine Verletzung einer Spezifikation.
Genau das ist jedoch nicht der Fall:&lt;/p&gt;
&lt;p&gt;Es funktioniert &amp;ndash; wortwörtlich &amp;ndash; endlich einmal alles wie spezifiziert und dokumentiert:
All die Modularität und dynamische Erweiterbarkeit von Java hat ganz wunderbar und genau wie geplant zusammengearbeitet und funktioniert.
Darauf haben wir dekadenlang hingearbeitet!&lt;/p&gt;
&lt;h2 id=&#34;notabug-wontfix&#34;&gt;
    &lt;a href=&#34;#notabug-wontfix&#34;&gt;
	&amp;ldquo;NOTABUG, WONTFIX&amp;rdquo;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Und das ist das eigentliche Problem hier.
Viele rufen jetzt nach &amp;ldquo;Mehr Kontrolle!&amp;rdquo;, &amp;ldquo;Mehr Review!&amp;rdquo;, &amp;ldquo;Mehr Funding!&amp;rdquo;, &amp;ldquo;Mehr Augen auf den Code!&amp;rdquo;.
Was wirklich helfen würde wäre weniger Code, weniger Indirektion und Boilerplate, und einfach mehr&amp;hellip; Einfachheit.&lt;/p&gt;
&lt;p&gt;Wieso brauche ich ein &lt;code&gt;LogAppenderFactorySingleton&lt;/code&gt;, das XML liest, um den Namen der Klasse zu bekommen, die es instanziieren muss, damit ich meine Logzeile da einwerfen kann, um sie asynchron an einen &lt;code&gt;LogStream&lt;/code&gt; anzuhängen?
Das ist nicht einfach.
Was ist einfach?
JSON nach stderr drucken.
Das ist einfach.
Aber Firmen stellen seit etwa einer Dekade Leute ein, die nicht wissen, was stdout und stderr sind und das ist irgendwie okay, weil inzwischen ja sowieso alles ein Webservices ist&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/spezifiziert4.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ein totales log4shell Nonmention von &lt;a href=&#34;https://twitter.com/apenwarr/status/1469183890749558784&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;apenwarr&lt;/a&gt;

.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Softwareentwicklung ist viel moderner geworden:
Wir haben Merge Requests mit Code Review, CI/CD-Pipelines, Infrastructure as Code und Immutable Infrastructure.
Das nützt nur nix, wenn meine Java Logging Library &lt;a href=&#34;https://twitter.com/TheASF/status/1400875147163279374&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;auf dem Mars Code von Directory-Servern auf der Erde nachlädt&lt;/a&gt;

 und so das &amp;ldquo;Remote&amp;rdquo; in RCE komplett neu definiert.
Die Analyse von Dependencies hat nur dann Sinn, wenn die Liste dieser Abhängigkeiten endlich, und genau so immutable wie die Infrastruktur ist.&lt;/p&gt;
&lt;p&gt;Java hatte einmal die notwendigen Kontrollknöpfe, mit denen wir erzwingen konnten, dass diese Liste von Abhängigkeiten endlich und unveränderlich ist.
Wenn man auf diese Art von Lebensstil steht, gibt es etwas, das sich SM nennt: &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/essential/environment/security.htmlOracle&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Oracle SM&lt;/a&gt;

.
SM bringt die notwendigen Verträge und die Disziplin, die eine Codebase braucht.
Aber die meisten Anwender stehen nicht auf SM, und lehnen die Idee ab.
Also wird die Funktionalität in Java 17 als deprecated (veraltet) gekennzeichnet und später entfernt werden (&lt;a href=&#34;https://openjdk.java.net/jeps/411&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JEP 411: Deprecate the Security Manager for Removal&lt;/a&gt;

).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/spezifiziert3.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;h2 id=&#34;wie-ein-dreijähriger&#34;&gt;
    &lt;a href=&#34;#wie-ein-dreij%c3%a4hriger&#34;&gt;
	Wie ein Dreijähriger
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Auch JNDI hat SM abgelehnt und hat ein promiskuitives Interface, das Code irgendwoher lädt und ausführt.
Man muss sich das wie einen Dreijährigen vorstellen, der sich jede Klasse in den Mund steckt, um herauszufinden wie sie schmeckt und ob sie sich ausführen lässt.
Das ist am Ende genau die Spezifikation:
Hier ist ein Object, deserialisiere es.
In Java bedeutet das, dass der Code für die Klasse des Objektes irgendwo her kommen muss, deren Methoden dann ausgeführt werden.&lt;/p&gt;
&lt;p&gt;Natürlich würde niemand das für eine gute Idee halten, wenn man es so formuliert.
Aber andererseits hat es die Person, die das vor 8 Jahren implementiert hat, nicht gesehen, und auch die Hunderttausend, die log4j in ihre Codebasis importiert haben, sind nicht darüber gestolpert.
Was sagt uns das über den Dependency-Management-Prozess von Organisationen, die Software entwickeln?
Über das Verständnis der Codebase, der Abhängigkeiten, und der Prozesse, die Datenfluss und Releases planen?
Ja, genau.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Wir verwenden eine modulare Architektur und agile Methoden, um die Entwicklungsgeschwindigkeit zu steigern.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E = 1/2m*(v^2)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Mehr Entwicklungsgeschwindigkeit macht größere Krater.&lt;/p&gt;
&lt;h2 id=&#34;code-ist-nicht-dein-freund&#34;&gt;
    &lt;a href=&#34;#code-ist-nicht-dein-freund&#34;&gt;
	Code. Ist. Nicht. Dein. Freund.
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ganz besonders nicht dynamisch aus dem Internet nachgeladener Code.&lt;/p&gt;
&lt;p&gt;Code. Ist. Nicht. Dein. Freund.&lt;/p&gt;
&lt;p&gt;Ich weiß, es klingt komisch, wenn man Entwickler ist und den eigenen Lebensunterhalt damit bestreitet, dass man glaubt, man sei mit dem Code befreundet.&lt;/p&gt;
&lt;p&gt;Aber so ist es.
Weniger Code ist besserer Code.
Am besten so wenig Code, dass man ihn zur Gänze und mit allen seinen Interaktionen verstehen kann.
Und auch den Code, der notwendig ist, um den eigenen Code zu betreiben.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Discord Nitro Spam and 2FA</title>
      <link>https://blog.koehntopp.info/2021/11/30/discord-nitro-spam-and-2fa.html</link>
      <pubDate>Tue, 30 Nov 2021 08:29:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/30/discord-nitro-spam-and-2fa.html</guid>
      <description>&lt;p&gt;This morning the Discord account of my son started to send &amp;ldquo;free nitro&amp;rdquo; spam to his friends on the friend list, and to some Discords he was a member of.
He had 2FA (Google Authenticator) on the account.
That fact alone made this a recoverable failure.&lt;/p&gt;
&lt;p&gt;My son is playing minecraft, has a friend list of around 100 fellow players, and is member of around 40 Discords.
He also connected his Discord to Spotify, YouTube and other servies, and he authorized around 12 application services, mostly Discord/Minecraft bot services.
It is pretty safe to say that his Discord account is very valuable to him, and plays a central part in his pandemic coping.&lt;/p&gt;
&lt;p&gt;The spam was sending messages to all his friends, and a few Discords, impersonating him.
It was not acting as a bot, or even one of his own bots.
That means the spammer had accessed his account and identity.&lt;/p&gt;
&lt;h2 id=&#34;recovery-was-easy-thanks-to-2fa&#34;&gt;
    &lt;a href=&#34;#recovery-was-easy-thanks-to-2fa&#34;&gt;
	Recovery was easy, thanks to 2FA
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Changing the account password is a 2FA protected operation, and invalidates all other login tokens.&lt;/p&gt;
&lt;p&gt;That means, only a person having access to his cellphone can 2FA and change the password - him (or, this time, me).
It also means his Desktop client, all spammers impersonating him and everyone else is logged out.
This stopped the Spam dead immediately.&lt;/p&gt;
&lt;h2 id=&#34;how-the-spam-works&#34;&gt;
    &lt;a href=&#34;#how-the-spam-works&#34;&gt;
	How the spam works
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The &amp;ldquo;free nitro&amp;rdquo; spam is a message promising Discord Nitro (Server Boost, a pay feature) for free.
It contains a link that leads you to a typosquatter domain displaying Discords original CI.
It presents you with a QR code to scan.&lt;/p&gt;
&lt;p&gt;It then directs you to open the Discord app on the phone, hit the settings, hit the personal icon on the right and use the function labelled &amp;ldquo;Scan QR code&amp;rdquo; to claim the prize.&lt;/p&gt;
&lt;p&gt;Nothing in the UI of the original Discord cellphone app explains to a casual observer what this function does:
&amp;ldquo;Using this function will log somebody in to your account&amp;rdquo;.
The copy is simply &amp;ldquo;Scan QR code&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/discord-scan-qr.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Discord Settings show the &amp;ldquo;Use the cellphone to auth the desktop app&amp;rdquo; function simply as &amp;ldquo;Scan QR Code&amp;rdquo;. Nothing explains what the function really does: It logs in somebody which may or may not be you. Never use this function.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Doing what is being asked will provide a bot with a login token to your account.
The bot will then begin to send spam in your name to your friends and all discords you are member of.&lt;/p&gt;
&lt;p&gt;It will also change your password, if it can.
It cannot do that when 2FA is active on your account.
2FA is literally saving your account here.&lt;/p&gt;
&lt;h2 id=&#34;training-your-kid&#34;&gt;
    &lt;a href=&#34;#training-your-kid&#34;&gt;
	Training your kid
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Here is what to do: Train your kid to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use 2FA properly, and always use this and no login shortcuts.&lt;/li&gt;
&lt;li&gt;archive the original 2FA QR codes used for setting up 2FA. Make a screenshot, and store the PNG of the setup QR code on a USB stick or another offline storage for recovery. This is much easier than the regular account recovery procedures 2FA setups offer, and unlike them, it is one way that works the same for all accounts. It also lets you have the 2FA code generator on the phone and a tablet, for example.&lt;/li&gt;
&lt;li&gt;Never re-use passwords. In the case of my son, he did not use his Discord password anywhere else, and he has a password list. Thus, he had to change only the Discord password and not fix any other accounts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, help your kid: Audit their online accounts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;make yourself a calendar entry to audit the accounts your kid has every 6 months:
&lt;ul&gt;
&lt;li&gt;Check the password store: Make sure passwords are not re-used.&lt;/li&gt;
&lt;li&gt;Check 2FA: Have it enabled everywhere possible where regular TOTP can be used. Avoid Steam Authenticator or other special 2FA apps that may be offered, they are just more to learn and confusing. They break important workflows that must always be done right.&lt;/li&gt;
&lt;li&gt;Check account connections, cross-authentication, enabled bots and their permissions and so on.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;actually perform the audit.
&lt;ul&gt;
&lt;li&gt;Have your kid sit in on this, and explain what you do and why. Discuss your thought with them, and the risk analysis you do. Explain online business models with them, too: How is this service or game making money, where is the value, do you think that is okay? What do you want? Offer opinions and evaluation, but try to let them make choices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, hold yourself to the same standards.&lt;/p&gt;
&lt;p&gt;For the record, my personal Google Authenticator has 18 entries.
I did not specifically set out to maximize that, so just take this as a guidance, not a competition.&lt;/p&gt;
&lt;h2 id=&#34;2fa-works&#34;&gt;
    &lt;a href=&#34;#2fa-works&#34;&gt;
	2FA works!
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Again, note how 2FA worked exactly the way it is designed to work:&lt;/p&gt;
&lt;p&gt;It made a loss of control on the account a recoverable operation.
Instead of a permanent and total loss of the center of his online life, this was just an awkward 30 minutes and a bunch of apologies.&lt;/p&gt;
&lt;p&gt;Also note that while Discord is the better Slack, it does have UI/UX design problems around QR code quick authentication.
Never use this function.
Train your kid to not use this function.
Always login with username, password and 2FA.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL: Moving Average</title>
      <link>https://blog.koehntopp.info/2021/11/24/mysql-moving-average.html</link>
      <pubDate>Wed, 24 Nov 2021 22:28:27 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/24/mysql-moving-average.html</guid>
      <description>&lt;p&gt;MySQL window functions can be used to calculate daily averages or moving averages for a 24h time window relatively easily.
In an &lt;a href=&#34;https://blog.koehntopp.info/2020/06/21/mysql-window-functions.html&#34;&gt;earlier article&lt;/a&gt;

 basic window functions were already discussed.
In this article, we want to see how we can get daily buckets and moving averages.&lt;/p&gt;
&lt;p&gt;A sample program is available, as usual, &lt;a href=&#34;https://github.com/isotopp/mysql-dev-examples/blob/master/mysql-rolling-window/rolling-window.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;on GitHub&lt;/a&gt;

.&lt;/p&gt;
&lt;h1 id=&#34;getting-sample-data&#34;&gt;
    &lt;a href=&#34;#getting-sample-data&#34;&gt;
	Getting sample data
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;We will be working with a data table named &lt;code&gt;data&lt;/code&gt;, with three columns: a sensor &lt;code&gt;id&lt;/code&gt;, a measurement datetime &lt;code&gt;d&lt;/code&gt; and a metric value &lt;code&gt;m&lt;/code&gt; that was sampled at that time.
The table definition looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Create a data table&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setup_tables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sql_setup&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;drop table if exists data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34; create table data (
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                id integer not null,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                d datetime not null,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                m integer not null,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                primary key (id, d)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;        )&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sql_setup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MySQLdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OperationalError&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;setup_tables: failed &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; with &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For one year, each day and for each of our 11 (0-10) sensors, 1001 values will be collected.
We insert a random time within the day, and a random measured value, an integer between 0 and 1000.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Fill data table with test data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;--start&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2020-01-01 00:00:00&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Start date and time yyyy-mm-dd hh:mm:ss&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;--end&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2020-12-31 23:59:59&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;End date and time yyyy-mm-dd hh:mm:ss&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;--count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Number of values per day&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fill_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2020-01-01 00:00:00&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2020-12-31 23:59:59&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# Get rid of the old data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;truncate table data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;today&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromisoformat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromisoformat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;one_day&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;days&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# For one year, for each day:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;today&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Date = &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;today&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# For each measurement time:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;# a random sensor id, a random second in the day, and a random metric&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;today&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seconds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;86399&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;# are written to the database.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;insert into data (id, d, m) values (&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(id)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(d)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(m)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;# If the (id, time) combination is not unique, we get an error that we pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;m&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MySQLdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_exceptions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IntegrityError&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;# The Birthday Paradox in Action&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;# print(e)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# next day.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;today&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;one_day&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;daily-buckets-with-group-by&#34;&gt;
    &lt;a href=&#34;#daily-buckets-with-group-by&#34;&gt;
	Daily Buckets with GROUP BY
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Window Queries are somewhat related to aggregations with GROUP BY:
With GROUP BY we make look at each row under the lens of the GROUP BY statement.
All rows that have equal values as listed in the GROUP BY clause land on the same pile.
We can then apply aggregation functions to measure the pile.&lt;/p&gt;
&lt;p&gt;In our example, we could use &lt;code&gt;GROUP BY date(d)&lt;/code&gt;.
That is, our &lt;code&gt;datetime&lt;/code&gt; is turned into a &lt;code&gt;date&lt;/code&gt;, the time component is cut off.
Two values with the same date, but different times, are considered identical and would land on the same pile.
Different &lt;code&gt;id&lt;/code&gt; values or different metric values &lt;code&gt;m&lt;/code&gt; are also not used to select different piles.&lt;/p&gt;
&lt;p&gt;What we do is &lt;code&gt;GROUP BY id, date(d)&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Group by day&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;daily_groups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    select id
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;         , date(d) as d
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;         , count(m) as cnt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;         , sum(m) as total
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;         , sum(m)/count(m) as av 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;      from data 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    group by id, date(d)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    order by id, d
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetchall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;id: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;2d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; date: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  -  cnt: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cnt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;6d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; sum: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; average: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;av&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So two measurements from the same sensor-id and taken on the same date are put onto the same pile.&lt;/p&gt;
&lt;p&gt;MySQL offers us a number of functions to measure the pile: &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/aggregate-functions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Aggregate Functions&lt;/a&gt;

.
We can &lt;code&gt;COUNT()&lt;/code&gt; the number of rows, we can &lt;code&gt;SUM()&lt;/code&gt; them up, we can ask for their &lt;code&gt;AVG()&lt;/code&gt;, &lt;code&gt;MIN()&lt;/code&gt; or &lt;code&gt;MAX()&lt;/code&gt;.
But we can also ask for the values themselves as a comma separated list, using &lt;code&gt;GROUP_CONCAT()&lt;/code&gt;.
We can also ask for the values to be turned into JSON using &lt;code&gt;JSON_ARRAYAGG()&lt;/code&gt; or &lt;code&gt;JSON_OBJECTAGG()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In our example above, we ask for the sum and the count and calculate the average ourselves.
The output looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./rolling-window.py daily-groups &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01  -  cnt:     80 sum: 418888 average: 5236.1000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-02  -  cnt:     92 sum: 419129 average: 4555.7500
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-03  -  cnt:     94 sum: 417583 average: 4442.3723
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-04  -  cnt:     94 sum: 422754 average: 4497.3830
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-05  -  cnt:    101 sum: 515639 average: 5105.3366
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./rolling-window.py daily-groups &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -369 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tail -5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-30  -  cnt:     95 sum: 513361 average: 5403.8000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31  -  cnt:     94 sum: 480321 average: 5109.7979
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-01  -  cnt:     86 sum: 415058 average: 4826.2558
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-02  -  cnt:     93 sum: 443509 average: 4768.9140
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-03  -  cnt:     84 sum: 453897 average: 5403.5357
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Since we aggregate and order by id first, we get all values from sensor 0 first, for an entire year.
Then the values for sensor id 1 follow, starting again at the beginning of the year.
Each row of output has values for one day, because we aggregated that way.&lt;/p&gt;
&lt;p&gt;We can see how for each of the 10 sensors, approximately 90 values per day exist, but the actual value varies.
We can also see that the average is around 5000, but again, it varies each day.&lt;/p&gt;
&lt;h1 id=&#34;daily-partitions&#34;&gt;
    &lt;a href=&#34;#daily-partitions&#34;&gt;
	Daily Partitions
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Window functions work just like aggregates, if we ask for that with a PARTITION BY clause.
But they will return all rows instead of making piles.
So when we define &lt;code&gt;WINDOW w AS ( partition by id, date(d) order by id, d)&lt;/code&gt;, we will get our sensors by sensor and by date.
Each new sensor id, and each new date will restart &amp;ldquo;data collection&amp;rdquo;, that is, our sums or counts will be reset.&lt;/p&gt;
&lt;p&gt;Our code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Partition by day&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;daily_partitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    select id
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;         , d
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;         , count(m) over w as cnt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;         , sum(m) over w as total
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;         , sum(m) over w/count(m) over w as av 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;      from data
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;  window w as (
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    partition by id, date(d)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    order by id, d)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetchall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;id: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;2d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; date: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  -  cnt: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cnt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;6d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; sum: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; average: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;av&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can check the sums and counts, and see them be restarted:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./rolling-window.py daily-partitions &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; less
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 00:13:43  -  cnt:      1 sum: 6401 average: 6401.0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 00:14:25  -  cnt:      2 sum: 15746 average: 7873.0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 00:15:33  -  cnt:      3 sum: 19656 average: 6552.0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 23:09:13  -  cnt:     79 sum: 411728 average: 5211.7468
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 23:27:16  -  cnt:     80 sum: 418888 average: 5236.1000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-02 00:14:48  -  cnt:      1 sum: 5834 average: 5834.0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-02 00:15:21  -  cnt:      2 sum: 10970 average: 5485.0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31 23:01:21  -  cnt:     92 sum: 475441 average: 5167.8370
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31 23:14:32  -  cnt:     93 sum: 475494 average: 5112.8387
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31 23:25:47  -  cnt:     94 sum: 480321 average: 5109.7979
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-01 00:24:46  -  cnt:      1 sum: 7079 average: 7079.0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-01 00:32:22  -  cnt:      2 sum: 7989 average: 3994.5000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-01 01:01:40  -  cnt:      3 sum: 14551 average: 4850.3333
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can see how each time the day changes or the id changes the sum and count values start over.
Initially our count is 1, the sum is 6401 and the average is larger than 5000.
As we proceed through the day, we can see how the average converges against that expected value.&lt;/p&gt;
&lt;p&gt;After &lt;code&gt;2020-01-01 23:27:16&lt;/code&gt; at a count of &lt;code&gt;80&lt;/code&gt; the new day starts and the counters reset.&lt;/p&gt;
&lt;p&gt;The same happens at the end of the year, at &lt;code&gt;2020-01-01 23:27:16&lt;/code&gt; when we start over at the first of January, but with id=1.&lt;/p&gt;
&lt;h1 id=&#34;moving-average&#34;&gt;
    &lt;a href=&#34;#moving-average&#34;&gt;
	Moving average
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Instead of partitioning the data set by date boundaries we can also define a moving window instead.
This window is based on either values, or on date values.
In our case, we want the latter: for each metric date &lt;code&gt;d&lt;/code&gt;, we want to do our math on the preceding 24 hours.&lt;/p&gt;
&lt;p&gt;In code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Sliding window query - 24h&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;daily_window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    select id
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;         , d
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;         , count(m) over w as cnt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;         , sum(m) over w as total
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;         , sum(m) over w/count(m) over w as av 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;      from data
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;  window w as (order by d range between interval 1 day preceding and current row)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;  &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetchall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;id: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;2d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; date: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  -  cnt: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cnt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;6d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; sum: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; average: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;av&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Window clause is &lt;code&gt;WINDOW w AS (order by d range between interval 1 day preceding and current row)&lt;/code&gt;.
As we can see, the &lt;code&gt;id&lt;/code&gt; is out of the picture here:
We cannot nest window definitions, and that means in this example we count and sum over the previous 24h of &lt;strong&gt;all&lt;/strong&gt; sensors, not sensors with the same id as ours.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  6 date: 2020-01-01 00:03:44  -  cnt:      1 sum: 3420 average: 3420.0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id: 10 date: 2020-01-01 00:07:50  -  cnt:      2 sum: 5359 average: 2679.5000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  5 date: 2020-01-01 00:08:35  -  cnt:      3 sum: 12441 average: 4147.0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-04 20:40:46  -  cnt:    998 sum: 4842406 average: 4852.1102
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  7 date: 2020-01-04 20:41:49  -  cnt:    998 sum: 4842673 average: 4852.3778
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  8 date: 2020-01-04 20:43:00  -  cnt:    997 sum: 4833426 average: 4847.9699
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-04 20:43:05  -  cnt:    998 sum: 4837433 average: 4847.1273
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  7 date: 2020-12-31 23:54:52  -  cnt:   1003 sum: 5089623 average: 5074.3998
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  8 date: 2020-12-31 23:56:02  -  cnt:   1004 sum: 5092441 average: 5072.1524
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  8 date: 2020-12-31 23:59:56  -  cnt:   1000 sum: 5059683 average: 5059.6830````
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From the changing &lt;code&gt;id&lt;/code&gt; values we can see that all sensors are considered.
The count also shows that in the middle of the field around 1000 values are considered - the amount of values in one 24h range.&lt;/p&gt;
&lt;p&gt;An expression such as &lt;code&gt;order by id, d range between interval 1 day preceding and current row&lt;/code&gt; is not valid: we get&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MySQLdb._exceptions.OperationalError: (3587, &amp;#34;Window &amp;#39;w&amp;#39; with RANGE N PRECEDING/FOLLOWING frame requires exactly one ORDER BY expression, of numeric or temporal type&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We would have to ask for values from one sensor, specifically:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;over&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;over&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;over&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;over&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;between&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;interval&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;preceding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;and&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and do that for each successive constant &lt;code&gt;id&lt;/code&gt; value.
That is not fast nor elegant.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 00:13:43  -  cnt:      1 sum: 6401 average: 6401.0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 00:14:25  -  cnt:      2 sum: 15746 average: 7873.0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 00:15:33  -  cnt:      3 sum: 19656 average: 6552.0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-04-01 02:48:29  -  cnt:     99 sum: 463956 average: 4686.4242
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-04-01 03:07:43  -  cnt:    100 sum: 472922 average: 4729.2200
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-04-01 03:15:23  -  cnt:    101 sum: 478127 average: 4733.9307
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31 23:01:21  -  cnt:     97 sum: 500889 average: 5163.8041
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31 23:14:32  -  cnt:     96 sum: 487287 average: 5075.9063
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31 23:25:47  -  cnt:     97 sum: 492114 average: 5073.3402
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We would have to wrap all that into a dependent subquery to loop.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arista Type 7 Passwords</title>
      <link>https://blog.koehntopp.info/2021/11/22/arista-type-7-passwords.html</link>
      <pubDate>Sun, 21 Nov 2021 17:29:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/22/arista-type-7-passwords.html</guid>
      <description>&lt;p&gt;A friend of mine wanted to provision BGP passwords for their Arista switch configuration.&lt;/p&gt;
&lt;p&gt;So a config stanza such as&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;router bgp 65001
   router-id 10.1.1.1
   neighbor mydevices peer-group
   neighbor mydevices password 7 8kjYaye5DsQh0epELyKNe0oZ3E3zp39X
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;requires generation of the Password (actually &amp;ldquo;supersecretpassword&amp;rdquo;) in an encrypted form.&lt;/p&gt;
&lt;p&gt;Arista switches can do this using CLI tools, apparently.
They seem to have an onboard Linux, which seems to provide limited tooling, but is good enough to run a 32-bit Python 3.7.
Arista provides modules to help with handling their configuration.
&lt;a href=&#34;https://medium.com/@what_if/encrypting-decrypting-arista-bgp-bmp-ospf-passwords-ff2072460942&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ryan Gelobter&lt;/a&gt;


documented these in an article on Medium.&lt;/p&gt;
&lt;p&gt;Unfortunately, these modules are not well portable.
They have been implemented in a CPython module for Python 3.7 on i386 (32bit) Linux.
They also have a lot of dependencies to other shared objects that are not easily available except in the switch environment.&lt;/p&gt;
&lt;p&gt;So, if you wanted to provision switch configurations,
you would need to run some code on the switch to generate the passwords the way Ryan Gelobter documents,
or do the same in a virtual machine with a virtual switch running in it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;switch1# bash python -c &amp;#39;import DesCrypt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;print DesCrypt.encrypt(&amp;#34;BMP1_passwd&amp;#34;, &amp;#34;supersecretpassword&amp;#34;)&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;JieKbldfLyl9IzUBJZRvKIcc1w5wWogI
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Looking at the &lt;code&gt;DesCrypt.py&lt;/code&gt; is not particularly helpful:
The code in it does little more than&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;_DesCrypt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;encryptedData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_DesCrypt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cbcEncrypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and &lt;code&gt;_DesCrypt&lt;/code&gt; is actually &lt;code&gt;_Descrypt.cpython-37m-i386-linux-gnu.so&lt;/code&gt;.
Well, at least it is only 10 KB in size, so how hard can it be?&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s have a look:&lt;/p&gt;
&lt;h1 id=&#34;ghidra&#34;&gt;
    &lt;a href=&#34;#ghidra&#34;&gt;
	Ghidra
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;When we drop the module into Ghidra, we get to see a &lt;code&gt;PyInit__DesCrypt(void)&lt;/code&gt; symbol.
The code in that function just calls out to &lt;code&gt;PyModuleCreate2(&amp;amp;PyModuleDef, 0x3f5)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Looking at the &lt;code&gt;PyModuleDef&lt;/code&gt; requires &lt;a href=&#34;https://docs.python.org/3/c-api/module.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the documentation&lt;/a&gt;

 to properly understand what is going on.
We identify two functions, &lt;code&gt;cbcEncrypt&lt;/code&gt; and &lt;code&gt;cbcDecrypt&lt;/code&gt; by their &lt;a href=&#34;https://docs.python.org/3/c-api/structures.html#c.PyMethodDef&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;PyMethodDef&lt;/code&gt;&lt;/a&gt;

 entries.
Two labels for entry points in a stripped binary identified.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/arista-pymethoddef.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Python Method Definition Table for the _DesCrypt Module defines two functions, named &lt;code&gt;cbcEncrypt&lt;/code&gt; and &lt;code&gt;cbcDecrypt&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Looking at the &lt;code&gt;cbcEncrypt&lt;/code&gt; function shows us that it has a dependency on &lt;code&gt;cbc_crypt()&lt;/code&gt;,
and that seems to be a function from &lt;code&gt;libc&lt;/code&gt;, according to &lt;a href=&#34;https://linux.die.net/man/3/cbc_crypt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the manpage&lt;/a&gt;

.
So it is ancient DES, in CBC mode that is being used.
We should be able to do this in pure Python without many additional dependencies then.&lt;/p&gt;
&lt;p&gt;Using Ghidra more, we can decode &lt;code&gt;cbcEncrypt()&lt;/code&gt; and the &lt;code&gt;getHashedKey()&lt;/code&gt; function it calls.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;getHashedKey&lt;/code&gt; generates the key the usual way, by xor-ing the incoming string with itself in an 8 bytes long ring buffer, but the starting value is not all zeroes, but some magic value (&lt;code&gt;238ad5f51ec9a8d5&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;Also, &lt;code&gt;cbcEncrypt&lt;/code&gt; pads the data to an even 8 byte boundary as required by DES.
How much was padded needs to be embedded in the ciphertext.
There is a selection of standard methods for this, as offered for example by
&lt;a href=&#34;https://pycryptodome.readthedocs.io/en/latest/src/util/util.html#Crypto.Util.Padding.pad&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crypto.Util.Padding.pad()&lt;/a&gt;


in pycryptodome (&amp;ldquo;pkcs7&amp;rdquo;, &amp;ldquo;iso7816&amp;rdquo; and &amp;ldquo;x923&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cbcEncrypt&lt;/code&gt; uses none of these standard methods, and implements its own method:
the padding is encoded in the high nibble of a fixed magic int.&lt;/p&gt;
&lt;p&gt;That magic int is always prepended, even if no padding was necessary:
We get &lt;code&gt;?ebb884c&lt;/code&gt;, with &lt;code&gt;?&lt;/code&gt; indicating the number of padbytes (&lt;code&gt;0&lt;/code&gt; to &lt;code&gt;7&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/arista-gethashedkey.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ghidra Output of the getHashedKey() function, with a bit of annotation and typing added to get a better view.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;With this information, we should be able to recreate the function in our own C-code and check if it can recreate the examples Ryan Gelobter provided.&lt;/p&gt;
&lt;p&gt;Of course, it does not.&lt;/p&gt;
&lt;h1 id=&#34;debugging-the-original-code&#34;&gt;
    &lt;a href=&#34;#debugging-the-original-code&#34;&gt;
	Debugging the original code
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;We need to debug, and in order to be able to do that we need to be able to load and isolate &lt;code&gt;getHashedKey()&lt;/code&gt; first.
The original version, to check what the actual hashed key should look like, and compare the result to our own.&lt;/p&gt;
&lt;p&gt;That should be easy:
An example &lt;a href=&#34;https://blog.koehntopp.info/2005/10/08/dynamisch-geladener-code.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;from 2005&lt;/a&gt;

 (german language article) shows&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to turn a function into a &lt;code&gt;libsomething.a&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;then into &lt;code&gt;libsomething.so&lt;/code&gt;, and&lt;/li&gt;
&lt;li&gt;then how to &lt;code&gt;dlopen()&lt;/code&gt; and &lt;code&gt;dlsym()&lt;/code&gt; that binary to call a single function in it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That final piece of code will serve us well:
We want to load the _DesCrypt module and call &lt;code&gt;getHashedKey()&lt;/code&gt; in an isolated context to see what a correct return value looks like.&lt;/p&gt;
&lt;h1 id=&#34;dependencies&#34;&gt;
    &lt;a href=&#34;#dependencies&#34;&gt;
	Dependencies
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Turns out, loading &lt;code&gt;_DesCrypt...so&lt;/code&gt; is not so easy, because of a dependency on &lt;code&gt;libtac.so.0&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ldd _DesCrypt.cpython-37m-i386-linux-gnu.so
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        linux-gate.so.1 (0xf7f7c000)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        libtac.so.0 =&amp;gt; not found
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        libpython3.7m.so.1.0 =&amp;gt; not found
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        libstdc++.so.6 =&amp;gt; /lib32/libstdc++.so.6 (0xf7d81000)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        libm.so.6 =&amp;gt; /lib32/libm.so.6 (0xf7c7d000)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        libgcc_s.so.1 =&amp;gt; /lib32/libgcc_s.so.1 (0xf7c5e000)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        libc.so.6 =&amp;gt; /lib32/libc.so.6 (0xf7a73000)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        /lib/ld-linux.so.2 (0xf7f7e000)```
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So we are missing two libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libpython3.7m.so.1.0&lt;/code&gt; and&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libtac.so.0&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Python bit is fixed by building a Python-3.7 in 32-bit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; apt install gcc-multilib
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; wget https://www.python.org/ftp/python/3.7.5/Python-3.7.5.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; tar xzf Python-3.7.5.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Python-3.7.5/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./configure --build&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i686-pc-linux-gnu &lt;span class=&#34;nv&#34;&gt;CFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-m32 &lt;span class=&#34;nv&#34;&gt;CXXFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-m32 &lt;span class=&#34;nv&#34;&gt;LDFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-m32 --enable-shared
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; make -j6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A minor roadbump: We need to build for 32-bit, but on a 64-bit machine.
The compile-flag &lt;code&gt;-m32&lt;/code&gt; does that, but it will fail due to some missing includes until we install &lt;code&gt;gcc-multilib&lt;/code&gt; as shown above.
We can then download the old version of Python, and build it with the required flags for 32-bit support.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;libtac.so.0&lt;/code&gt; we could copy off the switch.
If we try, things escalate quickly .
That is, because that &lt;code&gt;.so&lt;/code&gt; in turn loads even more libraries, most of which we don&amp;rsquo;t have access to.
And if we had them, they might load even more dependencies.&lt;/p&gt;
&lt;p&gt;Looking into Ghidra again, we know that the code we are interested in does not really depend on &lt;code&gt;libtac,so.0&lt;/code&gt;.
&lt;code&gt;cbcEncrypt()&lt;/code&gt; itself does, but only if something goes wrong and an exception is being raised,
but at this stage of our investigation we only want &lt;code&gt;getHashedKey()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Following the guide from 16 years ago, we can quickly write some code to &lt;code&gt;dlopen()&lt;/code&gt; the library:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;mydevices_passwd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;keylen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;supersecretpassword&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;func_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;main start&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dlopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LIBNAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RTLD_LAZY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;dlopen(%s, RTLD_LAZY) failed: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;LIBNAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;dlerror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// find func
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dlerror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dlsym&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;_Z12getHashedKeyPKciPc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dlerror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;dlsym(%p, &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;getHashedKey&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; failed: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;gethashedKey %p&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keylen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keylen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;dlclose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;killing-dependencies&#34;&gt;
    &lt;a href=&#34;#killing-dependencies&#34;&gt;
	Killing Dependencies
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;That way we can inspect the output of the function (it overwrites the first 8 bytes of &lt;code&gt;data&lt;/code&gt;) and get a reference key value to debug against.
Or could, if that would work.
It does not, because the &lt;code&gt;.so&lt;/code&gt; we open still has listed &lt;code&gt;libtac.so.0&lt;/code&gt; as &lt;code&gt;NEEDED&lt;/code&gt; and we need to fix it.&lt;/p&gt;
&lt;p&gt;There are many ways to edit ELF binaries, but most are badly maintained.
An easy way is a web service such as &lt;a href=&#34;https://elfy.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;elfy.io&lt;/a&gt;

.
We upload the library, click &lt;code&gt;Load information&lt;/code&gt; -&amp;gt; &lt;code&gt;Loader directives&lt;/code&gt; and edit the first dependency (&lt;code&gt;libtac.so.0&lt;/code&gt;) (offset 0x270) to point to the second dependency (&lt;code&gt;libpython3.7m.so.1.0&lt;/code&gt; (offset 0x283) instead.
Downloading the code again, we can rename it to &lt;code&gt;libtest.so&lt;/code&gt; and load it with our test program from above, getting a reference key value.
So &lt;code&gt;mydevices_passwd&lt;/code&gt; in a non-broken implementation yields the raw key value of &lt;code&gt;4A 0E 5D 1A 70 4F 1F 23&lt;/code&gt; for DES.&lt;/p&gt;
&lt;p&gt;Having that, debugging can continue.
It turns out: math is hard and Intel is a little-endian architecture:
The seed byte sequence &lt;code&gt;D5 A8 ... 8A 23&lt;/code&gt; is of course the long &lt;code&gt;238A…A8D5&lt;/code&gt;.
I am definitively not doing these things often enough anymore to not make this kind of mistake.&lt;/p&gt;
&lt;h1 id=&#34;progress&#34;&gt;
    &lt;a href=&#34;#progress&#34;&gt;
	Progress!
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Having a working &lt;code&gt;getHashedKey()&lt;/code&gt; we can now look at &lt;code&gt;cbcEncrypt()&lt;/code&gt; and reverse that.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/arista-cbcencrypt.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The heart of &lt;code&gt;cbcEncrypt()&lt;/code&gt; fetches two Python &lt;code&gt;bytearray&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; and works with them. The &lt;code&gt;key&lt;/code&gt; is processed with &lt;code&gt;getHashedKey()&lt;/code&gt;, then &lt;code&gt;cbc_crypt()&lt;/code&gt; is set up and called. The result returned to Python using &lt;code&gt;Py_BuildValue&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The moment we try to build this in C, it proves frustrating again:
&lt;code&gt;cbc_crypt()&lt;/code&gt; is no longer part of &lt;code&gt;libc&lt;/code&gt;.
It is outdated, legacy, but unfortunately still in use.
Not only by Arista, but also other companies and protocols.
Among them some ancient RPC protocols.
It has been removed from &lt;code&gt;libc&lt;/code&gt; and moved to &lt;code&gt;libtirpc3&lt;/code&gt;, it seems.
We need to install &lt;code&gt;libtirpc3&lt;/code&gt;, &lt;code&gt;libtirpc-dev&lt;/code&gt; and &lt;code&gt;libtirpc-common&lt;/code&gt; to be able to build code that calls &lt;code&gt;cbc_crypt()&lt;/code&gt;.
Even then we seem to be limited to static linking, because for some reason the shared objects do no longer export the symbol.&lt;/p&gt;
&lt;p&gt;Some more short short hiccups:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The padding value is a nibble, not a byte, and the long it is part of has to be little endian naturally.&lt;/li&gt;
&lt;li&gt;The padding needs itself to take the 4 bytes added by the padding itself into account.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the end we get code that reproduces the expected result.&lt;/p&gt;
&lt;h1 id=&#34;in-python&#34;&gt;
    &lt;a href=&#34;#in-python&#34;&gt;
	In Python
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;If, and that is important, &lt;code&gt;des_parity()&lt;/code&gt; is being called.
In Python that function is not available, and should not be necessary:
The legacy DES function in Python&amp;rsquo;s module supposedly ignores DES parity bits automatically.&lt;/p&gt;
&lt;p&gt;But the Python code produces a different result.
So what goes on here, and how do we get &lt;code&gt;des_parity()&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;Turns out, &lt;code&gt;des_parity()&lt;/code&gt; is really weird code:
Look at it &lt;a href=&#34;https://github.com/alisw/libtirpc/blob/master/src/des_soft.c#L33-L50&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;

.
It is supposed to make the 8 bytes of the DES code uneven parity by manipulating the low-value bits in the key.
But the actual code also effectively masks out the high order bit, so we do not get 56 bit of keyspace, but only 48 bit.
Yay, export crypto?&lt;/p&gt;
&lt;p&gt;Anyway, this is the code Arista runs for their key obfuscation, so we need to duplicate it to produce correct data.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/isotopp/arista_type_7/blob/main/pypoc.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Here&lt;/a&gt;

 is a PoC in Python.&lt;/p&gt;
&lt;p&gt;With the poc provided, it should be possible to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;arista_descrypt&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cbc_encrypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cbc_decrypt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;encrypted&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cbc_encrypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mydevices_passwd&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;supersecretpassword&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encrypted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and that should be sufficient to build an Ansible module for Arista config provisioning.
The code uses &lt;code&gt;cryptography&lt;/code&gt; or &lt;code&gt;pycryptodome&lt;/code&gt; automatically, one of the two is installed.
It is not dependent on the legacy &lt;code&gt;cbc_crypt()&lt;/code&gt; function that formerly was in &lt;code&gt;libc&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A01:2021 - Broken Access Control</title>
      <link>https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control.html</link>
      <pubDate>Tue, 16 Nov 2021 11:28:27 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control.html</guid>
      <description>&lt;p&gt;Dieser Artikel wurde von Lenz Grimmer auch &lt;a href=&#34;https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control-en.html&#34;&gt;ins Englische&lt;/a&gt;

 übersetzt.&lt;/p&gt;
&lt;p&gt;In einem
&lt;a href=&#34;https://twitter.com/ChristianBasl/status/1459851276817158151&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Twitter-Thread von Christian Basl&lt;/a&gt;


ging es um die von
&lt;a href=&#34;https://zerforschung.org/posts/learnu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;zerforschte App &amp;ldquo;Learnu&amp;rdquo;&lt;/a&gt;

.
Basl schreibt:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Die Betreiber von Learnu sagen, sie hätten keine Fachkenntnisse in IT-Sicherheit und hätten sich auf externe Berater verlassen.
So kam Learnu unbekannterweise unsicher auf den Markt.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In der sich entwickelnden Diskussion vertrat &lt;a href=&#34;https://twitter.com/ardewes/status/1460240730698493957&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Andreas Dewes&lt;/a&gt;

 den Standpunkt&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Die meisten Start-ups die ich kenne gehen durch eine Phase, in der IT-Sicherheit und Compliance eher im Hintergrund stehen.
Wenn sie größer werden fangen sie an sich darüber Gedanken zu machen u.a. weil Kunden oder Partner Zertifizierungen verlangen, z.B. SOC 2 oder ISO-27001.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist angesichts von &lt;a href=&#34;https://owasp.org/Top10/A01_2021-Broken_Access_Control/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP A01:2021 - Broken Access Control&lt;/a&gt;

 eine lustige Aussage.
&lt;a href=&#34;https://de.wikipedia.org/wiki/Open_Web_Application_Security_Project&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP&lt;/a&gt;

 ist eine NGO, die die Sicherheit von Anwendungen und Diensten im Internet verbessern will.
OWASP gibt dazu eine jedes Jahr aktualisierte Top-10 Liste von Sicherheitsproblemen bei Anwendungen heraus.&lt;/p&gt;
&lt;p&gt;Für 2021 hat es im Vergleich zu 2017 die folgenden Änderungen gegeben:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/owasp-mapping.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Broken Access Control war 2017 auf Platz 5 und ist jetzt Problem #1. 94 % der getesteten Anwendungen hatten irgendeine Form von defekter Zugangskontrolle. Der ehemalige #1 Dauerbrenner Injection ist nur noch auf Platz 3.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wir sehen ein klassisches Beispiel dafür in einer anderen Schul-Anwendung, die das Team von Zerforschung getestet hat:
&lt;a href=&#34;https://zerforschung.org/posts/scoolio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoolio&lt;/a&gt;

 wurde aufgemacht, indem die Zerforschis&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ein Endpunkt der Schnittstelle (Application Programming Interface, API) ist uns dabei sofort ins Auge gefallen: &lt;code&gt;/api/v3/Profile/{ProfileID}&lt;/code&gt;.
…
Wenn wir spannnende API-Endpunkte finden, die über eine Versionskomponente verfügen (hier &lt;code&gt;/v3/&lt;/code&gt;), versuchen wir gerne mal, diese zu verändern.
Also wurde in unserem Fall aus &lt;code&gt;/api/v3/Profile/{ProfileID}&lt;/code&gt; zu &lt;code&gt;/api/v2/Profile/{ProfileID}&lt;/code&gt;.
Und tada: Noch viel mehr Daten!
Aber unsere eigenen Daten sind langweilig – die kennen wir ja schon.
Also haben wir auch probiert, eine fremde Profil-ID einzugeben.
Und zu unserer geringen Verwunderung, aber großen Genervtheit, konnten wir natürlich auf diese detaillierten Daten der fremden ID zugreifen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist ein klassisches &amp;ldquo;A01:2021 - Broken Access Control&amp;rdquo; Beispiel.
Die Anwendung kennt die Identität des Benutzers, denn sie ist in der App eingetragen.
Sie nutzt diese Information nicht, um die Verbindung zum Server zu authentisieren und autorisieren.
Und entsprechend kann die API genutzt werden, um auf beliebige User-Records zuzugreifen, statt nur auf den eigenen.&lt;/p&gt;
&lt;h1 id=&#34;identität-authentisierung-autorisierung-auditing-und-accounting&#34;&gt;
    &lt;a href=&#34;#identit%c3%a4t-authentisierung-autorisierung-auditing-und-accounting&#34;&gt;
	Identität, Authentisierung, Autorisierung, Auditing und Accounting
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Ein paar Begriffe:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Identität:&lt;/strong&gt; Ich bin ich.
Aber ich kann nicht auf das Web oder eine API zugreifen.
Eine Anwendung muss das an meiner statt tun.
Diese Anwendung verwendet dazu eine eindeutige Benutzerkennung, die &amp;ldquo;mich&amp;rdquo; im Kontext der Anwendung repräsentiert.
Eine Identität mit einem eindeutigem Identifier (einem &amp;ldquo;Principal&amp;rdquo;) der mich repräsentiert ist aber zunächst einmal eine Behauptung.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authentisierung:&lt;/strong&gt; Ich kann das auch beweisen.
Wenn ich die behauptete Identität beweisen kann, dann bin ich authentisch ich.
Ich bestätige meine Identität meist mit einem Passwort und oft auch mit einem 2. Faktor (etwa einer vom einem Google Authenticator abgetippten wechselnden Geheimnummer).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Die behauptete und bestätigte Identität muss für einige Zwecke auch noch &lt;strong&gt;verankert&lt;/strong&gt; werden, etwa wenn diese Identität an andere Rechte oder Verhältnisse in der realen Welt gebunden werden soll.
Wenn ich zum Beispiel in einer Schul-App eine Schulzugehörigkeit und Klassenzugehörigkeit haben soll, dann ist es unter Umständen gut, wenn ich mir nicht einfach einen Account machen kann.
Stattdessen sollte eine Lehrperson sich das ansehen, mich fragen, ob ich das war und mich dann der Schule und der Klasse zuordnen.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Einer behaupteten, bestätigten und in der realen Welt verankerten Identität werden dann Zugriffsrechte zugeordnet.
Das ist eine &lt;strong&gt;Autorisierung&lt;/strong&gt;, sie bestimmt, was diese Identität im Kontext der Anwendung sehen, schreiben, verändern und löschen darf.
Dazu werden wir unten noch ein wenig mehr reden.&lt;/li&gt;
&lt;li&gt;Was ich dann in der Anwendung tu muss unter Umständen beweiskräftig mitgeschnitten werden.
Etwa dann, wenn die Daten, auf die ich zugreife, besonders schützenswert sind, oder ihre Änderungshistorie dokumentiert werden muss.
Das kann zum Beispiel im Schulkontext meine Ansammlung von Leistungsnachweisen sein.
Ein Logbuch, bei dem Zugriffe zwingend und nicht abschaltbar mit Personenidentitäten verknüpft werden nennt man ein &lt;strong&gt;Audit-Log&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Wenn ich Dienstleistungen in Anspruch nehme, die Geld kosten, dann muss eine besondere Form von Audit-Log geführt werden.
Dieses Audit-Log ist die Grundlage der Rechnungslegung und zeigt, welche Person wann welche kostenpflichtige Dienstleistung in Anspruch genommen hat.
Dieses Logbuch ist Bestandteil des &lt;strong&gt;Accounting&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Man kann zu jedem dieser Themen viel schreiben, aber uns soll hier in erster Linie &lt;em&gt;Autorisierung&lt;/em&gt; beschäftigen, eben weil es Thema #1 bei der aktuellen OWASP Liste ist.
Und weil es nicht nur bei den Zerforschis im
&lt;a href=&#34;https://zerforschung.org/posts/scoolio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoolio&lt;/a&gt;


Artikel auftaucht, sondern noch einmal im
&lt;a href=&#34;https://zerforschung.org/posts/meinschnelltest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mein Schnelltest&lt;/a&gt;


Artikel:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Eine der ersten Anfragen, die uns auffällt, geht an &lt;code&gt;https://corona-api.de/persons/owner/{USER_ID}&lt;/code&gt;, wobei &lt;code&gt;USER_ID&lt;/code&gt; natürlich die Nummer unseres Accounts ist – z.B. &lt;code&gt;612341213acab23425251e21&lt;/code&gt;.
… [Wir verkürzen die URL]…
Einen Versuch wagen wir noch und entfernen das / am Ende der URL. Und tada:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET https://corona-api.de/persons
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Uns fällt eine Liste mit den Personen, die auf der Plattform registriert sind, entgegen.
Insgesamt fast 400.000 mit allen Daten, die bei einem Corona-Test eben so erfasst werden.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Zerforschung demonstriert dann auch noch, daß sie in beiden Fällen lustig ihre Identität oder ihre Verankerung (die Schulzugehörigkeit) ändern können (und vermutlich ohne daß das in einem Audit-Log landet), und daß sie nach Belieben Daten schreiben können, indem sie dem 177-jahre alten Robert Koch ein Corona-Testergebnis ausstellen.&lt;/p&gt;
&lt;h1 id=&#34;autorisierung&#34;&gt;
    &lt;a href=&#34;#autorisierung&#34;&gt;
	Autorisierung
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;verben-und-subjekt-prädikat-objekt-wer-tut-was-mit-wem&#34;&gt;
    &lt;a href=&#34;#verben-und-subjekt-pr%c3%a4dikat-objekt-wer-tut-was-mit-wem&#34;&gt;
	Verben und Subjekt-Prädikat-Objekt (Wer tut was mit wem?)
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Eine Anwendung hat eine Außenseite.
Das ist eine Liste aller URLs, die aufrufbar sind.
Damit meine ich nicht nur die HTML Webseiten (von denen ja einige auch interaktiv sind und Parameter haben können), sondern auch die API, die den Server für eine App auf einem Telefon oder in einem Browser repräsentiert.
Die Liste aller dieser URLs ist wie eine Liste von Verben:
Tu-Worte, mit denen man der Anwendung Befehle erteilen kann - &amp;ldquo;zeige mir&amp;rdquo;, &amp;ldquo;finde mir&amp;rdquo;, &amp;ldquo;ändere mir&amp;rdquo;, &amp;ldquo;lösche mir&amp;rdquo;.
Wie in jedem Satz gibt es ein Subjekt - wer befiehlt? - und ein Objekt - was wird von dem Verb manipuliert?&lt;/p&gt;
&lt;p&gt;Wir können das in Deutsch aufschreiben:
&amp;ldquo;Kris will alle Schüler der Heinrich-Heine-Schule in Heikendorf finden.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Oder als Tripel:
(Kris, &amp;ldquo;finde alle&amp;rdquo;, &amp;ldquo;Heinrich-Heine-Schule (Heikendorf)&amp;rdquo;)&lt;/p&gt;
&lt;p&gt;Oder als Tabelle, mit den Subjekten als Zeilen, den Objekten als Spalten und den Verben da, wo die betreffende Aktion erlaubt ist.
Das ist dann eine Matrix von &amp;ldquo;Wer darf was tun?&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;role-based-access-control&#34;&gt;
    &lt;a href=&#34;#role-based-access-control&#34;&gt;
	Role Based Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wir sehen dann, daß die Tabelle schnell umfangreich wird, und werden anfangen, die Subjekte zu gruppieren.
Subjekte mit gleichen Rechten gruppieren wir zusammen, in einer &lt;em&gt;Role&lt;/em&gt;, und benennen diese (zum Beispiel &lt;em&gt;Schüler der HHS&lt;/em&gt;).
Objekte kann man ebenso gruppieren.
Wir bekommen &lt;em&gt;Role Based Access Control&lt;/em&gt;, &lt;em&gt;RBAC&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;Wir können so bestimmten Subjekten, oder Rollen, feste Rechte geben.
Wir müssen aber immer noch viele Relationen erlauben:
&amp;ldquo;Schüler der HHS können mit anderen Schülern der HHS Kontakte anbandeln.&amp;rdquo;
und extra, und verschieden davon
&amp;ldquo;Schüler der Max-Planck-Schule, Kiel können mit anderen Schülern der MPS Kontakte anbandeln.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Offenbar reicht das in diesem Kontext nicht - aber für viele Anwendungen ist das schon ausreichend.
Nämlich immer dann, wenn die interne Struktur innerhalb der Anwendung nicht weiter segmentiert werden muss.&lt;/p&gt;
&lt;h2 id=&#34;attribute-based-access-control&#34;&gt;
    &lt;a href=&#34;#attribute-based-access-control&#34;&gt;
	Attribute Based Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Oft will man Regeln formulieren, die Eigenschaften von Subjekten und Objekten abgleichen.
Ich kann die Zugangsregeln für Schülerkontakte zum Beispiel so vereinfachen, daß ich die Kontakte zulasse, wenn der aufrufende Schüler und der aufgerufenen Schüler dieselbe Schule besuchen.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Schüler der HHS können mit anderen Schülern der HHS Kontakte anbandeln.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Schüler der MPS können mit anderen Schülern der MPS Kontakte anbandeln.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;alle diese RBAC-Regeln werden zu&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Schüler A kann mit Schüler B Kontakt aufnehmen, wenn &lt;code&gt;A.schule_id == B.schule_id&lt;/code&gt;&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;also wenn Schüler A und B denselben Wert im Attribut &lt;code&gt;schule_id&lt;/code&gt; stehen haben.&lt;/p&gt;
&lt;p&gt;Die Zugriffsrechte werden nun also durch Attribute von Subjekten definiert und können so stark vereinfacht werden.
Das setzt natürlich voraus, daß ich die sicherheitsrelevanten Attribute identifiziere und Änderungen an denen kontrolliere, denn sonst ist der Schutz wirkungslos.&lt;/p&gt;
&lt;p&gt;Beispiel: Wenn ein Schüler seine &lt;code&gt;schule_id&lt;/code&gt; nach Belieben unkontrolliert ändern kann, dann ist ein Vergleich &lt;code&gt;A.schule_id == B.schule_id&lt;/code&gt; wirkungslos.&lt;/p&gt;
&lt;h1 id=&#34;was-heißt-das-für-anwendungsentwickler&#34;&gt;
    &lt;a href=&#34;#was-hei%c3%9ft-das-f%c3%bcr-anwendungsentwickler&#34;&gt;
	Was heißt das für Anwendungsentwickler?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Als Anwendungsentwickler verwende ich ein Toolkit, um Webanwendungen und APIs zu schreiben.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ich muss wissen, welche Außenfläche meine Anwendung hat, also welche URLs mit welchen Parametern zugelassen werden.
Das ist nicht schwer.
Mein Toolkit hat fast sicher eine Funktion, die mir das sagt (&lt;code&gt;flask routes&lt;/code&gt; oder ähnliche Funktionen sind überall vorhanden).
Dies ist die Liste meiner Verben.&lt;/li&gt;
&lt;li&gt;Die Liste der Parameter jeder dieser aufrufbaren Seiten sind die Objekte in meinem Security-Modell.&lt;/li&gt;
&lt;li&gt;Ich muss meine Anwender identifizieren (ihnen also eindeutige Identifier zuweisen) und authentisieren (sie müssen die behauptete Identität also beweisen).&lt;/li&gt;
&lt;li&gt;Die Liste dieser Anwender ist dann die Liste meiner Subjekte.&lt;/li&gt;
&lt;li&gt;Ich muss nun ACL, RBAC oder ABAC Regeln die definieren, &amp;ldquo;Wer was mit wem&amp;rdquo; machen kann und dies im Access Control Framework meiner Anwendung ausdrücken.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Das ist nicht schwer, und es ist vor allen Dingen eine notwendige Arbeit.
Nicht nur aus rechtlichen und compliance Gründen, sondern auch, weil dies zu einem Datenmodell einer Anwendung gehört:
Als Nebenergebnis fällt dabei nämlich ein Transaktionsmodell heraus, also ein Diagramm, wie sich die Datensätze meiner Anwendung durch die Aufrufe von Methoden ändern lassen.
Ich erschlage also nicht nur alle Compliance-, viele Datenschutz und alle Security-Pflichten, sondern ich habe den kompletten Data Lifecycle meiner Anwendung mit einem Zustandsübergangsdiagramm dokumentiert,
das sowohl Entwicklern als auch Business Analysts allgemeinverständlich zeigt, was zum Teufel wir hier eigentlich tun und wie wir das modellieren.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A01:2021 - Broken Access Control (en)</title>
      <link>https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control-en.html</link>
      <pubDate>Tue, 23 Nov 2021 23:34:33 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control-en.html</guid>
      <description>&lt;p&gt;Translation by Lenz Grimmer, German version &lt;a href=&#34;https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control.html&#34;&gt;here&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;A
&lt;a href=&#34;https://twitter.com/ChristianBasl/status/1459851276817158151&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;twitter thread by Christian Basl&lt;/a&gt;


discussed the
&lt;a href=&#34;https://zerforschung.org/posts/learnu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dissection of the &amp;ldquo;Learnu&amp;rdquo; app&lt;/a&gt;

.
Basl wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Learnu operators say they have no expertise in IT security and have relied on outside consultants.
As a result, Learnu came to market insecurely, unbeknownst to them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the discussion that developed, &lt;a href=&#34;https://twitter.com/ardewes/status/1460240730698493957&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Andreas Dewes&lt;/a&gt;

 took the view that&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Most startups I know go through a phase where IT security and compliance tend to take a back seat.
As they get bigger, they start to think about it, partly because customers or partners demand certifications, e.g. SOC 2 or ISO-27001.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That&amp;rsquo;s a funny statement in light of &lt;a href=&#34;https://owasp.org/Top10/A01_2021-Broken_Access_Control/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP A01:2021 - Broken Access Control&lt;/a&gt;

.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Open_Web_Application_Security_Project&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP&lt;/a&gt;

 is an NGO that aims to improve the security of applications and services on the Internet.
To this end, OWASP publishes a top 10 list of application security problems that is updated every year.&lt;/p&gt;
&lt;p&gt;For 2021, compared to 2017, there have been the following changes:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/owasp-mapping.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Broken Access Control was #5 in 2017 and is now problem #1. 94% of the applications tested had some form of broken access control. The former #1 perennial problem Injection is now only #3.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We see a classic example of this in another school application tested by the Zerforschung team:
&lt;a href=&#34;https://zerforschung.org/posts/scoolio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoolio&lt;/a&gt;

 was opened up by the researchers as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One endpoint of the application programming interface (API) immediately caught our attention: &lt;code&gt;/api/v3/Profile/{ProfileID}&lt;/code&gt;.
…
When we find exciting API endpoints that have a version component (here &lt;code&gt;/v3/&lt;/code&gt;), we like to try to change it sometimes.
So in our case &lt;code&gt;/api/v3/Profile/{ProfileID}&lt;/code&gt; became &lt;code&gt;/api/v2/Profile/{ProfileID}&lt;/code&gt;.
And tada: much more data!
But our own data is boring - we already know it.
So we also tried to enter a foreign ProfileID.
And to our little amazement, but great annoyance, we were of course able to access the detailed data of that foreign ID.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a classic &amp;ldquo;A01:2021 - Broken Access Control&amp;rdquo; example.
The application knows the identity of the user because it is registered in the app.
It does not use this information to authenticate and authorize the connection to the server.
And accordingly, the API can be used to access arbitrary user records instead of just its own.&lt;/p&gt;
&lt;h1 id=&#34;identity-authentication-authorization-auditing-and-accounting&#34;&gt;
    &lt;a href=&#34;#identity-authentication-authorization-auditing-and-accounting&#34;&gt;
	Identity, authentication, authorization, auditing and accounting
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A few terms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Identity:&lt;/strong&gt; I am me.
But I can&amp;rsquo;t access the web or an API.
An application has to do that on my behalf.
To do this, that application uses a unique user identifier that represents &amp;ldquo;me&amp;rdquo; in the context of the application.
But an identity with a unique identifier (a &amp;ldquo;principal&amp;rdquo;) that represents me is first of all an assertion.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authentication:&lt;/strong&gt; I can also prove this.
If I can prove the claimed identity, then I am authentically me.
I usually confirm my identity with a password and often with a 2nd factor (such as a changing secret number typed from a Google Authenticator).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The asserted and confirmed identity must also be &lt;strong&gt;anchored&lt;/strong&gt; for some purposes, such as when that identity is to be tied to other rights or relationships in the real world.
For example, if I&amp;rsquo;m supposed to have a school affiliation and class affiliation in a school app, then it may be good if I can&amp;rsquo;t just make an account for myself.
Instead, a teacher should look at it, ask me if I did it, and then assign me to the school and class.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An asserted, confirmed identity anchored in the real world is then granted access rights.
This is an &lt;strong&gt;authorization&lt;/strong&gt;, it determines what this identity is allowed to see, write, modify and delete in the context of the application.
We&amp;rsquo;ll talk a little more about that below.&lt;/li&gt;
&lt;li&gt;What I then do in the application may have to be recorded for evidentiary purposes.
For example, if the data I am accessing requires special protection, or if its change history needs to be documented.
In a school context, for example, this could be my collection of performance records.
A logbook in which accesses are linked to personal identities in a mandatory way that cannot be switched off is called an &lt;strong&gt;audit log&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If I use services that cost money, then a special form of audit log must be kept.
This audit log is the basis of accounting and shows which person has used which chargeable service and when.
This log is part of &lt;strong&gt;accounting&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Much can be written on each of these topics, but we are to be primarily concerned here with &lt;em&gt;authorization&lt;/em&gt; precisely because it is Topic #1 on the current OWASP list.
And because it does not only appear in the Zerforschis&amp;rsquo;
&lt;a href=&#34;https://zerforschung.org/posts/scoolio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoolio&lt;/a&gt;


article, but once again in the
&lt;a href=&#34;https://zerforschung.org/posts/meinschnelltest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My Quick Test&lt;/a&gt;


article:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the first requests we notice is to &lt;code&gt;https://corona-api.de/persons/owner/{USER_ID}&lt;/code&gt;, where &lt;code&gt;USER_ID&lt;/code&gt; is of course the number of our account - e.g. &lt;code&gt;612341213acab23425251e21&lt;/code&gt;.
… [We shorten the URL]…
We dare to try one more time and remove the / at the end of the URL. And tada:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET https://corona-api.de/persons
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A list of people registered on the platform drops down to us.
A total of almost 400,000 with all the data that is collected during a Corona test.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Zerforschung then goes on to demonstrate that they can merrily change their identity or anchoring (the school affiliation) in either case (and presumably without it ending up in an audit log), and that they can write data at will by issuing a Corona test result to 177-year-old Robert Koch.&lt;/p&gt;
&lt;h1 id=&#34;authorization&#34;&gt;
    &lt;a href=&#34;#authorization&#34;&gt;
	Authorization
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;verbs-and-subject-predicate-object-who-does-what-to-whom&#34;&gt;
    &lt;a href=&#34;#verbs-and-subject-predicate-object-who-does-what-to-whom&#34;&gt;
	Verbs and subject-predicate-object (Who does what to whom?)
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;An application has an outside page.
This is a list of all URLs that are callable.
By this I mean not only the HTML web pages (some of which are interactive and can have parameters), but also the API that represents the server for an app on a phone or in a browser.
The list of all these URLs is like a list of verbs:
Do words that can be used to give commands to the application - &amp;ldquo;show me&amp;rdquo;, &amp;ldquo;find me&amp;rdquo;, &amp;ldquo;change me&amp;rdquo;, &amp;ldquo;delete me&amp;rdquo;.
As in any sentence, there is a subject - who commands? - and an object - what is being manipulated by the verb?&lt;/p&gt;
&lt;p&gt;We can write this down in German:
&amp;ldquo;Kris wants to find all the students at the Heinrich Heine School in Heikendorf.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Or as a triplet:
(Kris, &amp;ldquo;find all&amp;rdquo;, &amp;ldquo;Heinrich-Heine-Schule (Heikendorf)&amp;rdquo;)&lt;/p&gt;
&lt;p&gt;Or as a table, with the subjects as rows, the objects as columns, and the verbs where the action in question is allowed.
This is then a matrix of &amp;ldquo;Who may do what?&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;role-based-access-control&#34;&gt;
    &lt;a href=&#34;#role-based-access-control&#34;&gt;
	Role Based Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We then see that the table quickly becomes large, and will start grouping the subjects.
Subjects with the same rights we group together, in a &lt;em&gt;role&lt;/em&gt;, and name them (for example &lt;em&gt;students of HHS&lt;/em&gt;).
Objects can be grouped in the same way.
We get &lt;em&gt;Role Based Access Control&lt;/em&gt;, &lt;em&gt;RBAC&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;We can thus give fixed rights to certain subjects, or roles.
However, we still need to allow many relations:
&amp;ldquo;Students of HHS can make contacts with other students of HHS.&amp;rdquo;
and extra, and different from it
&amp;ldquo;Students of the Max-Planck-Schule, Kiel can make contacts with other students of the MPS.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Obviously, this is not enough in this context - but for many applications it is already sufficient.
Namely, whenever the internal structure within the application does not need to be segmented further.&lt;/p&gt;
&lt;h2 id=&#34;attribute-based-access-control&#34;&gt;
    &lt;a href=&#34;#attribute-based-access-control&#34;&gt;
	Attribute Based Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Often one wants to formulate rules that match properties of subjects and objects.
For example, I can simplify the access rules for student contacts to allow contacts if the calling student and the called student attend the same school.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;HHS students can make contacts with other HHS students.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;MPS students can make contacts with other MPS students.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;all these RBAC-Rules become&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Student A can make contact with Student B, if &lt;code&gt;A.school_id == B.school_id&lt;/code&gt;&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;so if student A and B have the same value in the attribute &lt;code&gt;school_id&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So, access rights are now defined by attributes of subjects and can thus be greatly simplified.
Of course, this requires that I identify the security-relevant attributes and control changes to those, because otherwise the protection is ineffective.&lt;/p&gt;
&lt;p&gt;Example: If a student can change his &lt;code&gt;school_id&lt;/code&gt; at will without control, then a comparison &lt;code&gt;A.school_id == B.school_id&lt;/code&gt; is ineffective.&lt;/p&gt;
&lt;h1 id=&#34;what-does-this-mean-for-application-developers&#34;&gt;
    &lt;a href=&#34;#what-does-this-mean-for-application-developers&#34;&gt;
	What does this mean for application developers?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;As an application developer, I use a toolkit to write web applications and APIs.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I need to know what my application&amp;rsquo;s outer surface is, i.e. which URLs are allowed with which parameters.
This is not difficult.
My toolkit almost certainly has a function that tells me this (&lt;code&gt;flask routes&lt;/code&gt; or similar functions are present everywhere).
This is my list of verbs.&lt;/li&gt;
&lt;li&gt;The list of parameters of each of these callable pages are the objects in my security model.&lt;/li&gt;
&lt;li&gt;I need to identify my users (i.e., assign them unique identifiers) and authenticate them (i.e., they need to prove the claimed identity).&lt;/li&gt;
&lt;li&gt;The list of these users is then the list of my subjects.&lt;/li&gt;
&lt;li&gt;I now need ACL, RBAC or ABAC rules that define &amp;ldquo;who can do what to whom&amp;rdquo; and express this in my application&amp;rsquo;s access control framework.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is not hard, and it is, above all, necessary work.
Not only for legal and compliance reasons, but also because this is part of an application&amp;rsquo;s data model:
As a side result, this produces a transaction model, i.e. a diagram of how the records of my application can be changed by calling methods.
So not only am I slaying all compliance, many data protection, and all security obligations, but I&amp;rsquo;ve documented the entire data lifecycle of my application with a state transition diagram,
that shows both developers and business analysts in a generally understandable way what the heck we&amp;rsquo;re actually doing here and how we&amp;rsquo;re modeling it.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

