<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/tags/docker.html</link>
    <description>Recent content in docker on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gitlab in Docker</title>
      <link>https://blog.koehntopp.info/2020/11/22/gitlab-in-docker.html</link>
      <pubDate>Sun, 22 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2020/11/22/gitlab-in-docker.html</guid>
      <description>These installation notes are mostly a note to myself, documenting the installation process of a Gitlab Omnibus Container in Docker, plus Gitlab Runners.
OS Setup   We are installing into /export/gitlab, a 10G xfs slice from the local flash pool:
# lvcreate -n gitlab -L 10G data # mkfs -t xfs /dev/data/gitlab # mkdir /export/gitlab # mount /dev/data/gitlab /export/gitlab # echo &amp;#34;/dev/data/gitlab\t/export/gitlab\txfs\tbsdgroups,usrquota,grpquota,attr2,nofail,noatime 1 2&amp;#34; &amp;gt;&amp;gt; /etc/fstab # mkdir /export/gitlab/{gitlab,gitlab-runner} # mkdir /export/gitlab/gitlab/{config,data,logs} Docker   We are using docker-compose to run this, with a .</description>
    </item>
    
    <item>
      <title>Fixing &#34;ip netns&#34; for docker</title>
      <link>https://blog.koehntopp.info/2020/06/07/fixing-ip-netns-for-docker.html</link>
      <pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2020/06/07/fixing-ip-netns-for-docker.html</guid>
      <description>So I want to monitor my Jitsi Videobridge to get some useful statistics. The instructions say to enable Videobridge statistics and then grab stuff from port 8080.
Ok, I think I did that, but it did not work. Time to dig into the container network config.
And while I have a lot of network namespaces, they are unknown to ip netns, as can be seen when asking for a list. When we define a network namespace with ip netns, it will symlink the assigned name from /var/run/netns/&amp;lt;name&amp;gt; to /proc/&amp;lt;pid&amp;gt;/ns/net of the process that leads that namespace.</description>
    </item>
    
  </channel>
</rss>
