<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql8 on Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/tags/mysql8.html</link>
    <description>Recent content in mysql8 on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/tags/mysql8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL Performance Limits</title>
      <link>https://blog.koehntopp.info/2019/09/06/mysql-performance-limits.html</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2019/09/06/mysql-performance-limits.html</guid>
      <description>The last time I saw a MySQL server operating at a performance limit was in 2012. Back them we had a production master on (then) current hardware, running stable at about 21000 QPS. At 24000 QPS it tended to become unstable and fall over, dying in global locks on the InnoDB Adaptive Hash Index or other global locks.
I need to better understand how MySQL works today, and what the limits are on a box that is considered large in 2019.</description>
    </item>
    
  </channel>
</rss>
