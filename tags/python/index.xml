<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Die wunderbare Welt von Isotopp</title>
    <link>/tags/python.html</link>
    <description>Recent content in python on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rechenaufgaben lösen</title>
      <link>/2021/02/28/rechenaufgaben-loesen.html</link>
      <pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/02/28/rechenaufgaben-loesen.html</guid>
      <description>Das Kind möchte ein Programm zum Üben von Rechenaufgaben sehen. Nun gut. Hier ist eine Version in PyQt5.
Unsere Oberfläche soll so aussehen.
Wir wollen ein kleines Fenster, in dem eine billig generierte Rechenaufgabe angezeigt wird. Der Schüler soll die Antwort eingeben und den Knopf &amp;ldquo;Antworten&amp;rdquo; drücken. Danach wird angesagt, ob die Antwort korrekt war, oder ob sie falsch war. Wenn sie falsch war, wird auch die korrekte Antwort angezeigt.</description>
    </item>
    
    <item>
      <title>Labyrinths (in Python)</title>
      <link>/2021/01/10/labyrinths-in-python.html</link>
      <pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/01/10/labyrinths-in-python.html</guid>
      <description>My son wants labyrinths. Ok, let&amp;rsquo;s make them like it&amp;rsquo;s the first semester.
We need a class Labyrinth that holds the dimensions of our maze, and the actual maze, in grid - a List of Lists of integers. That&amp;rsquo;s not exactly a two-dimensional array (it can have a ragged right edge), but it will do for us.
A basic container for labyrinths   class Labyrinth: &amp;#34;&amp;#34;&amp;#34;Store a labyrinth as a List of Lists of Integers.</description>
    </item>
    
    <item>
      <title>Using Python to bash</title>
      <link>/2021/01/05/using-python-to-bash.html</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/01/05/using-python-to-bash.html</guid>
      <description>Heise writes an introduction to bash programming (in german) :
 Bash ist eine vollwertige Programmiersprache, mit der Sie alltägliche Aufgaben leicht automatisieren.
Bash is a fully featured programming language that you can use to automate everyday tasks.
 Bash is not a fully featured programming language at all, and nothing in bash is ever easy. You are advised to use a proper programming language early on in development, and if possible never put bash commands into a file.</description>
    </item>
    
    <item>
      <title>How I set up my Python</title>
      <link>/2020/06/29/how-i-set-up-my-python.html</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/06/29/how-i-set-up-my-python.html</guid>
      <description>Because Martin wanted some starting point, here is how I set up my Python. There are a lot of other things one can do, but this is supposed to be just a starting point.
For a new project, make a project directory, usually not with a local git repository.
kk:Python kris$ mkdir project kk:Python kris$ cd project kk:project kris$ git init Initialized empty Git repository in /Users/kris/Python/project/.git/ We need a virtual environment to keep our modules apart from the system python.</description>
    </item>
    
    <item>
      <title>Grumpy</title>
      <link>/2017/01/25/grumpy.html</link>
      <pubDate>Wed, 25 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/01/25/grumpy.html</guid>
      <description>So Python is a beautiful language, which is also kind of slow. And the more cores you have, the worse it gets, because of the GIL in the most popular implementations. Other languages are much better at concurrency, one of them supposedly being Go. So Geeks at Google have been pondering the problem, and came up with a Python-to-Go compiler called Grumpy.
Read more about it in their blog . In rigged benchmarks it looks awesome, and under real world load it supposedly performs quite well.</description>
    </item>
    
  </channel>
</rss>
