<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>publication on Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/tags/publication.html</link>
    <description>Recent content in publication on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Nov 2021 22:47:10 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/tags/publication/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Webserver Security</title>
      <link>https://blog.koehntopp.info/2000/05/01/webserver-security.html</link>
      <pubDate>Mon, 01 May 2000 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2000/05/01/webserver-security.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;aus: iX 5/2000.&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;webserver-security&#34;&gt;
    &lt;a href=&#34;#webserver-security&#34;&gt;
	Webserver Security
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;In den vergangenen Monaten haben Zeitschriften des Heise-Verlages immer wieder über Sicherheitslöcher in Installationen bekannter Serverbetreiber oder Webhoster berichtet.
Offensichtlich existieren tausende von Webanwendungen, die mit heißer Nadel gestrickt und online gebracht worden sind und die - wenn überhaupt - nur unzulänglich getestet worden sind.
Was ist die Ursache der beobachteten Probleme und wie kann man sie für seinen eigenen Server vermeiden?
Kann man als Verbraucher und Benutzer erkennen, ob der Server eines Anbieters elementaren Qualitätsanforderungen an die Sicherheit im Web genügt?&lt;/p&gt;
&lt;p&gt;Eine Analyse der gemeldeten Fehler zeigt, daß sich die weitaus meisten Probleme in nur drei Fehlerklassen einteilen lassen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Der Server bietet zu viele Dienste an.&lt;/li&gt;
&lt;li&gt;Der Server lagert vertrauliche Daten in zugänglichen Verzeichnissen.&lt;/li&gt;
&lt;li&gt;Der Server vertraut Eingabeparametern aus Webformularen ohne Grund.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ein-server-bietet-zu-viele-dienste-an&#34;&gt;
    &lt;a href=&#34;#ein-server-bietet-zu-viele-dienste-an&#34;&gt;
	Ein Server bietet zu viele Dienste an
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Häufig hat sich ein Betreiber einer Maschine seinen Server noch niemals mit einem der gängigen Portscanner von außen angesehen und läßt auf seinem Server Dienste laufen, die für die Benutzung der Anwendung nicht benötigt werden oder nicht von allen IP-Adressen aus zugänglich sein müssen.
Ein prominentes Beispiel der vergangenen Wochen, über das wir berichteten war ein Server, der vollständig ohne Firewall betrieben wurde und nach außen komplette Dateisysteme mit dem Sun Network Filesystem exportierte und dessen Oracle Server von jedermann kontaktiert werden konnte.
Praktischerweise fanden sich die für Oracle benötigten Paßworte auf den exportierten Netzwerklaufwerken.&lt;/p&gt;
&lt;p&gt;Oft wird dieser Fehler mit der Verwendung unsicherer und abhörbarer Übertragungsprotokolle für Wartungszugänge kombiniert:
So findet man oft auf Webserver auch POP3-Zugänge zum Abruf von Bestellmails, FTP-Zugänge zum Upload von neuen Webseiten oder gar Datenbankzugänge zum Upload neuer Bestandsdaten.
Diese Protokolle bieten vielfach nur unzulängliche Verschlüsselung von Benutzernamen und Paßworten an, von einer Verschlüsselung der eigentlichen Nutzdaten ganz zu schweigen - der msql-Datenbankserver zum Beispiel bietet nur rudimentäre bis gar keine Sicherung des Zugangs an, FTP und POP3 übertragen Paßworte oft unverschlüsselt.&lt;/p&gt;
&lt;p&gt;Ein Webmaster ist gut beraten, sich einen Zugang außerhalb seines eigentlichen Providers und Webmasters zu besorgen und sich seinen eigenen Server einmal mit den Augen und Tools eines Angreifers anzusehen.
Oft ist es so, daß Dienste in der Default-Konfiguration der Servermaschine ab Werk enthalten sind, die vom Serverbetreiber nicht erkannt und nicht abgeschaltet worden sind.
Beliebte Fehlerquellen sind zum Beispiel Webserver auf Nichtstandardports, die die Handbücher des Systems anbieten.
Diese Server enthalten sehr oft fehlerhafte CGI-Scripte oder können auf andere Weise zum Sicherheitsrisiko werden.
Eine andere beliebte Fehlerquelle ist der SNMP-Dienst (Simple Network Management Protocol), der einem potenziellen Angreifer viele Informationen über das Zielsystem liefert.
Auch Dienste, die nur zur Erstinstallation benötigt wurden, werden oft vergessen und für den Wirkbetrieb nicht abgeschaltet.&lt;/p&gt;
&lt;p&gt;Natürlich muß nicht nur der Webserver geschützt werden: Auch alle anderen Maschinen, die außerhalb der Firewall im Produktions-LAN stehen, müssen denselben Sicherheitslevel erfüllen.&lt;/p&gt;
&lt;h2 id=&#34;nmap-scan-httpwwwinsecureorgnmap&#34;&gt;
    &lt;a href=&#34;#nmap-scan-httpwwwinsecureorgnmap&#34;&gt;
	nmap-Scan (&lt;a href=&#34;http://www.insecure.org/nmap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.insecure.org/nmap/&lt;/a&gt;

)
    &lt;/a&gt;
&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# nmap -sS -T Agressive -p 1-10000 www.beispiel1.de| grep open
Port    State       Protocol  Service
21      open        tcp       ftp
22      open        tcp       ssh
25      open        tcp       smtp
80      open        tcp       http
111     open        tcp       sunrpc
119     open        tcp       nntp
3306    open        tcp       mysql
4333    open        tcp       msql
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;&lt;code&gt;beispiel1.de&lt;/code&gt;, eigentlich ein Web- und FTP-Server, bietet außerdem die Dienste ftp, ssh, smtp, sunrpc, nntp, mysql und msql an. Davon ist ssh, ein mit starker Kryptographie verschlüsselndes und authentisierendes Protokoll, unbedenklich. Die Protokolle httpd, ftp, smtp und nntp sind die eigentlichen Dienste des Servers und müssen angeboten werden. Solange ftp nur als FTP-Server für Anon-FTP eingesetzt wird, werden keine abhörbaren Paßworte übertragen. Die sunrpc, mysql und msql-Ports von außen zugänglich zu machen ist nicht nötig. Die Ports gehören in einer Firewall oder mit einen Paketfilter gesperrt.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bei den Diensten, die man nach außen anbietet sollte man unbedingt auf aktuelle Versionen der Server achten: Buffer-Overflows und andere Probleme sind von ssh, von vielen FTP-Servern und auch von alten sendmail- und INN-Versionen bekannt.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Manchmal findet man einen offenen Port, kann aber nicht sagen, welches Programm diesen Port benutzt.
Hier ist ein Tool wie &lt;code&gt;lsof&lt;/code&gt; sehr nützlich.
Alle lokal offenen Ports und die dazugehörigen Programme kann man mit dem Kommando &lt;code&gt;lsof -P -n -i&lt;/code&gt; auflisten.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# lsof -P -n -i
COMMAND    PID USER   FD   TYPE DEVICE SIZE NODE NAME
xfstt       46 root    4u  IPv4     30       TCP *:7100 (LISTEN)
httpd      199 root   19u  IPv4     99       TCP 193.102.57.12:80 (LISTEN)
...
smbd     11741 root    5u  IPv4  28694       UDP 127.0.0.1:1180
smbd     11741 root    6u  IPv4  28689       TCP 193.102.57.3:139-&amp;gt;193.102.57.2:1044 (ESTABLISHED)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Durch die Angabe von Suchoptionen kann man gezielt nach Protokoll und Port suchen:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# lsof -P -n -i tcp:139
COMMAND   PID USER   FD   TYPE DEVICE SIZE NODE NAME
smbd      276 root    5u  IPv4    175       TCP *:139 (LISTEN)
smbd    11741 root    6u  IPv4  28689       TCP 193.102.57.3:139-&amp;gt;193.102.57.2:1044 (ESTABLISHED)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;dump-einer-zone-mit-nslookup&#34;&gt;
    &lt;a href=&#34;#dump-einer-zone-mit-nslookup&#34;&gt;
	Dump einer Zone mit nslookup
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um festzustellen, welche Rechner in einer Domain stehen, kann man mit einem Tool wie nmap das ganze Teilnetz durchprüfen, in dem ein Server steht.
Alternativ kann man sich auch die Daten im DNS ansehen, die ein Serverbetreiber über seine Domain veröffentlicht.&lt;/p&gt;
&lt;p&gt;Am Beispiel der Domain &lt;code&gt;beispiel1.de&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# nslookup

&amp;gt; set type=ns
&amp;gt; www.beispiel1.de.
Server:  nuki.netuse.de
Address:  193.98.110.1

beispiel1.de
        origin = ns.beispiel1.de
        mail addr = postmaster.ns.beispiel1.de
        serial = 2000032201
        refresh = 10800 (3H)
        retry   = 3600 (1H)
        expire  = 604800 (1W)
        minimum ttl = 86400 (1D)
&amp;gt; server ns.beispiel1.de
Default Server:  ns.beispiel1.de
Address:  192.168.254.37

&amp;gt; ls beispiel1.de.
[ns.beispiel1.de]
$ORIGIN beispiel1.de.
@                       1D IN A         192.168.253.131
wwwtest                 1D IN A         192.168.253.135
news                    1D IN A         192.168.253.136
localhost               1D IN A         127.0.0.1
listserv                1D IN A         192.168.253.136
...
igate                   1D IN A         192.168.254.34
daiquiri                1D IN A         192.168.254.61
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Durch &lt;code&gt;set type=ns&lt;/code&gt; (Nameserver) sagen wir &lt;code&gt;nslookup&lt;/code&gt;, daß wir ausschließlich Informationen über Nameserver einer Domain haben möchten.
Wir fragen dann mit &lt;code&gt;www.beispiel1.de.&lt;/code&gt; nach den Nameservern der Domain &lt;code&gt;beispiel1.de&lt;/code&gt;.
Dies ist nur ein einzelner Server, nämlich &lt;code&gt;ns.beispiel1.de&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Wir sagen nun mit Hilfe des Kommandos &lt;code&gt;server ns.beispiel1.de&lt;/code&gt;, daß &lt;code&gt;nslookup&lt;/code&gt; alle weiteren Fragen an diesen Server richten soll.
Mit Hilfe des Kommandos &lt;code&gt;ls beispiel1.de&lt;/code&gt; fordern wir ein Listing der gesamten Zone &lt;code&gt;beispiel1.de&lt;/code&gt; an.
Wir erhalten eine Liste aller Hostnamen und IP-Nummern, die der Betreiber der Domain &lt;code&gt;beispiel1.de&lt;/code&gt; veröffentlicht.&lt;/p&gt;
&lt;p&gt;Besser konfigurierte Nameserver erlauben ab BIND8, Zonetransfers auf die Secondary-Server einer Domain einzuschränken.
&lt;code&gt;ls&lt;/code&gt;-Kommandos von anderen Hosts schlagen dann fehl.
Hat eine Domain mehrere Nameserver, ist es unter Umständen lohnend, diese nacheinander durchzuprobieren:
Vielfach ist der Primary Nameserver restriktiv konfiguriert, aber die Secondaries geben einem dennoch ein Listing der Zone.&lt;/p&gt;
&lt;p&gt;Sicherheitsbewußte Netzbetreiber setzen Nameserver für das Internet und ihr Intranet getrennt auf.
Schließlich braucht es niemanden zu interessieren, welche Rechner in den Büros einer Firma laufen und wie diese heißen.
Stattdessen ist vollkommen ausreichend, die Namen und Nummern der Rechner zu publizieren, die Dienste für die Öffentlichkeit bringen, also etwa der Web-, der Name- und der Mailserver einer Domain.&lt;/p&gt;
&lt;h2 id=&#34;netzwerk-kartierung-mit-cheops&#34;&gt;
    &lt;a href=&#34;#netzwerk-kartierung-mit-cheops&#34;&gt;
	Netzwerk-Kartierung mit Cheops
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2000/05/net.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Mit Hilfe des Gnome-Programmes Cheops bekommt man schnell einen graphischen Netzplan mit Rechnertypen und Verbindungen.
Das Programm kann auch eingesetzt werden, um Portscans von Rechnern durchzuführen, ist hier aber nicht so vielseitig wie nmap.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;unverschlüsselte-verbindung-in-ethereal&#34;&gt;
    &lt;a href=&#34;#unverschl%c3%bcsselte-verbindung-in-ethereal&#34;&gt;
	Unverschlüsselte Verbindung in Ethereal
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2000/05/ethereal.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Mit Hilfe des Netzwerkmonitors Ethereal ist die Analyse von Netzwerkpaketen möglich. Mit Hilfe der Stromverfolgung können dabei die Klartextpaßworte in Protokollen wie TELNET, FTP, POP3 und anderen sehr gut sichtbar gemacht werden.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;rpcinfo-anfrage-an-wwwbeispiel1deh3a&#34;&gt;
    &lt;a href=&#34;#rpcinfo-anfrage-an-wwwbeispiel1deh3a&#34;&gt;
	rpcinfo-Anfrage an &lt;a href=&#34;http://www.beispiel1.de&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.beispiel1.de&lt;/a&gt;

&lt;/h3&gt;&lt;/a&gt;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Mit Hilfe der Tools &lt;code&gt;rpcinfo&lt;/code&gt; und &lt;code&gt;showmount&lt;/code&gt; (Linux: auch &lt;code&gt;kshowmount&lt;/code&gt;) kann man abfragen, welche Dienste der &lt;code&gt;sunrpc&lt;/code&gt;-Dienst  erbringt.
Falls das SUN Network Filesystem (NFS) zu diesen Diensten gehört, kann man weiterfragen, welche Dateisysteme und für wen exportiert werden.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# rpcinfo -p www.beispiel1.de
   program vers proto   port
    100000    4   tcp    111  portmapper
    100000    3   tcp    111  portmapper
    100000    2   tcp    111  portmapper
    100000    4   udp    111  portmapper
    100000    3   udp    111  portmapper
    100000    2   udp    111  portmapper
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Wie man sieht, redet der &lt;code&gt;sunrpc&lt;/code&gt;-Dienst von &lt;code&gt;www.beispiel1.de&lt;/code&gt; mit externen Rechnern.
Das ist nicht notwendig und der Dienst kann blockiert werden, etwa durch eine Firewall oder durch Konfiguration entsprechender Filtermechanismen.&lt;/p&gt;
&lt;p&gt;Eine sehr häufige Fehlkonfiguration besteht darin, Verzeichnisse mit NFS weltweit les- und schreibbar freizugeben.
Beispielhaft unsicher die Server von &lt;code&gt;beispiel2.de&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# /usr/sbin/kshowmount -e rzserv2.beispiel2.de
Export list for rzserv2.beispiel2.de:
/usr/lib/cobol       (everyone)
/usr/sys/inst.images (everyone)
/stadtinf            (everyone)
/var/spool/mail      (everyone)
/usr/lpp/info        (everyone)
/usr/local           (everyone)
/pd-software         (everyone)
/u1                  (everyone)
/user                (everyone)
/fix                 (everyone)
/u                   (everyone)
/ora                 rzws01
/install             (everyone)
/ora-client          192.168.252.20
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Die mit &lt;code&gt;everyone&lt;/code&gt; gelisteten Verzeichnisse, darunter die Mail und die Homeverzeichnisse der Benutzer, sind weltweit les- und schreibbar.
Durch Zugriffe auf die &lt;code&gt;/usr/local&lt;/code&gt; und &lt;code&gt;/usr/lib/cobol&lt;/code&gt;-Verzeichnisse lassen sich Systembibiotheken und Systemprogramme austauschen, sodaß das ganze System ohne nennenswerten Widerstand sofort einnehmbar ist.
Tauscht man Daten im &lt;code&gt;/install&lt;/code&gt;-Verzeichnis aus, sind auch alle Clients subvertiert, die von dieser Maschine installiert werden.
Das System ist durch seine fahrlässig offene Konfiguration also die ideale Ausgangsbasis für weitere Angriffe gegen andere Netzwerke.&lt;/p&gt;
&lt;h2 id=&#34;snmp-abfragen-an-ein-entferntes-system&#34;&gt;
    &lt;a href=&#34;#snmp-abfragen-an-ein-entferntes-system&#34;&gt;
	SNMP-Abfragen an ein entferntes System
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;SNMP gehört zu den Diensten, die einem Angreifer ein Höchstmaß an Information liefern können und die in Standardinstallationen oft nicht abgeschaltet und unzureichend gesichert werden.
Zudem läuft der Dienst über UDP, das von vielen Portscannern nicht per Default gescannt wird.
Daher taucht der Dienst auf dem Radar vieler Systemadministratoren nicht auf.&lt;/p&gt;
&lt;p&gt;Wieder dienen die Server von &lt;code&gt;beispiel2.de&lt;/code&gt; als abschreckendes Beispiel:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# snmpwalk rzserv2.beispiel2.de public
system.sysDescr.0 = OCTET STRING: &amp;quot;Fore Systems ATM Host (AIX 1 000005016600)&amp;quot;
system.sysObjectID.0 = OBJECT IDENTIFIER: enterprises.326.2.1
system.sysUpTime.0 = Timeticks: (0) 0:00:00
system.sysContact.0 = OCTET STRING: &amp;quot;&amp;quot;
system.sysName.0 = OCTET STRING: &amp;quot;rzserv2.&amp;quot;
system.sysLocation.0 = OCTET STRING: &amp;quot;&amp;quot;
system.sysServices.0 = INTEGER: 72
interfaces.ifNumber.0 = INTEGER: 7
interfaces.ifTable.ifEntry.ifIndex.1 = INTEGER: 1
interfaces.ifTable.ifEntry.ifIndex.2 = INTEGER: 2
interfaces.ifTable.ifEntry.ifIndex.3 = INTEGER: 3
interfaces.ifTable.ifEntry.ifIndex.4 = INTEGER: 4
interfaces.ifTable.ifEntry.ifIndex.5 = INTEGER: 5
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Wir erfahren hier nicht nur den Typ und Patchlevel des Systems, sondern (nicht gezeigt) auch eine Liste der Interfaces und Routingkonfiguration des Systems - wir bekommen also detaillierte Information über die Topologie des Zielnetzes.
Zusammen mit Daten aus dem DNS gibt uns das einen genauen Netzplan des potentiellen Opfers.
Wenn weitere Management Module installiert sind, bekommen Zugriff auf weitere Subsysteme, etwa Oracle, SAP oder andere fernzuüberwachende Einheiten.
SNMP wird auch in vielen Routern und in RMON Netzwerkprobes eingesetzt - ein Eindringling kann so sogar Verkehrsdaten aus dem Netz erfahren, wenn diese nicht gesichert worden sind.&lt;/p&gt;
&lt;h2 id=&#34;ein-server-lagert-vertrauliche-daten-in-zugänglichen-verzeichnissen&#34;&gt;
    &lt;a href=&#34;#ein-server-lagert-vertrauliche-daten-in-zug%c3%a4nglichen-verzeichnissen&#34;&gt;
	Ein Server lagert vertrauliche Daten in zugänglichen Verzeichnissen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Eine weitere beliebte Fehlerklasse besteht in vertraulichen Daten, die in durch den Webserver zugänglichen Verzeichnissen gelagert werden.
Häufig bieten Webspace-Provider virtuelle Webserver an, bei denen die Wurzel des durch den Anwender beschreibbaren Bereiches (etwa: &lt;code&gt;/home/www/servers/www.kunde.de/&lt;/code&gt;, für den Kunden sichtbar als &lt;code&gt;/&lt;/code&gt;) auch die Wurzel des virtuellen Servers ist (etwa: &lt;code&gt;http://www.kunde.de/&lt;/code&gt;).
Legt der Kunde jetzt Daten unterhalb seines Wurzelverzeichnisses ab (etwa eine Datei &lt;code&gt;/passwd&lt;/code&gt;) dann ist diese Datei auch durch den Webserver abrufbar, denn sie liegt ja unterhalb der Document Root und hat eine URL (etwa: &lt;code&gt;http://www.kunde.de/passwd&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Viele Webshops schreiben Bestellungen in ein oder mehrere Logverzeichnisse oder haben Konfigurationsdateien mit Paßworten und Artikeldaten.
Liegen diese Daten unterhalb der Document Root, dann haben sie URLs und sind zunächst einmal prinzipiell über das Web abrufbar, sofern es einem Angreifer gelingt den Namen zu raten.
Kennt man den Namen und die Version der verwendeten Websoftware, ist dies meist sehr einfach zu machen.&lt;/p&gt;
&lt;p&gt;Prinzipielle Abhilfe schaffen hier nur Hostingumgebungen, bei denen die Document Root des Webservers tiefer als die Wurzel des Kundenverzeichnisses liegt (etwa ab &lt;code&gt;/home/www/servers/www.kunde.de/pages&lt;/code&gt;).
Nun kann der Kunde weitere Verzeichnisse oberhalb der Document Root anlegen (etwa: &lt;code&gt;/home/www/servers/www.kunde.de/shop&lt;/code&gt;) und seine vertraulichen Daten dort speichern.
Da diese Verzeichnisse über das Wartungs-FTP, nicht aber mit HTTP zugänglich sind, können sie nicht so einfach abgerufen werden.&lt;/p&gt;
&lt;p&gt;Alternativ legt man Verzeichnisse unterhalb der Document Root an und verbietet den Zugriff per HTTP auf das Verzeichnis durch Anlegen einer &lt;code&gt;.htaccess&lt;/code&gt;-Datei (Apache-Webserver).
Die Datei sollte den Zugriff von überall verbieten:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cat /shop/.htaccess
order deny, allow
deny from all
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Daten können dann nur noch über FTP abgerufen werden. Für FTP gelten &lt;code&gt;.htaccess&lt;/code&gt;-Dateien nicht.&lt;/p&gt;
&lt;h2 id=&#34;ein-server-vertraut-eingabeparametern-aus-webformularen-ohne-grund&#34;&gt;
    &lt;a href=&#34;#ein-server-vertraut-eingabeparametern-aus-webformularen-ohne-grund&#34;&gt;
	Ein Server vertraut Eingabeparametern aus Webformularen ohne Grund
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die dritte häufige Fehlerklasse besteht darin, in CGI-Programmen Parameter aus dem Web zu übernehmen und ohne Prüfung zu verwenden.&lt;/p&gt;
&lt;p&gt;Eine Webanwendung besteht aus Komponenten die innerhalb der Firewall liegen und als vertrauenswürdig gelten können, weil sie durch den lokalen Administrator kontrolliert werden.
Dazu gehören etwa die lokalen Scripte, die Datenbank, der Webserver und lokale Datendateien.
Dazu kommen dann weitere Komponenten, die außerhalb der Firewall liegen und die grundsätzlich als nicht vertrauenswürdig gelten können.
Das ist hauptsächlich der Browser des Anwenders, wenn er denn einen benutzt und seinen Webrequest zwecks Hackangriff nicht direkt in ein Telnet tippt.
Die Firewall markiert eine Vertrauensgrenze, eine Trust Boundary.&lt;/p&gt;
&lt;p&gt;Daten von jenseits der Vertrauensgrenze kann eine Webanwendung nicht ohne Prüfung vertrauen.
Dazu gehören alle Parameter, die dem CGI-Script übergeben werden, also alle GET-, POST- oder COOKIE-Parameter, der HTTP_REFERER, der HTTP_USER_AGENT und alle weiteren Werte von außen.
Alle diese Werte müssen vor der Verwendung durch ein CGI-Script durch eine Gültigkeitsprüfung, in der sichergestellt wird, daß die Daten auch das erwartete Format haben und gültige Werte besitzen.&lt;/p&gt;
&lt;p&gt;Zum Beispiel ist es gängige Praxis, daß bestimmte Scripte Werte nur dann akzeptieren, wenn bei der Übergabe der HTTP_REFERER des Aufrufes korrekt ist.
Auf diese Weise versucht sich das Script gegen gefälschte Aufrufe zu schützen.
Natürlich ist es für einen potentiellen Angreifer überhaupt gar kein Problem außer den Scriptparametern auch noch jeden gewünschten HTTP_REFERER mit zu übergeben - der Schutz ist also wirkungslos.
Korrekt wäre, wenn das Script jeden übergebenen Parametern einzeln prüft.&lt;/p&gt;
&lt;p&gt;Eine andere häufig verwendete Technik besteht darin, Parameter von einer Seite zur nächsten als &lt;code&gt;&amp;lt;INPUT TYPE=&amp;quot;HIDDEN&amp;quot;&amp;gt;&lt;/code&gt; mitzuschleifen.
Dabei wird interner Zustand der Anwendung im Browser des Anwenders gehalten, also jenseits der Trust Boundary.
Für den Anwender ist es ein leichtes, den Zustand einer solchen Anwendung zu manipulieren und jeden gewünschten Effekt zu bewirken.
Korrekt wäre, eine Plattform zu verwenden, die Sessionvariablen bietet und den Zustand der Anwendung auf dem Webserver halten kann (etwa: Microsoft ASP mit dem Session-Objekt, PHP3 mit PHPLIB, PHP4 mit den
&lt;code&gt;session_*()&lt;/code&gt;-Funktionen oder einen richtigen Application-Server).&lt;/p&gt;
&lt;h2 id=&#34;fazit&#34;&gt;
    &lt;a href=&#34;#fazit&#34;&gt;
	Fazit
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Webmaster sind gut beraten, alle ihre Installationen auf diese drei Fehlerklassen abzuprüfen und ihre Anwendungen gegebenenfalls anzupassen.
Gestohlene Kreditkartendaten oder gar geknackte Server, die als Ausgangspunkt für weitere Angriffe dienen, sind nicht nur peinlich:
Derartige Installationen sind fahrlässig unsicher und dem betroffenen Betreiber stehen mit großer Wahrscheinlichkeit Klagen auf Schadenersatz oder Beihilfe zum Computereinbruch ins Haus.&lt;/p&gt;
&lt;p&gt;Für den Laien ist dies keine Alternative:
Die Sicherheit eines Servers zu verifizieren setzt nicht nur umfassende technische Kenntnisse, sondern auch Zugang zum Server voraus.
Letztendlich kann nur ein technisches Gütesiegel, das auf Grundlage einer technischen Überprüfung der Server und aller darauf laufenden Anwendungen erteilt wird dem Verbraucher mitteilen, daß er es mit einer seriösen Installation zu tun hat.&lt;/p&gt;
&lt;h1 id=&#34;referenzen&#34;&gt;
    &lt;a href=&#34;#referenzen&#34;&gt;
	Referenzen:
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.koehntopp.de/kris/artikel/webtune/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.koehntopp.de/kris/artikel/webtune/&lt;/a&gt;

:&lt;/dt&gt;
&lt;dd&gt;&amp;ldquo;Webserver verstehen und tunen&amp;rdquo;&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.koehntopp.de/php/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.koehntopp.de/php/&lt;/a&gt;

:&lt;/dt&gt;
&lt;dd&gt;&amp;ldquo;de.comp.lang.php - Häufig gestellte Fragen&amp;rdquo;&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.insecure.org/nmap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.insecure.org/nmap/&lt;/a&gt;

:&lt;/dt&gt;
&lt;dd&gt;&amp;ldquo;NMAP Port Scanner&amp;rdquo;&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://ethereal.zing.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://ethereal.zing.org/&lt;/a&gt;

:&lt;/dt&gt;
&lt;dd&gt;&amp;ldquo;Ethereal Network Monitor&amp;rdquo;&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.marko.net/cheops/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.marko.net/cheops&lt;/a&gt;

:&lt;/dt&gt;
&lt;dd&gt;&amp;ldquo;Ceops Network Mapper&amp;rdquo;&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://freshmeat.net/appindex/1998/04/06/891857252.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://freshmeat.net/appindex/1998/04/06/891857252.html&lt;/a&gt;

:&lt;/dt&gt;
&lt;dd&gt;&amp;ldquo;lsof - list open files&amp;rdquo;&lt;/dd&gt;
&lt;dt&gt;&amp;ldquo;TCP/IP Illustrated, Volume 1: The Protocols&amp;rdquo;:&lt;/dt&gt;
&lt;dd&gt;W. Richard Stevens, Addison-Wesley&lt;/dd&gt;
&lt;dt&gt;&amp;ldquo;Hacking Exposed - Network Security Secrets &amp;amp; Solutions&amp;rdquo;:&lt;/dt&gt;
&lt;dd&gt;McClure, Scambray and Kurtz, Osborne&lt;/dd&gt;
&lt;dt&gt;&amp;ldquo;Maximum Linux Security&amp;rdquo;:&lt;/dt&gt;
&lt;dd&gt;Anonymous, Sams&lt;/dd&gt;
&lt;/dl&gt;
</description>
    </item>
    
    <item>
      <title>PHPLIB</title>
      <link>https://blog.koehntopp.info/1999/04/01/phplib-deutsch.html</link>
      <pubDate>Sat, 02 Mar 1996 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1999/04/01/phplib-deutsch.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;Dieser Text bildet Kapitel 24 von &lt;em&gt;php, dynamische webautritte
professionell realisieren&lt;/em&gt;. Er ist mit dem 3. Reprint der 1. Auflage
dazugekommen. Für Besitzer älterer Versionen dieses Buches stelle ich den
Text hier zur Verfügung (April 1999)&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;phplib&#34;&gt;
    &lt;a href=&#34;#phplib&#34;&gt;
	PHPLIB
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;überblick-und-installation&#34;&gt;
    &lt;a href=&#34;#%c3%bcberblick-und-installation&#34;&gt;
	Überblick und Installation
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;was-leistet-phplib&#34;&gt;
    &lt;a href=&#34;#was-leistet-phplib&#34;&gt;
	Was leistet PHPLIB?
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;PHPLIB ist eine Sammlung von in PHP3 geschriebenen Klassen, mit
denen eine Reihe von Aufgaben gelöst werden können, die bei der
Entwicklung von webgestützten Anwendungen sehr häufig auftreten.&lt;/p&gt;
&lt;p&gt;Ursprünglich stand hinter der Entwicklung von PHPLIB der Wunsch,
Variablen in PHP zu schaffen, die eine längere Gültigkeitsdauer
als eine Webseite haben, die also automatisch von Seite zu Seite
weitergereicht werden.&lt;/p&gt;
&lt;p&gt;Die Klasse &lt;strong&gt;Session&lt;/strong&gt; der Bibliothek
realisiert dies, indem sie jeden Zugreifer auf eine Webanwendung
mit einer eindeutigen Kennung versieht und diese Kennung dann
auf unterschiedliche Weise von Seite zu Seite weitergibt. Bei
jedem Zugriff auf eine Seite wird ein Satz Variablen, der zu
dieser Kennung gehört, aus einem festen Datenspeicher geladen
und am Ende der Seite auch dort wieder gespeichert. Ein solcher
Satz Variablen heißt in der Terminologie von PHPLIB &amp;ldquo;Session&amp;rdquo;
und die von PHPLIB verwaltete Kennung heißt &amp;ldquo;Session-ID&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Der Datenspeicher, der von PHPLIB verwendet wird, war
ursprünglich eine SQL-Datenbank, aber seit Version 7 von PHPLIB
können auch andere Speicher, zum Beispiel DBM-Dateien,
LDAP-Server oder ein Shared Memory-Segment verwendet werden.&lt;/p&gt;
&lt;p&gt;Da
PHPLIB ursprünglich ausschließlich SQL-Datenbank als Speicher
verwendet hat, war es schon recht bald notwendig, die Bibliothek
an unterschiedliche Datenbanken anzupassen. Aus dieser
Notwendigkeit heraus wurde eine Klasse &lt;strong&gt;DB_SQL&lt;/strong&gt; zum Zugriff
auf solche Datenbanken entwickelt, die ein einheitliches,
datenbankunabhängiges Interface zum Zugriff auf diese
Datenbanken zur Verfügung stellt. Diese Klasse ist sogar so
flexibel, daß sie vollkommen unabhängig von PHPLIB verwendet
werden kann - selbst wenn man eine Anwendung ohne Sessions, aber
mit Datenbanken entwickelt, ist es also sinnvoll, diese Klasse
zum Zugriff auf die Datenbank zu verwenden: Einerseits gewinnt
man so mehr Flexibilität beim Zugriff auf die Datenbank,
andererseits ist auf diese Weise die Umrüstung der Anwendung auf
PHPLIB sehr viel einfacher.&lt;/p&gt;
&lt;p&gt;Mit der Entwicklung von PHPLIB kamen recht schnell weitere
Fertigkeiten dazu. Wenn man Sessionvariablen hat, ist es zum
Beispiel recht einfach, sich daran zu erinnern, ob ein Anwender
sich schon einmal eingeloggt hat und wann das war. Auf diese
Weise kann man Webseiten recht einfach mit Benutzerkennungen und
Paßworten schützen, ganz ähnlich wie mit .htaccess-Dateien und
HTTP-Authentisierung.&lt;/p&gt;
&lt;p&gt;Anders als bei HTTP-Authentisierung hat
man bei der von PHPLIB-Klasse &lt;strong&gt;Auth&lt;/strong&gt; verwendeten
Zugangskontrolle jedoch viel mehr Kontrolle über das Aussehen
des Anmeldebildschirmes: Es ist eine normale Webseite, die
Bedienungshinweise, ein Firmenlogo und Online-Hilfe enthalten
kann. Man hat außerdem auch viel mehr Kontrolle über die
Anmeldung selbst: Man kann Anwender gezielt oder zeitgesteuert
automatisch wieder ausloggen, man kann die Benutzereingaben
gegen beliebige SQL-, LDAP-, NIS- oder NT PDC-Datenbanken mit
Paßworten authentisieren und man ist nicht darauf angewiesen,
daß ein Benutzer durch einen Benutzernamen identifiziert wird,
sondern kann sich beliebige Schemata ausdenken (E-Mail Adressen,
Vorname/Nachname/Telefon oder was immer passend ist). Außerdem
hat man auch Einfluß auf die Übertragung der Anmeldedaten vom
Anwender zum Webserver und kann dort kryptographische Methoden
einsetzen, um eine Übertragung von Klartext-Paßworten zu
vermeiden. Zu einem Benutzer gehören auch Benutzerrechte und so
bekam PHPLIB zusätzlich eine Klasse &lt;strong&gt;Perm&lt;/strong&gt; zur Verwaltung
von Zugriffsrechten.&lt;/p&gt;
&lt;p&gt;Die letzte Erweiterung der Kernfunktionen von PHPLIB war dann
die Schaffung von Variablen, die nicht mehr an eine Session-ID
gebunden waren, sondern an eine Benutzerkennung. Die
PHPLIB-Klasse &lt;strong&gt;User&lt;/strong&gt; bedient sich ganz genauso wie eine
&lt;strong&gt;Session&lt;/strong&gt;, nur daß die nach einer Benutzeranmeldung Daten
verwalten kann, die zu dem Login des Benutzers gehören. Auf
diese Weise ist es sehr leicht, personalisierte Websites zu
erzeugen, die sich erinnern, welche Voreinstellungen ein
Benutzer das letzte Mal getroffen hatte und die diese
Einstellungen wiederverwenden.&lt;/p&gt;
&lt;p&gt;Während die Funktionen oben zur Kernfunktionalität von PHPLIB
gehören, die von fast jeder Anwendung mit PHPLIB benötigt wird,
ist der Funktionsreichtum der Bibliothek damit noch lange nicht
erschöpft. Eine Reihe von weiteren Klassen bietet Funktionen,
die optional dazugenommen werden kann, wenn die Anwendung Bedarf
daran hat und die dem Entwickler viele arbeits- und
codieraufwendunge Dinge abnehmen können. Die Klasse &lt;strong&gt;Cart&lt;/strong&gt;
zum Beispiel realisiert einen einfachen Warenkorb, der zusammen
mit einer Artikeltabelle in einer Datenbank leicht zu einem
einfachen Shopsystem erweitert werden kann.&lt;/p&gt;
&lt;p&gt;Andere Klassen generieren immer wieder benötigte Strukturen in
HTML: &lt;strong&gt;Table&lt;/strong&gt; kann in Zusammenhang mit Arrays oder
Datenbank-Resultaten fertige Tabellen generieren,
&lt;strong&gt;Sql_Query&lt;/strong&gt; erlaubt es, eine Eingabemaske zu erzeugen, in
denen sich ein Anwender eine Query gegen eine Datenbanktabelle
zusammenklicken kann und diese Maske dann auch auszuwerten und
schließlich dient die &lt;strong&gt;OOH Forms&lt;/strong&gt;-Klassensammlung zur
Generierung von Verwaltung von Abfrageformularen.&lt;/p&gt;
&lt;h3 id=&#34;wo-bekommt-man-phplib-und-was-kostet-sie&#34;&gt;
    &lt;a href=&#34;#wo-bekommt-man-phplib-und-was-kostet-sie&#34;&gt;
	Wo bekommt man PHPLIB (und was kostet sie)?
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die Website zu PHPLIB ist &lt;a href=&#34;http://phplib.netuse.de&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://phplib.netuse.de&lt;/a&gt;

.
An dieser Stelle findet sich nicht nur die jeweils aktuelle Version
von PHPLIB, sondern auch die jeweils aktuelle Dokumentation und
ein Verweis auf die Supportmailinglisten zu PHPLIB. Ebenso
findet man dort ein Archiv dieser Mailinglisten.&lt;/p&gt;
&lt;p&gt;Die Mailingliste &lt;code&gt;phplib@lists.netuse.de&lt;/code&gt;
ist das Forum, an das sich Anwender der Bibliothek wenden
können, die Probleme mit der Installation oder dem Betrieb von
PHPLIB haben. Man kann sich an dieser Liste anmelden, indem man
eine Nachricht mit dem Text &amp;ldquo;subscribe&amp;rdquo; an die Adresse
&lt;code&gt;phplib-request@lists.netuse.de&lt;/code&gt;
sendet. Die Abmeldung funktioniert analog, indem man eine
Nachricht mit dem Text &amp;ldquo;unsubscribe&amp;rdquo; an diese Adresse
&lt;code&gt;phplib-request@lists.netuse.de&lt;/code&gt;
sendet. Die Liste ist in englischer Sprache.&lt;/p&gt;
&lt;p&gt;Eine weitere Liste,&lt;code&gt;phplib-dev@lists.netuse.de&lt;/code&gt;,
ist für Entwickler der Bibliothek gedacht: Sie empfängt Reports
aus dem CVS-Archiv von phplib und auf ihr finden Diskussionen
unter den Entwicklern statt. Auch diese Liste ist
englischsprachig.&lt;/p&gt;
&lt;p&gt;Da die Bibliothek unter der &amp;ldquo;nicht infektiösen&amp;rdquo; LGPL frei
verfügbar ist, kann sie sowohl in GNU Projekten als auch in
kommerziellen Softwareprojekten gefahrlos und ohne daß
Lizenzgebühren anfallen eingesetzt werden. Der genaue Text der
Lizenzvereinbarung ist Bestandteil des Paketes und findet sich
in der Datei COPYING.&lt;/p&gt;
&lt;p&gt;Die ursprünglichen Entwickler von PHPLIB,
Boris Erdmann  und Kristian Köhntopp, haben inzwischen
von vielen anderen Netzteilnehmern Unterstützung bekommen.
Besondere Erwähnung verdienen Sascha Schumann , der
für die Veröffentlichung von PHPLIB-6 maßgeblich war und der
viele andere Erweiterungen und Fehlerkorrekturen vorgenommen hat
und Jay Bloodworth ,
von dem die OOH Forms-Klassen der Bibliothek stammen. Eine
vollständige Liste aller Helfer findet man in der Datei CREDITS
als Bestandteil des Paketes.&lt;/p&gt;
&lt;h3 id=&#34;phplib-installieren&#34;&gt;
    &lt;a href=&#34;#phplib-installieren&#34;&gt;
	PHPLIB installieren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Bevor man daran gehen kann, sich mit der eigentlichen
Installation von PHPLIB zu beschäftigen, solle man zunächst
einmal seine Installation von PHP3 überprüfen und einige Fakten
darüber in Erfahrung bringen. Für den Installationsprozeß ist es
notwendig zu unterscheiden, ob man ein CGI PHP3 oder ein
mod_php3 als Bestandteil eines Apache Webservers hat. Wie die
meisten Fragen zum Thema PHP3-Installation beantwortet sich
dies am einfachsten, indem man sich ein Script mit einem
phpinfo()-Aufruf erzeugt und sich die Ausgabe desselben ansieht:
Besteht die Ausgabe von phpinfo() aus vier Tabellen, handelt es
sich um einen CGI PHP3-Interpreter. Enthält sie dagegen mehr
Tabellen, von denen die letzten beiden &amp;ldquo;Apache Environment&amp;rdquo; und
&amp;ldquo;HTTP Headers Information&amp;rdquo; heißen, handelt es sich um ein
PHP3-Modul in einem Apache Webserver (mod_php3).&lt;/p&gt;
&lt;p&gt;Falls CGI PHP3 verwendet wird, sollte man den PHP3-Interpreter
gleich noch auf korrekte Übersetzung und Installation prüfen:
Angenommen der Name des Testscriptes mit dem phpinfo()-Aufruf
ist &lt;code&gt;http://localhost/test.php3&lt;/code&gt;. Falls der Inhalt der Variablen
&lt;code&gt;$PHP_SELF&lt;/code&gt; nur den Pfad zum PHP3-Script enthält (&lt;code&gt;/test.php3&lt;/code&gt;),
ist die Installation korrekt erfolgt. Taucht dagegen der
CGI-Pfad und der Name des Interpreters als Bestandteil der
Variablen auf (&lt;code&gt;/cgi-bin/php/test.php3&lt;/code&gt;), ist der Interpreter
ohne die Option &lt;code&gt;--force-cgi-redirect&lt;/code&gt; übersetzt worden.
Abgesehen davon, daß dies eine enorme Sicherehitslücke ist, wird
PHPLIB mit so einem Interpreter nicht korrekt funktionieren. Mit
einem dergestalt falsch installierten PHP3-Interpreter lassen
sich beliebige Dateien, auch außerhalb der Document-Root des
Webservers, lesen und herunterladen
(&lt;code&gt;/cgi-bin/php/../../../../../../etc/passwd&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Mit Hilfe der Ausgabe von phpinfo() läßt sich auch die Version
des PHP3-Interpreters prüfen. Für PHPLIB muß sie ausreichend neu
sein: mindestens 3.0.6 oder höher, besser wäre ein aktuelles
Release wie 3.0.11 oder höher. Es hat keinen Zweck versuchen zu
wollen, PHPLIB mit einer älteren Version von PHP3 zu
installieren: Ältere Versionen von PHP3 haben zu viele Fehler in
der Speicherverwaltung und in der Behandlung von
objektorientierten Erweiterungen als daß sie mit PHPLIB
zusammenarbeiten könnten.&lt;/p&gt;
&lt;p&gt;Für die korrekte Installation von PHPLIB ist es außerdem
notwendig, Zugriff auf die php3.ini-Datei zu haben, um einige
Konfigurationsparameter für den Interpreter setzen zu können. Im
Falle von mod_php3 genügt es, .htaccess-Dateien erzeugen zu
können, mit denen man PHP3-Parameter für Unterverzeichnisse
seines Webservers festlegen kann.&lt;/p&gt;
&lt;p&gt;PHPLIB kann entweder als mit gzip komprimiertes tar-Archiv
(tgz-Datei) oder als selbstentpackendes Shellscript (shar-Datei)
bezogen werden. Das bevorzugte Format ist das tgz-Format, weil
es wegen der Kompression deutlich kleiner ist und weil es sowohl
unter UNIX als auch unter Windows (mit WinZIP) problemlos
auszupacken ist.&lt;/p&gt;
&lt;p&gt;Nach dem Auspacken entsteht ein Verzeichnis php-lib mit den
Unterverzeichnissen doc, pages, php und stuff. Die eigentliche
Bibliothek befindet sich in den Dateien im Verzeichnis php. Dazu
gehören außerdem die Dateien im Verzeichnis pages, die eine
Reihe von Testseiten und Verwaltungsprogrammen enthalten. Diese
Daten sind nur zum Test des Installationsprozesses notwendig und
können später im Produktionsbetrieb entfernt werden. Das
Verzeichnis stuff enthält eine Reihe von Scripten für die
unterschiedlichsten SQL-Datenbanken und dient zur Einrichtung
der benötigten Tabellen. Schließlich existiert noch das
doc-Verzeichnis, in dem sich die Dokumentation zur Bibliothek in
englischer Sprache befindet.&lt;/p&gt;
&lt;p&gt;Die Dateien im Verzeichnis php werden von PHP3 zur Laufzeit
mittels include()- oder require()-Anweisungen eingebunden. Man
sollte sie daher in ein Verzeichnis &lt;em&gt;neben&lt;/em&gt; der
Document-Root seines Webservers kopieren und den include_path
seines PHP3-Interpreters darauf zeigen lassen. Auf keinen Fall
sollten sich diese Dateien in irgendeinem Verzeichnis
&lt;em&gt;unterhalb&lt;/em&gt; des Document-Root Verzeichnisses des Webservers
befinden, andernfalls kann es zu schweren Sicherheitsproblemen
kommen.&lt;/p&gt;
&lt;p&gt;Setzt man die CGI-Version von PHP ein oder möchte man für ein mod_php den
include_path global vorgeben, ist eine Änderung in der php3.ini zu machen.
In welchem Verzeichnis diese Datei gesucht wird, geben neuere Versionen in
der Ausgabe von phpinfo() als Überschrift der Tabelle
&amp;ldquo;Configuration&amp;rdquo; mit an. In der php3.ini ist der Parameter
include_path so zu setzen, daß er das Verzeichnis mit den
*.inc-Dateien von PHPLIB enthält. Setzt man dagegen mod_php ein
und möchte die Änderung der Konfigurationsparameter nur für ein
Unterverzeichnis vornehmen, muß man in einem &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt;-Block
in der httpd.conf oder in einer .htaccess-Datei einen Eintrag
der Form &amp;ldquo;php3_include_path
/pfad/zum/verzeichnis&amp;rdquo; vornehmen, damit das betreffende
Verzeichnis mit durchsucht wird.&lt;/p&gt;
&lt;p&gt;Auf jeder Seite, die PHPLIB verwendet, müssen nun die Dateien
mit den Definitionen der Klassen von PHPLIB eingebunden werden.
Zu diesem Zweck existiert eine vordefinierte Datei, die sich nun
in dem neuen Include-Verzeichnis befinden muß: prepend.php3.
Entweder kann diese Datei manuell auf jeder einzelnen
PHPLIB-Seite eingebunden werden oder sie kann automatisch vor
jede dieser Seiten gesetzt werden. Letzteres erreicht man, indem
man den Parameter &amp;ldquo;auto_prepend_file = &amp;hellip;&amp;rdquo; in der php3.ini
entsprechend setzt, oder, falls man mod_php einsetzt, in einem
&lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt;-Block oder einer .htaccess-Datei einen Eintrag
der Form &amp;ldquo;php3_auto_prepend_file /pfad/zu/datei/prepend.php3&amp;rdquo;
vornimmt.&lt;/p&gt;
&lt;p&gt;In der Datei prepend.php3 wird dann eingetragen, welche Dateien
PHPLIB zu jeder Seite dazuladen soll. Verwendet man MySQL, ist
keine Änderung notwendig. Wird stattdessen eine der anderen von
PHPLIB unterstützten Datenbanken (mSQL, ODBC, Oracle 7,
Oracle OCI 8 Interface, Postgres oder Sybase) verwendet, ist die
Anweisung &amp;lsquo;require(&amp;ldquo;db_mysql.inc&amp;rdquo;)&amp;rsquo; in dieser Datei entsprechend
anzupassen. Verwendet man PHPLIB ohne SQL-Datenbank, sondern mit
dem LDAP-, DBM- oder Shared Memory-Interface, ist diese
require-Anweisung auszukommentieren und stattdessen die
Anweisung &amp;lsquo;require(&amp;ldquo;ct_sql.inc&amp;rdquo;)&amp;rsquo; in der Zeile darunter
entsprechend anzupassen. In dieser Anleitung gehen wir davon
aus, daß eine Standardinstallation mit MySQL verwendet werden
soll. Dann sind in der prepend.php3 keine Änderungen notwendig.&lt;/p&gt;
&lt;p&gt;Im nächsten Schritt sind in der Datenbank die benötigten
Tabellen anzulegen. In MySQL muß der Datenbank-Administrator
dazu zunächst einmal eine logische Datenbank mit dem Kommando
&amp;lsquo;CREATE DATABASE&amp;rsquo; anlegen, etwa &amp;lsquo;CREATE DATABASE beispieldb&amp;rsquo;.
Danach muß dem Benutzer, unter dem PHP3 später ausgeführt wird,
auf die übliche Weise Zugriffsrecht auf diese Datenbank gegeben
werden. Es ist dringend empfohlen, keine gesonderte logische
Datenbank für PHPLIB anzulegen, sondern die Tabellen von PHPLIB
innerhalb des normalen Datenbankschemas der Anwendung zu
erzeugen. Man kann dies für die Datenbank &amp;lsquo;beispieldb&amp;rsquo; tun,
indem man einfach den SQL-Batch &amp;lsquo;stuff/create_database.mysql&amp;rsquo;
aus der PHPLIB-Distribution ausführt:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mysql&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;beispieldb&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stuff&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;create_database&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;mysql&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ein einfaches &amp;lsquo;SHOW TABLES&amp;rsquo; in dieser Datenbank sollte einem
dann die Tabellen active_sessions und active_sessions_split,
auth_user und auth_user_md5 sowie db_sequence zeigen.&lt;/p&gt;
&lt;p&gt;Schließlich muß man PHPLIB noch auf seine eigenen Bedürfnisse
anpassen, d.h. der Bibliothek mitteilen, wo sie die Datenbank
findet und mit welchen Parametern sie arbeiten soll. Alle diese
Änderungen werden in der Datei local.inc vorgenommen. Diese
Datei enthält eine Reihe von Klassendefinitionen, die die
normalen, unspezifischen Klassendefinitionen um die für die
Anwendung benötigten Parameter ergänzen. In der zum Paket
gehörenden Version enthält diese Datei eine Reihe von
Beispieldefinitionen, was sie ein wenig unübersichtlich macht.
Zum Üben ist es ausreichend, wenige Zeilen in der Definition von
DB_Example anzupassen, aber für eine Installation, die für die
Produktion gedacht ist, wird man die Datei nur als Vorlage
nehmen und mit einer leeren local.inc anfangen, die man sich für
seine Zwecke maßschneidert.&lt;/p&gt;
&lt;p&gt;An keiner anderen Datei von PHPLIB sollten normalerweise
Änderungen notwendig sein.&lt;/p&gt;
&lt;p&gt;Zum Testen kann nun die Dateien aus dem pages-Verzeichnis in die
Document-Root seines Webservers kopieren und einmal versuchen,
die Testseiten aufzurufen. Bei Installationsproblemen hilft die
wirklich ausführliche Anleitung, die mit PHPLIB mitgeliefert
wird und die Supportmailingliste zur Bibliothek.&lt;/p&gt;
&lt;h2 id=&#34;zugriff-auf-datenbanken-mit-phplib&#34;&gt;
    &lt;a href=&#34;#zugriff-auf-datenbanken-mit-phplib&#34;&gt;
	Zugriff auf Datenbanken mit PHPLIB
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;erstellen-einer-eigenen-datenbank-klasse&#34;&gt;
    &lt;a href=&#34;#erstellen-einer-eigenen-datenbank-klasse&#34;&gt;
	Erstellen einer eigenen Datenbank-Klasse
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;PHPLIB enthält eine Klasse DB_Sql, die den Zugriff auf
Datenbanken in einer Weise erlaubt, die weitgehend unabhängig
von der verwendeten Datenbankart ist. Die Klasse existiert in
verschiedenen Versionen, je nach der unterliegenden
SQL-Datenbank, die verwendet werden soll: db_mysql.inc
definiert eine Version von DB_Sql für MySQL-Datenbanken,
db_odbc.inc eine Version für ODBC-Datenbanken und so weiter.
Durch Einbinden der entsprechenden Version in der Datei
prepend.php3 kann man entscheiden, mit welcher Datenbank man
arbeiten möchte.&lt;/p&gt;
&lt;p&gt;Die Klasse DB_Sql ist dabei sehr allgemein gehalten: Sie enthält
keinerlei Connect-Informationen und eine Reihe von Defaults, die
das Verhalten im Fehlerfall bestimmen. Gewöhnlich konfiguriert
man die Klasse, indem man in der Datei local.inc eine
Unterklasse von DB_Sql definiert, in der man seine eigenen
Connect-Parameter einträgt. Ändern sich die Connect-Parameter
der Anwendung, braucht man sie nur an einer Stelle in local.inc
zu ändern. Eine solche Definition kann zum Beispiel so aussehen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DB_Example&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Sql&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Host&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Database&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$User&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kk&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dies definiert eine Klasse DB_Example, die sich ganz genau wie
DB_Sql verhält, aber gegen die Datenbank test auf dem Rechner
localhost connected, indem sie sich als Benutzer kk mit einem
leeren Paßwort anmeldet. In seiner Anwendung kann man nun
Datenbankobjekte der Klasse DB_Example erzeugen und diese
Objekte wissen automatisch wo und wie sie sich anzumelden haben.&lt;/p&gt;
&lt;h3 id=&#34;abfragen-an-eine-datenbank-senden&#34;&gt;
    &lt;a href=&#34;#abfragen-an-eine-datenbank-senden&#34;&gt;
	Abfragen an eine Datenbank senden
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;DB_Sql merkt sich intern, ob bereits eine Datenbankverbindung
besteht oder ob noch eine erzeugt werden muß. Die Klasse kümmert
sich vor der Verarbeitung einer neuen Query auch darum, das alte
Anfrageergebnis freizugeben, wenn eines existiert. Für den
Entwickler bedeutet dies, daß er sich um diese Details nicht
mehr kümmern braucht, sondern nach dem Erzeugen seines
Datenbankobjektes direkt die Query absenden kann. Eine typische
Anwendung der Klasse sieht zum Beispiel so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Erzeuge ein Objekt $db
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;select * from beispieltabelle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Das Datenbankobjekt kümmert sich hier selbstständig um den
Aufbau der Verbindung zur Datenbank und um die Schritte, die je
nach Datenbank unterschiedlich zur Verarbeitung und zum Senden
der Query notwendig sind. Das Ergebnis der Query steht nun
bereit und kann entweder manuell abgeholt werden (siehe unten)
oder einer anderen Klasse übergeben werden, die etwas damit
anfangen kann - der PHPLIB-Klasse Table zum Beispiel.&lt;/p&gt;
&lt;p&gt;Verarbeitet man das Ergebnis der Query manuell, stehen einem
Datei die Funktionen next_record() zum Abholen des nächsten
Ergebnisses und die Funktionen f(spaltenname) (&amp;ldquo;feld&amp;rdquo;) und
p(spaltenname) (&amp;ldquo;print&amp;rdquo;) zum Lesen bzw. Drucken einer Spalte der
aktuellen Ergebniszeile zur Verfügung. next_record() nimmt dabei
keine Parameter und liefert ein boolean-Ergebnis, mit dem
signalisiert wird, ob noch ein Datensatz gelesen werden konnte.
f() und p() nehmen jeweils den Namen einer Spalte als Parameter
an und bearbeiten diese Spalte in der aktuellen Ergebniszeile.
f() liefert den aktuellen Spalteninhalt als Rückgabewert, p()
druckt diesen Wert und liefert kein Ergebnis. Die typische
PHPLIB-Redewendung zum Abfragen und Verarbeiten von Daten in einer
SQL-Datenbank lautet also beispielweise so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Erzeuge ein Datenbankobjekt
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;select * from beispieltabelle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Sende Query an DB
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Hier können f() und p() noch nicht verwendet werden.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;table&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;next_record&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;$wert&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Merke Dir den aktuellen Wert der Spalte &amp;#34;s&amp;#34;
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;s = %s&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$wert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dabei ist es sehr wichtig, die Funktionen f() und p() erst dann
zu verwenden, wenn nach dem Absenden der Query mindestens einmal
next_record() aufgerufen worden ist. Erst nach dem ersten Aufruf
von next_record() stehen im internen Puffer des
Datenbankobjektes Informationen zur Verfügung, die verarbeitet
werden können.&lt;/p&gt;
&lt;p&gt;Wenn die Query eine Abfrage war, also das SQL-Statement &amp;lsquo;SELECT&amp;rsquo;
enthielt, kann man mit den Funktionen num_fields() und
num_rows() die Anzahl der Spalten und Zeilen des Ergebnisses
erfragen, falls die Datenbank dies unterstützt. Bei MySQL ist
dies der Fall, aber andere Datenbanken liefern das Ergebnis
einer Query asynchron, sodaß man die Größe der Resultatmenge
nicht auf diese Weise abfragen kann: In Oracle ist es
beispielweise möglich, daß die Datenbank schon die ersten mit
next_record() abfragbaren Ergebnisse zur Verfügung stellt,
während der hintere Teil der Query noch bearbeitet wird. Die
Funktion num_rows() liefert hier immer das Ergebnis 0. In so
einem Fall muß man die Größe der Resultatmenge vorab mit einem
&amp;lsquo;SELECT count(*) FROM &amp;hellip;&amp;rsquo; manuell bestimmen, bevor man die
eigentlich Query danach absendet. Das erzeugt zum Glück nicht
übermäßig Last auf dem Datenbank-Server, weil dieser die Anfrage
und deren Ergebnis zwischenspeichert, sodaß die zweite Query im
Vergleich zur ersten sehr schnell bearbeitet werden kann.&lt;/p&gt;
&lt;p&gt;Sendet man statt einer Abfrage stattdessen Anweisungen, die
Daten modifizieren, also z.B. die SQL-Anweisungen &amp;lsquo;INSERT&amp;rsquo;,
&amp;lsquo;DELETE&amp;rsquo; oder &amp;lsquo;UPDATE&amp;rsquo;, erhält man keine Ergebnismenge, die man
abfragen könnte. Stattdessen kann mit der Funktion
affected_rows() bestimmen, wieviele Zeilen durch diese Anweisung
bearbeitet worden sind. Die Redewendung, die man an dieser
Stelle immer wieder findet, lautet dann so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// $db aus dem Beispiel oben wird weiter verwendet
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;insert into beispieltabelle ( s ) values (&amp;#39;probe&amp;#39;)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$erfolg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;affected_rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Variable $erfolg wird nun den Wert 1 haben, wenn der Wert
erfolgreich in die Tabelle eingefügt werden konnte, oder 0, wenn
das INSERT-Statement fehlgeschlagen ist.&lt;/p&gt;
&lt;h3 id=&#34;fehlerbehandlung&#34;&gt;
    &lt;a href=&#34;#fehlerbehandlung&#34;&gt;
	Fehlerbehandlung
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;DB_Sql kümmert sich, wenn dies gewünscht ist, auch automatisch
um die Behandlung von Fehlern, die durch falsches oder
fehlerhaftes SQL entstehen. Die Default-Aktion ist es, im
Fehlerfall eine Meldungsfunktion halt() aufzurufen und die
Verarbeitung dann anzuhalten. Dem Entwickler steht es dabei
frei, die Meldungsfunktion nach seinen Wünschen anzupassen.&lt;/p&gt;
&lt;p&gt;Standardmäßig belegt die Funktion halt() die Variablen Error und
Errno mit den aktuellen Fehlercodes des Datenbankinterfaces und
ruft dann die Funktion haltmsg() auf, um eine erklärende Meldung
zu drucken und die weitere Verarbeitung dann anzuhalten.&lt;/p&gt;
&lt;p&gt;Dieses Verhalten ist jedoch durch die Belegung der Variablen&lt;code&gt;Halt_On_Error&lt;/code&gt; bestimmt:
Defaultmäßig steht diese Variable auf dem Wert &amp;ldquo;yes&amp;rdquo;.
Setzt man sie auf &amp;ldquo;report&amp;rdquo;,
wird die Meldung gedruckt, die weitere Verarbeitung jedoch nicht
angehalten. Setzt man sie auf &amp;ldquo;no&amp;rdquo;, wird weder eine Meldung
gedruckt, noch wird das Programm abgebrochen. Es ist dann
Aufgabe der Anwendung, den Fehlerstatus durch die Abfrage von
Error und Errno zu kontrollieren.&lt;/p&gt;
&lt;p&gt;Alternativ kann ein Entwickler auch die Funktion haltmsg()
überschreiben, um die Ausgabe von Fehlermeldungen seinen
Wünschen anzupassen. Einige Beispiele:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Diese Klasse ignoriert Datenbankfehler.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DB_Example2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Sql&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Host&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Database&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$User&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kk&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Halt_On_Error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// keine Fehlermeldungen drucken
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;// Diese Klasse meldet Datenbankfehler in einem Logfile
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// und setzt die Verarbeitung dann fort.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Im HTML-Code erscheint nichts.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DB_Example3&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Sql&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Host&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Database&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$User&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kk&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Halt_On_Error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;report&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// haltmsg() aufrufen, aber weitermachen
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// unsere eigene Version von haltmsg)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;haltmsg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$fp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/tmp/errorlog&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a+&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;%s: error %s (%s) - %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
      &lt;span class=&#34;nx&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Y-M-D H:i:s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
      &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Errno&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$fp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fclose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$fp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;metadata&#34;&gt;
    &lt;a href=&#34;#metadata&#34;&gt;
	Metadata
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Gelegentlich ist es nützlich, einige Fragen über die vorhandenen
Datenbanktabellen stellen zu können. DB_Sql stellt dafür die
Funktionen table_names() und metadata() zur Verfügung. Beide
Funktionen geben jeweils zweidimensionale Felder als Ergebnis
zurück, die entweder manuell verarbeitet werden können oder als
Eingabe für die PHPLIB-Klasse Table verwendet werden können.&lt;/p&gt;
&lt;p&gt;Die Funktion table_names() liefert eine Liste alle Tabellen
zurück, auf die man Zugriff hat. Zu jeder Tabelle werden die
Informationen table_name, tablespace_name und database
geliefert. Ein kleines Anwendungsbeispiel zeigt, wie man auf
diese Weise eine Liste aller vorhandenen Tabellen erzeugen kann.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$tinfo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;table_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;each&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Tabelle: %s  Tablespace: %s  Datenbank: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$tinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;table_name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$tinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;tablespace_name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$tinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;database&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Funktion metadata() wird dann verwendet, um den Aufbau einer
Tabelle weiter zu untersuchen. Sie liefert Information über die
Spalten einer Tabelle, ebenfalls als zweidimensionales Feld, das
als Eingabe für die Table-Klasse verwendet werden kann. Ein
Anwendungsbeispiel mit Table könnte so aussehen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;table.inc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Table einbinden.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Datenbankobjekt
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$t&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// Table Objekt
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;heading&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;on&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// Table soll Überschriften anzeigen.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;beispieltabelle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Metadata abfragen
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;// ... und darstellen.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ausgegeben werden zu jeder Spalte der Name der Tabelle
(&amp;ldquo;table&amp;rdquo;), der Name der Spalte (&amp;ldquo;name&amp;rdquo;), der
Typ des Datenfeldes (&amp;ldquo;type&amp;rdquo;), die Länge des Feldes
(&amp;ldquo;len&amp;rdquo;) und die Flags, die für dieses Feld gesetzt
sind (&amp;ldquo;flags&amp;rdquo;).&lt;/p&gt;
&lt;h3 id=&#34;sequenzen&#34;&gt;
    &lt;a href=&#34;#sequenzen&#34;&gt;
	Sequenzen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;In Datenbankanwendungen benötigt man oft Zähler, die eindeutige
Schlüssel für Datenbanktabellen generieren. DB_Sql stellt
hierfür die Funktion nextid() zur Verfügung, die einen solchen
Wert liefert, der garantiert eindeutig und aufsteigend ist. Die
Funktion wird mit einem Zählernamen aufgerufen und liefert dann
den jeweils nächsten Wert für diesen Zähler. Die Anwendung ist
denkbar einfach.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Datenbankobjekt erzeugen.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;nextid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;beispieltabelle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$id2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;nextid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;zweite_tabelle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$query1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;insert into beispieltabelle ( id, s ) values ( &amp;#39;%s&amp;#39;, &amp;#39;%s&amp;#39; )&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$id1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$some_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$query2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;insert into zweite_tabelle ( id, t, s_id )
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;                     values ( &amp;#39;%s&amp;#39;, &amp;#39;%s&amp;#39;, &amp;#39;%s&amp;#39; )&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$id2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$another_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$id1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$query1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$query2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In diesem Beispiel werden zwei Zähler mit den Namen
beispieltabelle und zweite_tabelle geführt. Beide Zähler sind
voneinander unabhängig. Das Beispiel generiert eine Einfügung in
die Tabelle beispieltabelle mit dem gleichnamigen Zählerwert. In
einer zweiten Einfügung in die Tabelle zweite_tablle wird ein
Eintrag gemacht, der unter seiner eigenen ID abgespeichert wird
und zugleich auf einen anderen Eintrag in der Tabelle
beispieltabelle verweist.&lt;/p&gt;
&lt;h3 id=&#34;locking&#34;&gt;
    &lt;a href=&#34;#locking&#34;&gt;
	Locking
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die großen Datenbanken wie Oracle und Sybase haben umfangreiche
Mechanismen, um Datensätze gegen gleichzeitigen Zugriff durch
mehrere Programme zu sperren. Bei kleinen Datenbankservern wie
MySQL muß man dies dagegen selbst machen. Eine sehr einfache,
aber auch wenig effiziente Methode ist die Sperrung der ganzen
Tabelle, entweder um darin zu schreiben oder um aus ihr zu
lesen. DB_Sql stellt die Funktionen lock() und unlock() zur
Verfügung, um mit Ihnen Sperren auf ganze Tabellen zu setzen.&lt;/p&gt;
&lt;p&gt;Die Funktion lock() kann auf zwei Arten verwendet werden.
Entweder übergibt man Ihr einen Tabellennamen und einen
Sperrmodus (Beispiel: $db-&amp;gt;lock(&amp;ldquo;beispieltabelle&amp;rdquo;, &amp;ldquo;write&amp;rdquo;)),
dann setzt sie ein Lock im entsprechenden Modus auf diese
Tabelle oder man übergibt Ihr einen Hash von Tabellennamen und
Modi, dann werden die entsprechenden Locks gesetzt. Das Beispiel
zeigt, wie es geht.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$lock_tables&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;beispieltabelle&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;write&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;zweite_tabelle&amp;#34;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;read&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;lock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$lock_tables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Sperren auf diese Tabellen bleiben bestehen, bis
$db-&amp;gt;unlock() aufgerufen wird. Der Aufruf löscht alle
bestehenden Sperren; es ist nicht möglich, einzelne Locks
aufzugeben.&lt;/p&gt;
&lt;h2 id=&#34;sessions&#34;&gt;
    &lt;a href=&#34;#sessions&#34;&gt;
	Sessions
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;sessions-konfigurieren&#34;&gt;
    &lt;a href=&#34;#sessions-konfigurieren&#34;&gt;
	Sessions konfigurieren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Eine Session ist in PHPLIB ein Weg, Variablen zu haben, die
automatisch von einer PHP-Seite zur nächsten mitgeschleppt
werden. Dazu wird dem Browser des Anwenders eine Kennung
verpaßt, die dieser bei jedem Zugriff an die Anwendung zurück
übermittelt - entweder in Form eines Cookie oder in Form eines
GET-Parameters, der an jede URL angehängt werden muß, die der
Anwender aufrufen kann. Mit Hilfe dieser Kennung kann PHPLIB nun
die mitzuschleppenden Variablen am Ende einer Seite abspeichern
und beim Zugriff auf die Folgeseite wieder laden.&lt;/p&gt;
&lt;p&gt;Um mit Sessions zu arbeiten, muß man in seiner local.inc-Datei
eine Unterklasse der Klasse Session aus PHPLIB erzeugen. In
dieser Klasse wird wieder mit einer Reihe von Parametern
festgelegt, auf welche Weise die Variablen zu speichern sind und
auf welche Weise die Kennung weitergegeben wird. Wie schon bei
der Datenbank-Klasse geschieht dies im wesentlichen, indem man
eine Reihe von vordefinierten Variablen mit den gewünschten
Werten überschreibt. Eine Besonderheit besteht darin, daß man
(ab PHPLIB-7) der Session-Klasse mit einer Hilfsklasse (CT_SQL)
mitteilen muß, wo und auf welche Weise die Session-Daten zu
speichern sind.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  +---------+           enthält Code zur Verwaltung von Session-IDs,
  | Session |           zur Serialisierung von Variablen und
  +---------+           zum Abräumen alter Sessions
         |
         | benutzt
         v
     +--------+         enthält SQL-Queries, die Session-Variablen
     | CT_Sql |         laden und speichern, User authentisieren
     +--------+         und so weiter.
         |
         |  benutzt
         v
        +--------+      übernimmt die Kommunikation mit der Datenbank,
        | DB_Sql |      Fehlerbehandlung und so weiter.
        +--------+
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Abbildung 1:&lt;/strong&gt; &lt;em&gt;Beziehung zwischen den Klassen DB_Sql, CT_Sql und Session, Konfiguration zur Arbeit mit einer SQL-Datenbank&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Diese Hilfsklasse enthält die benötigten Anweisungen, um
Variablen in eine Datenbank (oder eine DBM-Datei, oder ein
shared-memory Segment, oder etwas anderes) zu speichern und von
dort zu lesen, um Benutzer zu authentisieren und weitere
Zugriffe. Die Abkürzung &amp;ldquo;CT&amp;rdquo; steht dabei für &amp;ldquo;Container&amp;rdquo;, die
Klasse implementiert einen sogenannten Storage Container, der
alle Speicherzugriffe für eine andere Klasse enthält. Durch die
Auswahl eines anderen Storage Containers kann man Session dazu
bringen, Variablen nicht in einer SQL-Datenbank, sondern auf
einem anderen Speichermedium abzulegen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;  +---------+                  +-----------------+
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;  | Session |-- abgeleitet --&amp;gt; | Example_Session |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;  +---------+                  +-----------------+
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;         |                                     |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;         | benutzt                             | benutzt
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;         v                                     v
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;     +--------+                   +----------------+
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;     | CT_Sql | -- abgeleitet --&amp;gt; | Example_CT_Sql |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;     +--------+                   +----------------+
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;         |                                       |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;         |  benutzt                              | benutzt
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;         v                                       v
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;        +--------+                   +------------+
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;        | DB_Sql | -- abgeleitet --&amp;gt; | DB_Example |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;        +--------+                   +------------+
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 2:&lt;/strong&gt; &lt;em&gt;Klassensystem nach dem Einlesen von local.inc.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Durch die Definitionen in local.inc entstehen aus den
Standardklassen der Bibliothek angepaßte Unterklassen, die für
die spezielle Anwendung und Installation konfiguriert sind. Eine
PHPLIB-Anwendung verwendet immer diese angepaßten Unterklassen
aus local.inc, niemals die Standardklassen aus der Bibliothek.&lt;/p&gt;
&lt;p&gt;In local.inc findet man also nach der Definition der Klasse für
den Datenbankzugriff (DB_Example, siehe oben) Definitionen für
den Storage Container und die Session-Klasse. Die Daten, die
konfiguriert werden müssen, sind im wesentlichen die Namen der
Klassen, so wie sie sich untereinander benutzen, d.h. man muß
dem Storage Container den Namen der Datenbank-Klasse mitteilen
und der Session-Klasse den Namen des Storage Containers, der
verwendet werden soll.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Example_CT_Sql&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CT_Sql&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// Name der Datenbankklasse, die zu verwenden ist.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$database_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;DB_Example&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Name der SQL-Tabelle, die zu verwenden ist.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$database_table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;active_sessions&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;                              

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Example_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// Muß vorhanden sein, damit die Klasse gespeichert werden kann.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Muß für jede Installation anders sein
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hocuspocus&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Name der Storage Container-Klasse, die zu verwenden ist.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Im Storage Container wird durch den Namen der Datenbank-Klasse
implizit klargemacht, an welchen Server mit welchem
Benutzernamen und welchem Paßwort connected werden soll.
Außerdem kann konfiguriert werden, wie der Name der Tabelle
lautet, in dem später einmal die Session-Daten gespeichert
werden sollen. Damit dies mit den create_database-Definitionen
aus dem stuff/-Verzeichnis zusammenspielt, sollte dieser Name
active_sessions sein.&lt;/p&gt;
&lt;p&gt;In der Session-Klasse ist vor allen Dingen der Name des Storage
Containers zu definieren, der verwendet werden soll, hier also
Example_CT_Sql. In der Variablen magic steht außerdem ein
String, der bei der Generierung der Session-IDs verwendung
findet, und der bei jeder Installation von PHPLIB auf einen
anderen Wert gesetzt werden sollte, damit die Session-IDs
schwerer zu fälschen sind. Die Variable classname wird intern
von PHPLIB verwendet, um Objekte zu laden und zu speichern und
sollte den genauen Namen der Klasse selbst enthalten, hier also
Example_Session.&lt;/p&gt;
&lt;p&gt;PHPLIB-Sessions haben nun zwar noch eine ganze Menge Knöpfe, an
denen man drehen und einstellen kann, aber die Session-Klasse
ist nun schon benutzbar. Eine Seite mit Session-Variablen sieht
wie nachstehend gezeigt aus.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// Laden der Variablen aus der Datenbank.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Die globale Variable $s ist nun bei der Session registriert.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// $s wird auf einen definierten Startwert gesetzt, wenn die
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// Variable noch nicht existiert.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; 
    &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// $s hochzählen.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
 &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;head&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;title&amp;gt;Eine Testseite&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;h1&amp;gt;Eine Testseite&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  Die Variable $s hat den Wert &amp;lt;?php print $s ?&amp;gt;.
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  // Zurückspeichern der Variablen in die Datenbank
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  page_close();
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; ?&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Durch das auto_prepend_file, das in der php3.ini konfiguriert
wird, wird dieser Datei der Inhalt von prepend.php3
vorangestellt.&lt;/p&gt;
&lt;p&gt;prepend.php3 lädt jetzt alle weiteren Dateien,
die für die Ausführung dieser Seite benötigt werden, d.h. es
bindet db_mysql.inc, session.inc, page.inc, local.inc und ggf.
noch weitere, hier noch nicht benutzte Dateien ein. Dadurch sind
am Anfang dieses Programmes eine Reihe von Funktionen und
Klassen definiert, die zu PHPLIB gehören.&lt;/p&gt;
&lt;p&gt;Das Beispielprogramm
selbst verwendet dann die vordefinierten PHPLIB-Funktionen
page_open() und page_close(), um Variablen am Anfang der Seite
einzulesen und am Ende der Seite wieder abzuspeichern. Der
Funktion page_open() wird dabei mitgeteilt, daß diese Seite die
Session-Funktionalität von PHPLIB verwenden möchte und zwar wie
sie in der Klasse Example_Session konfiguriert ist.&lt;/p&gt;
&lt;p&gt;Das Resultat
ist ein globales Example_Session Objekt mit dem Namen $sess. Man
kann jetzt Funktionen von Example_Session (also Funktionen von
Session) aufrufen, um Variablennamen bei der Session zu
registrieren.&lt;/p&gt;
&lt;p&gt;Im Beispielprogramm wird dies durch den Aufruf
$sess-&amp;gt;register(&amp;ldquo;s&amp;rdquo;) gemacht, der die globale Variable mit dem
Namen &amp;ldquo;s&amp;rdquo; bei der Session anmeldet. Fortan wird bei jedem Aufruf
von page_close() der aktuelle Typ und Wert von $s gerettet und
bei einem Aufruf von page_open() wieder hergestellt.&lt;/p&gt;
&lt;p&gt;Sobald der
Name &amp;ldquo;s&amp;rdquo; erst einmal bei einer Session registriert ist, bleibt
er solange Bestandteil der Session, bis er mit
$sess-&amp;gt;unregister(&amp;ldquo;s&amp;rdquo;) wieder abgemeldet wird. Andererseits
schadet es nichts, einen Namen mehr als einmal bei einer Session
zu registrieren. Die Beispielseite merkt sich nun also den Wert
von $s und kann ihn so von einem Aufruf der Seite zum nächsten
hochzählen.&lt;/p&gt;
&lt;p&gt;Wenn man die Seite aufruft und seinen Browser so eingestellt
hat, daß er beim Setzen von Cookies eine Warnung ausgibt, dann
wird man feststellen, daß der Webbrowser versucht, einen Cookie
mit dem Namen &amp;ldquo;Example_Session&amp;rdquo; auf irgendeinen wilden Wert zu
setzen. Dieser Cookie identifiziert den Browser eindeutig und in
der Tabelle active_sessions in der Datenbank werden unter dem
Wert des Cookies die Variablen abgespeichert, die zu dieser
Session gehören (aus technischen Gründen sind die Werte dort mit
base64_encode() codiert abgespeichert, aber man kann sich die
Innereien von PHPLIB ansehen, wenn man die Inhalte von
active_sessions.val mit base64_code() decodiert).&lt;/p&gt;
&lt;p&gt;Jeder Anwender
hat also seinen eigenen Cookie mit einem eindeutigen Wert und in
der Datenbank seinen eigenen Satz Variablen, der zu diesem
Cookie gehört. PHPLIB verwendet sogenannte Session-Cookies, d.h.
die Cookies werden im Browser ohne eine Zeitbegrenzung gesetzt,
aber der Browser speichert die Cookies niemals in einer
cookies.txt-Datei ab. Die Session &amp;ldquo;lebt&amp;rdquo; also solange, wie der
Browser des Anwenders läuft. Beendet der Anwender seinen
Browser, ist der Cookie gelöscht und die Session verloren.&lt;/p&gt;
&lt;p&gt;Man kann dies ändern, indem man die Variable $lifetime in seiner
Session definiert. Die Variable gibt an, wieviele Minuten lang
der Cookie mit der Session-ID gelten soll. Setzt man die
Variable also auf den Wert 1440, dann wird die Anwendung
versuchen, einen Cookie mit einer Lebensdauer von einem Tag zu
setzen. In der Praxis hat sich dies nicht als empfehlenswert
erwiesen, daher verwendet PHPLIB standardmäßig Session-Cookies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Lifetime_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;GET_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sonstwas&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Session-ID Cookie soll einen Tag lang gehalten werden.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$lifetime&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1440&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// das sind Minuten.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sessions-mit-get-mode&#34;&gt;
    &lt;a href=&#34;#sessions-mit-get-mode&#34;&gt;
	Sessions mit GET-Mode
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Einige Anwender sind durch die Medien zu einer regelrechten
Cookie-Paranoia erzogen worden und haben ihrem Browser verboten,
Cookies anzunehmen oder zu senden. PHPLIB kann in diesem Fall
nicht funktionieren.&lt;/p&gt;
&lt;p&gt;Um das Problem zu umgehen kennt PHPLIB den
sogenannten GET-Mode. In diesem Fall wird die Session-ID nicht
per Cookie zur Anwendung übertragen, sondern als GET-Parameter
von Seite zu Seite als Bestandteil der URL durchgeschleift. Man
überredet PHPLIB dazu, GET-Mode zu verwenden, indem man den
entsprechenden Parameter in der Session-Klasse setzt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;GET_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;GET_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sonstwas&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// unterschiedslos GET-Mode verwenden
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;get&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Fallback_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Fallback_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;was anderes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Cookies probieren, automatisch auf GET-Mode zurückschalten
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$mode&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cookie&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$fallback_mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;get&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Setzt man die Variable $mode auf &amp;ldquo;get&amp;rdquo;, verwendet die Anwendung
immer GET-Parameter, um die Session-ID von Seite zu Seite
weiterzugeben. Dies hat jedoch eine Reihe von Nachteilen: Zum
Beispiel wird die Session-ID dadurch Bestandteil von Bookmarks
oder sie wird womöglich sogar von irgendwelchen Redakteuren in
Zeitschriften abgedruckt. Auch geht die Session verloren, wenn
ein Anwender in seinem Browser einmal schnell eine andere Seite
aufruft und dann zu unserer Anwendung zurückkehrt - dies ist bei
Cookie-Mode nicht der Fall.&lt;/p&gt;
&lt;p&gt;Daher kann man PHPLIB auch so konfigurieren, wie in der Klasse
Fallback_Session gezeigt. In diesem Fall versucht PHPLIB beim
Start der Session sowohl Cookies als auch GET-Parameter zu
benutzen. Ist auf den Folgeseiten der Cookie gesetzt, wird
weiter Cookie-Mode verwendet. Hat der Anwender jedoch die
Annahme von Cookies verweigert, schaltet PHPLIB automatisch auf
GET-Parameter um.&lt;/p&gt;
&lt;p&gt;In beiden Fällen muß man seine Anwendung jedoch speziell
präparieren, damit die Session-ID in der URL weitergereicht
wird. Genaugenommen muß man alle URLs in seiner Anwendung durch
PHPLIB erzeugen lassen, anstatt sie einfach ins HTML zu
schreiben, d.h. man muß statt&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/index.html&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;zurück&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zur&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Hauptseite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;?php &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$sess-&amp;gt;purl&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;(&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;)&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;zurück&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zur&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Hauptseite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;schreiben, und zwar für &lt;em&gt;alle&lt;/em&gt; A, FRAME und FORM-Tags. Die
Funktion $sess-&amp;gt;url() liefert in Abhängigkeit von der aktuellen
Betriebsart eine passende URL mit Session-ID für die angegebene
Parameter-URL zurück. Die Funktion purl() macht genau dasselbe,
druckt diese URL aber gleich aus. Das bedeutet, wenn der
Anwender Cookies eingeschaltet hat, wird die Funktion
tatsächlich die URL &amp;ldquo;/index.html&amp;rdquo; ausgeben. Ist stattdessen aber
die Annahme von Cookies beim Anwender blockiert, dann wird von
purl() stattdessen die URL &amp;ldquo;/index.html?Fallback_Session=&amp;hellip;.&amp;rdquo;
erzeugt.&lt;/p&gt;
&lt;p&gt;Wie man sieht, ist dieses Verfahren sehr aufwendig in der
Codierung: Man muß jedes Link und jede URL in seiner Anwendung
manuell anfassen und auf PHP umstellen. Dies ist leider nicht zu
ändern, daß die Sprache PHP3 normales HTML niemals anfaßt,
sondern ausschließlich PHP-Sektionen interpretiert. Wenn man
sich dennoch entschließt, dieses Verfahren anzuwenden, sollte
man sich auf jeden Fall für die Fallback-Lösung entscheiden,
weil diese für die Anwender, die Cookies eingeschaltet haben,
wesentlich bequemer und betriebssicherer ist.&lt;/p&gt;
&lt;h3 id=&#34;sessions-initialisieren&#34;&gt;
    &lt;a href=&#34;#sessions-initialisieren&#34;&gt;
	Sessions initialisieren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Beim Start einer Anwendung, also wenn eine neue Session erzeugt
wird, ist es oftmals notwendig, eine Reihe von Variablen mit
passenden Startwerten zu belegen.&lt;/p&gt;
&lt;p&gt;PHPLIB sieht dafür die
Variable $auto_init vor, mit der man den Namen einer
Include-Datei festlegen kann, die beim Start einer Session
geladen und ausgeführt wird. Per Konvention wird diese Datei in
der Regel &amp;ldquo;setup.inc&amp;rdquo; genannt. Anweisungen in dieser Datei
werden im Kontext einer Funktion ausgeführt, daher müssen
globale Variablen, die vorbelegt werden sollen, mittels der
PHP-Anweisung &amp;ldquo;global&amp;rdquo; vorher exportiert werden.&lt;/p&gt;
&lt;p&gt;Das Beispiel
mit Example_Session und der globalen Variablen $s (siehe oben)
läßt sich damit auch wie nachstehend realisieren.&lt;/p&gt;
&lt;p&gt;In local.inc:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Beispiel_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Beispiel_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ein weiterer String&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Diese Datei soll beim Session-Start geladen werden
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$auto_init&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;setup.inc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In setup.inc:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// $s als globale Variable deklarieren
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// $s mit einem Startwert vorbelegen.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Den Namen von $s registrieren
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Beispielseite:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Beispiel_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
 &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;head&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;title&amp;gt;Überarbeitete Beispielseite&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;h1&amp;gt;Überarbeitete Beispielseite&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  Der Wert von $s ist &amp;lt;?php print $s ?&amp;gt;.
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  page_close();
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; ?&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dieses Feature ist vor allen Dingen dann interessant, wenn eine
Anwendung aus einer Vielzahl von Seiten besteht und keine
ausdrückliche Startseite besteht, d.h. wenn Anwender irgendeine
Seite der Anwendung aufrufen können, um sie zu starten.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;setup.inc&amp;rdquo; wird in solchen Situationen in jedem Fall aufgerufen
und sorgt für eine korrekte Initialisierung der Anwendung.&lt;/p&gt;
&lt;h3 id=&#34;caching-kontrollieren&#34;&gt;
    &lt;a href=&#34;#caching-kontrollieren&#34;&gt;
	Caching kontrollieren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;PHPLIB-Seiten sind meistens veränderlich und dürfen daher von
einem öffentlichen Cache wie z.B. dem Squid-Cache der Firma oder
des Providers nicht gespeichert werden. Wenn das nicht so wäre,
könnte es sein, daß andere Anwender Seiten aus diesem Cache
bekommen, die Inhalte enthalten, die nicht für sie bestimmt
waren. Anders sieht es mit privaten Caches aus, etwa dem Cache,
den Netscape für jeden Anwender getrennt anlegt. In vielen
Anwendungen ist es zulässig, daß Seiten hier abgelegt werden, um
den Bildaufbau zu beschleunigen. Dies ist zugleich auch die
Default-Einstellung von PHPLIB (ab Version 7, Version 6.x verbot
das Caching von Seiten vollständig).&lt;/p&gt;
&lt;p&gt;Mittels der Variablen $allowcache und $allowcache_expire kann
man festlegen, wie PHPLIB-erzeugte Seiten in Caches gelagert
werden dürfen und, falls sie gecached werden dürfen, wie lange
sie im Cache verbleiben können. Für die Variable $allowcache
sind die drei Werte &amp;ldquo;public&amp;rdquo;, &amp;ldquo;private&amp;rdquo; (der Default) und &amp;ldquo;no&amp;rdquo;
zugelassen. Mit der Einstellung &amp;ldquo;public&amp;rdquo; sendet PHPLIB eine
entsprechende Cache-Control-Zeile als Header, die die
Speicherung der Seite in öffentliches Caches zuläßt; mit der
Einstellung &amp;ldquo;private&amp;rdquo; ist nur die Speicherung in privaten Caches
zugelassen. In beiden Fällen wird dem Cache die Speicherung der
Seite für $allowcache_expire Minuten gestattet, der Defaultwert
ist hier 1440 Minuten, also ein Tag.&lt;/p&gt;
&lt;p&gt;Setzt man den Wert von allowcache auf &amp;ldquo;no&amp;rdquo;, erzeugt PHPLIB
$Headerzeilen, die jegliches Caching der Seite - wo auch immer -
verbieten. Netscape fordert die Seite hier schon dann neu an,
wenn man nur die Größe des Browserfensters verändert.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Nocache_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Nocache_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;schon wieder ein String&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Caching verbieten
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$allowcache&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sessions-und-ein-warenkorb&#34;&gt;
    &lt;a href=&#34;#sessions-und-ein-warenkorb&#34;&gt;
	Sessions und ein Warenkorb
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Mit Hilfe der Sessions und der Klasse Cart von PHPLIB kann man
sich recht einfach einen Warenkorb für einen Webshop gestalten.
Die Klasse Cart ist in der Include-Datei &amp;ldquo;cart.inc&amp;rdquo; von PHPLIB
definiert. Damit man sie verwenden kann, muß man sie auf seinen
Webseiten einbinden. Zweckmäßigerweise geschieht dies indem man
in der Datei prepend.php3 an der markierten Stelle die Anweisung
&amp;lsquo;require(&amp;ldquo;cart.inc&amp;rdquo;)&amp;rsquo; einfügt.&lt;/p&gt;
&lt;p&gt;Um einen Warenkorb verwenden zu können, muß man sich beim Start
einer Session einen definieren. Am einfachsten geschieht dies
mit dem bereits erwähnten auto_init-Feature der Session-Klasse.&lt;/p&gt;
&lt;p&gt;In prepend.php3:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gekürzt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;/* Additional require statements go below this line */&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_PHPLIB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;libdir&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;util.inc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;      &lt;span class=&#34;cm&#34;&gt;/* General utility functions */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cart.inc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// eingefügt
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;/* Additional require statements go before this line */&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gekürzt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In local.inc:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Definition&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;der&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Datenbank&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;und&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Storage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Containerklasse&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gekürzt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Shop_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Shop_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kaufmich&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$auto_init&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;setup.inc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cookie&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;My_Cart&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Cart&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// hier Funktionsdefinitionen einfügen, wie weiter unten
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// im Text gezeigt.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In setup.inc:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;is_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$cart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$cart&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;My_Cart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cart&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Der Warenkorb aus PHPLIB ist sehr einfach gehalten und kann
Paare aus Artikelnummern und Anzahlen speichern. Mit Hilfe der
Funktionen $cart-&amp;gt;add_item($artikelnummer, $anzahl) kann man
$anzahl viele Artikel mit der genannten Nummer zum Warenkorb
hinzufügen, mit $cart-&amp;gt;remove_item($artikelnummer, $anzahl)
wieder entfernen. Mit Hilfe der Funktion
$cart-&amp;gt;set_item($artikelnummer, $anzahl) kann man die Anzahl der
Artikel mit der genannten Nummer im Warenkorb direkt setzen. Der
Warenkorb ist dabei intelligent genug, einen Artikel aus dem
Warenkorb zu entfernen, wenn die Anzahl der Artikel auf 0 sinkt.&lt;/p&gt;
&lt;p&gt;Den Inhalt des gesamten Warenkorbes kann man sich mit Hilfe der
Funktion $cart-&amp;gt;show_all() anzeigen lassen. Der Cart ruft dabei
intern zunächst die Funktion $cart-&amp;gt;show_cart_open() auf, um
dann für jeden Artikel im Warenkorb
$cart-&amp;gt;show_cart_item($artikelnummer, $anzahl) einmal
aufzurufen. Am Ende wird die Anzeige mit einem Aufruf von
$cart-&amp;gt;show_cart_close() beendet. Ist der Warenkorb leer, wird
stattdessen nur die Funktion $cart-&amp;gt;show_cart_empty()
aufgerufen.&lt;/p&gt;
&lt;p&gt;In Cart sind diese Funktionen nur mit der notwendigsten
Anzeigelogik ausgestattet, um den Inhalt des Warenkorbes
darzustellen. In einer konkreten Anwendung wird man daher die
vier Anzeigefunktionen mit eigenem Code überschreiben wollen,
der in der Definition von My_Cart in local.inc eingefügt werden
muß.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;nx&#34;&gt;cart&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;My_Cart&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Cart&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// Gesamtwert des Warenkorbes
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Paare Artikelnummer =&amp;gt; Preis
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$preis&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;0815&amp;#34;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;17.85&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;4711&amp;#34;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;21.30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;64738&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;9.99&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Paare Artikelnummer =&amp;gt; Beschreibung
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$beschreibung&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;0815&amp;#34;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Artikel 1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;4711&amp;#34;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Artikel 2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;64738&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Artikel 3&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Eine Tabelle eröffnen und eine Summe auf 0 setzen.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;show_cart_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;table&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Gesamtsumme drucken und Tabelle abschließen.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;show_cart_close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;lt;tr&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;  &amp;lt;td&amp;gt;Gesamtsumme:&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;  &amp;lt;td&amp;gt;%8.2f&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;summe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Einen einzelnen Artikel drucken.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// Summe mitführen.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;show_cart_item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$art&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$anz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;preis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$art&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$anz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;lt;tr&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;  &amp;lt;td&amp;gt;%s&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;beschreibung&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;art&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;  &amp;lt;td&amp;gt;%8.2f DM (%d Stück zu %8.2f DM)&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
     &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;preis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$art&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$anz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$anz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;preis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$art&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In einer konkreten Anwendung wird man die Beschreibungen und
Preise der Artikel jedoch auch nicht hart codieren, sondern mit
Hilfe der Artikelnummer aus einer Datenbank abfragen.&lt;/p&gt;
&lt;h2 id=&#34;seiten-mit-login&#34;&gt;
    &lt;a href=&#34;#seiten-mit-login&#34;&gt;
	Seiten mit Login
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Sessions geben dem Entwickler Webseiten mit
&amp;ldquo;Erinnerungsvermögen&amp;rdquo;. Sobald man dieses hat, kann man auf der
Grundlage dieser Eigenschaft weitere Features realisieren.&lt;/p&gt;
&lt;p&gt;Man kann sich zum Beispiel daran erinnern, ob ein Anwender im Rahmen
dieser Session schon einmal einen Benutzernamen und ein Paßwort
angegeben hat und wann das der Fall war. Dieses Feature nennt
man Authentication, Authentifizierung, und PHPLIB bietet mit der
Klasse Auth eine eigene Implementierung davon an.&lt;/p&gt;
&lt;p&gt;PHPLIB Authentifizierung leistet vergleichbares wie HTTP
Authentifzierung, hat jedoch weder in der Implementierung noch
in der Konfigurierung etwas damit zu tun. Warum also eine eigene
Lösung?&lt;/p&gt;
&lt;p&gt;HTTP Authentifizierung sind die kleinen grauen Login-Fenster mit
Username und Paßwort, die auf Paßwortgeschützten Webseiten
aufgehen. Sie haben gegenüber der Authentifizierung von PHPLIB
eine Reihe von Nachteilen. PHPLIB Auth hat im einzelnen die
folgenden Vorteile:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PHPLIB Authentifizierung hat ein kontrolliertes
  Logout-Verfahren.
&lt;li&gt;Dieses Logoutverfahren kann auch automatisch ablaufen: Wenn
  ein Anwender eine gewisse Zeit lang keine Seiten abgerufen
  hat, ist er automatisch ausgeloggt.
&lt;li&gt;Der Loginschirm ist kein kleiner grauer Requester, sondern
  eine reguläre HTML-Seite. Dem Entwickler stehen also alle
  Gestaltungsmöglichkeiten zur Verfügung: Ein Loginschirm kann
  nicht nur ein Firmenlogo oder andere Grafik enthalten, sondern
  auch eine Benutzerführung und Online-Hilfe.
&lt;li&gt;Die Authentifizierung erfolgt gegen eine beliebige
  Datenquelle, zum Beispiel einen SMB-Server (NT
  Domaincontroller), einen LDAP-Server oder, wie in der
  Standarddistribution von PHPLIB gezeigt, gegen eine
  Datenbanktabelle. Da die Authentifierung durch eine
  benutzerdefinierte PHP3-Funktion erfolgt, kann sie
  vollkommen frei den Bedürfnissen angepaßt werden.
&lt;li&gt;Die Authentifizierung erfolgt seitenweise, nicht für
  Teilbäume von Seiten.
&lt;li&gt;Es ist möglich, Authentisierung mit Registrierung zu
  erzeugen: Anwender, die noch kein Paßwort haben, können
  ein Formular mit Benutzerdaten ausfüllen und die Anwendung
  legt den Benutzer nach Bedarf und mit Standardrechten an.
&lt;li&gt;PHPLIB Auth funktioniert mit CGI PHP und mit mod_php, während
  durch PHP gesteuerte HTTP Authentifizierung nur mit mod_php
  korrekt funktioniert.
&lt;li&gt;PHPLIB Auth ist direkt mit einem Zugriffrechteschema
  gekoppelt, sodaß man ganze Seiten oder Teile von Seiten nur
  für Benutzer mit den passenden Rechten sichtbar werden lassen
  kann.
&lt;/ul&gt;
&lt;h3 id=&#34;login-konfigurieren&#34;&gt;
    &lt;a href=&#34;#login-konfigurieren&#34;&gt;
	Login konfigurieren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;In PHPLIB erzeugt man Seiten mit einem Login - wie könnte es
anders sein - indem man eine Unterklasse der PHPLIB-Klasse Auth
erzeugt. Eine Beispiel-Unterklasse ist in der Datei local.inc in
der Distribution bereits enthalten. Diese Unterklasse verwendet
eine Datenbanktabelle auth_user, um Loginnamen und Paßworte zu
speichern.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------+                   +--------------+
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;| Auth | -- abgeleitet --&amp;gt; | Example_Auth |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;+------+                   +--------------+
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;     |                                   |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;     |  benutzt                          | benutzt
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;     v                                   v
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;    +--------+                   +------------+
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;    | DB_Sql | -- abgeleitet --&amp;gt; | DB_Example |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;    +--------+                   +------------+
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 3:&lt;/strong&gt; &lt;em&gt;Klassenschema von Auth für den Gebrauch mit
local.inc.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Eine Unterklasse von Auth muß mindestens die Funktionen
auth_loginform() und auth_validatelogin() definieren. Die
Funktion auth_loginform() wird aufgerufen, um den
Loginbildschirm selbst zu malen. Dieser Loginbildschirm muß alle
benötigten Eingabefelder enthalten, damit der Benutzer sich
identifizieren und authentisieren kann.&lt;/p&gt;
&lt;p&gt;In der Regel wird der
Loginschirm also ein Feld für die Eingabe des Benutzernamens und
ein Feld für die Eingabe eines Paßwortes enthalten. Wird dieses
Formular abgeschickt, werden seine Inhalte auf dem Server der
Funktion auth_validatelogin() bereitgestellt. Diese Funktion
kann mit den Eingabedaten aus dem Formular beliebige Dinge
anstellen, um die Identität des Benutzers zu bestätigen.&lt;/p&gt;
&lt;p&gt;Die Auth-Klasse erwartet, daß die Funktion den Wert &amp;ldquo;false&amp;rdquo; liefert,
falls das Login nicht stimmig ist, oder eine gültige User-ID,
falls das Login korrekt ist. Wie die Funktion die User-ID
ermittelt und welcher anderen Hilfsmittel sie sich dazu bedient
(zum Beispiel einer Datenbankverbindung durch ein
Datenbankobjekt), ist der Auth-Klasse selbst vollkommen egal.&lt;/p&gt;
&lt;p&gt;Das Standardbeispiel einer Unterklasse von Auth geht davon aus,
daß es eine Tabelle auth_users in der Datenbank gibt, die den
nachstehend gezeigten Aufbau hat. Zu jedem Benutzer werden ein
Benutzername username und das dazugehörige Paßwort password
gespeichert. Außerdem gehören zu einem Benutzer noch die
gewünschten Berechtigungen perms und die interne User-ID uid,
mit der die Auth-Klasse arbeitet.&lt;/p&gt;
&lt;p&gt;Im stuff-Verzeichnis der
PHPLIB-Distribution befinden sich create_database.*-Dateien für
die unterschiedlichen vom PHPLIB unterstützten Datenbanken, mit
denen man diese Tabellen leicht anlegen kann.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;+----------+--------------+------+-----+---------+-------+
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;| Field    | Type         | Null | Key | Default | Extra |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;+----------+--------------+------+-----+---------+-------+
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;| uid      | varchar(32)  |      | PRI |         |       |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;| username | varchar(32)  |      | UNI |         |       |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;| password | varchar(32)  |      |     |         |       |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;| perms    | varchar(255) | YES  |     | NULL    |       |
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;+----------+--------------+------+-----+---------+-------+
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;4 rows in set (0.00 sec)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 4:&lt;/strong&gt; &lt;em&gt;Aufbau der Tabelle auth_users&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;PHPLIB arbeitet intern immer mit User-IDs, weil diese ein
festgelegtes Format haben (dasselbe die Session_IDs). Diese
User-IDs werden ausschließlich intern verwendet und sind für den
Anwender niemals sichtbar. Nach außen präsentiert die Anwendung
immer die menschenlesbare Benutzeridentifikation, hier also den
Benutzernamen username. Da PHPLIB jedoch mit beliebigen
Loginverfahren arbeiten können soll, darf die Bibliothek keine
Annahmen über die menschenlesbare Benutzeridentifikation machen  -
statt eines einzelnen Feldes username ist es genauso möglich,
ein Tripel (vorname, nachname, telefon) zu definieren und zu
verlangen, daß diese drei Werte statt eines Benutzernamens
eingegeben werden. Die auth_user-Tabelle dient dann dazu, diese
externe Darstellung einer Benutzeridentität in das festgelegte
interne Format, die uid, zu übersetzen.&lt;/p&gt;
&lt;p&gt;Eine eigene Auth-Klasse beginnt damit, daß sie Auth erweitert.
Es können einige Variablen vorbelegt werden, die das Verhalten
von Auth steuern, aber im einfachsten Fall genügt die
nachstehende Definition:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Example_Auth&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Auth&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Name der Klasse
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$lifetime&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;# Nach 15 Minuten Inaktivität wird der 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                                   &lt;span class=&#34;c1&#34;&gt;# User automatisch ausgeloggt.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;# Name der Klasse und Tabelle für den Datenbankzugriff
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$database_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;DB_Example&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$database_table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth_user&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;auth_loginform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;loginform.ihtml&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;auth_validatelogin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Siehe weiter unten.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Funktion auth_loginform(), die der Entwickler selber
schreiben muß, hat die Aufgabe, den Loginschirm zu zeichnen. Wir
tun dies hier im Beispiel einfach dadurch, daß wir die Datei
loginform.ihtml aus dem Includeverzeichnis einbinden. Die Datei
enthält ein gewöhnliches HTML-Formular, das in einer Tabelle
zwei Eingabefelder für einen Usernamen und ein Paßwort zeichnet.&lt;/p&gt;
&lt;p&gt;Das Formular übergibt das Ergebnis der Eingabe in den globalen
Variablen $username und $password. Nach der Eingabe wird die
Funktion auth_validatelogin() von der Auth-Klasse aufgerufen, um
die Eingabe zu prüfen. Da es sich bei den beiden Variablen um
globale Variablen handelt, muß die Funktion auth_validatelogin()
diese Werte zunächst einmal importieren. Sie kann dann in der
Datenbank nachschlagen, ob es einen Wert in der Datenbank gibt,
bei dem sowohl der Username als auch das Paßwort zutreffend
sind.&lt;/p&gt;
&lt;p&gt;Falls ja, wird die zugehörige User-ID an die Auth-Klasse
zurückgegeben. Andernfalls wird mit einem false ein Fehlschlag
signalisiert. Die Funktion auth_validatelogin() sieht
entsprechend aus wie unten gezeigt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;auth_validatelogin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;c1&#34;&gt;# $username merken, damit er im loginform wieder zur Verfügung steht.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;auth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;uname&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Default-Ergebnis: kein Login möglich
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;$uid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 

    &lt;span class=&#34;c1&#34;&gt;# Suche in der Datenbank nach $username/$password
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;$query&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;select uid, perms from %s
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;                      where username = &amp;#39;%s&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;                        and password = &amp;#39;%s&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;database_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nx&#34;&gt;addslashes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
      &lt;span class=&#34;nx&#34;&gt;addslashes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Hat es Treffer gegeben?
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;next_record&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;c1&#34;&gt;# uid merken für die Rückgabe
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nv&#34;&gt;$uid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;uid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

      &lt;span class=&#34;c1&#34;&gt;# Die Zugriffsrechte merken wir uns hier nur, um es
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# Perm nachher einfacher zu machen. Erklärung folgt weiter
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# unten.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;auth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;perm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;perms&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# An dieser Stelle hat $uid entweder einen Wert aus
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# der Datenbank oder ist false.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$uid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mit Hilfe dieser Klasse kann jetzt eine einzelne Seite geschützt
werden. Dazu ist der Aufruf von page_open() im Kopf der Seite um
ein weiteres Feature zu ergänzen: Neben dem Namen der Klasse für
das Session-Management ist dort auch noch der Name der Klasse
für die Benutzeranmeldung mit anzugeben. Die entsprechende Zeile
sieht so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                  &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
 &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;head&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;title&amp;gt;Seite mit Zugriffschutz&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;body bgcolor=&amp;#34;#ffffff&amp;#34;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;h1&amp;gt;Seite mit Zugriffschutz&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; Ihr Benutzername ist &amp;lt;?php print $auth-&amp;gt;auth[&amp;#34;uname&amp;#34;] ?&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; und ihre User-ID ist &amp;lt;?php print $auth-&amp;gt;auth[&amp;#34;uid&amp;#34;] ?&amp;gt;.
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  page_close();
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; ?&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Auth-Klasse bzw. ihre Unterklasse Example_Auth sorgt dafür,
daß der Funktionsaufruf page_open() nur dann erfolgreich
zurückkehrt, wenn der betreffende Benutzer sich erfolgreich
anmelden konnte. Intern startet page_open() bei dem gezeigten
Aufruf die Funktionen des Example_Auth-Objektes und dieses sorgt
bei nicht angemeldeten Benutzern dafür, daß der Loginschirm
gemalt wird und das Programm dann beendet wird. Das bedeutet: In
so einem Fall wird der Rest der Seite, nach dem
page_open()-Aufruf, gar nicht mehr angezeigt.&lt;/p&gt;
&lt;h3 id=&#34;weitergehende-konfigurationsmöglichkeiten&#34;&gt;
    &lt;a href=&#34;#weitergehende-konfigurationsm%c3%b6glichkeiten&#34;&gt;
	Weitergehende Konfigurationsmöglichkeiten
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wie die Session-Klasse verfügt auch die Auth-Klasse über einige
vordefinierte Variablen, mit denen man ihr Verhalten
beeinflussen kann.&lt;/p&gt;
&lt;p&gt;Die wichtigste ist die Variable $lifetime,
mit der man die Lebensdauer einer Anmeldung in Minuten festlegen
kann. Ist ein Benutzer für die angegebene Zeit oder länger
inaktiv, erlischt seine Anmeldung automatisch und er muß sich
beim System erneut anmelden.&lt;/p&gt;
&lt;p&gt;Die $lifetime einer Auth-Klasse
unterscheidet sich fundamental von der $lifetime einer
Session-Klasse und man muß beide genau unterscheiden: Die
Lifetime einer Session bestimmt, wie lange der Cookie im Browser
des Users gültig ist. Erlischt eine Session, ist nicht nur die
Anmeldung eines Benutzers verloren, sondern alle seine Variablen
sind unerreichbar. Sie stehen zwar noch einige Zeit in der
Datenbank, aber ohne die Session-ID im Cookie des Browsers sind
sie nicht mit dem Browser zu verknüpfen.&lt;/p&gt;
&lt;p&gt;Im Gegensatz dazu
bestimmt die $lifetime einer Auth-Klasse, wie lange die
Anmeldung eines Benutzers inaktiv sein kann. Erlischt die
$lifetime einer Auth-Klasse, erscheint zwar beim folgenden
Zugriff auf die Anwendung der Loginbildschirm, aber die Daten
des Benutzers sind nicht verloren und nach einer erneuten
Anmeldung kann er weiterarbeiten als sei nichts geschehen.&lt;/p&gt;
&lt;p&gt;Der empfohlene Wert für die $lifetime einer Session ist 0 - in
diesem Fall verwendet PHPLIB Session-Cookies, die nicht in der
cookies.txt des Browsers gespeichert werden und die mit dem
Beenden des Browsers automatisch verloren gehen. Da
Session-Cookies keine zeitlich begrenzte Laufzeit haben,
brauchen sie auch nicht erneuert zu werden. Es genügt, sie
einmal beim Setup der Session zu setzen.&lt;/p&gt;
&lt;p&gt;Der empfohlene Wert für
die $lifetime einer Auth-Klasse ist irgendwo zwischen 15 und 60
Minuten anzusiedeln. Die $lifetime einer Auth-Klasse ist eine
rein interne Sache der Datenbank, sie braucht nicht über Cookies
erneuert zu werden.&lt;/p&gt;
&lt;p&gt;Mit Hilfe der Variablen $mode, die die Werte &amp;ldquo;log&amp;rdquo; (default) und
&amp;ldquo;reg&amp;rdquo; annehmen kann, kann man PHPLIB aus demLoginmodus in den
Registrierungsmodus bringen. Im Registrierungsmodus werden statt
der beiden Funktionen auth_loginform() und auth_validatelogin()
die Funktionen auth_registerform() und auth_doregister()
aufgerufen.&lt;/p&gt;
&lt;p&gt;auth_registerform() muß wieder einen Bildschirm
zeichnen, in dem in diesem Fall die von dem Benutzer vorlangten
Daten abgefragt werden und auth_doregister() hat dann diese
Informationen in die Datenbank einzutragen und die User-ID des
Benutzers zurückzuliefern.&lt;/p&gt;
&lt;p&gt;Schließlich gibt es noch die Variable $nobody, mit der man
die sogenannte Default Authentication erzeugen kann. Mehr dazu
weiter unten.&lt;/p&gt;
&lt;h2 id=&#34;zugriffsrechte&#34;&gt;
    &lt;a href=&#34;#zugriffsrechte&#34;&gt;
	Zugriffsrechte
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Sobald man weiß, um wen es sich bei einem Benutzer handelt, kann
man sich überlegen, welche Zugriffsrechte man diesem Benutzer
gestatten möchte: Wenn man einen Benutzer authentisiert hat,
kann man sich um seine Autorisierung kümmern.&lt;/p&gt;
&lt;p&gt;In PHPLIB wird
dies durch die Klasse Perm erledigt, in der die Zugriffsrechte,
die die Anwendung kennt, definiert werden und die im Fehlerfall
einen Bildschirm zeichnet, der den Benutzer draußen hält. Als
Entwickler muß man dazu die Klasse Perm durch Bildung einer
Unterklasse an seine Bedürfnisse anpassen. Die Abbildung zeigt
das zugehörige Klassendiagramm.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;o&#34;&gt;+------+&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;+--------------+&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Perm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abgeleitet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Example_Perm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;+------+&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;+--------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 5:&lt;/strong&gt; &lt;em&gt;Klassendiagramm zur Anwendung der Klasse Perm.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In der Unterklasse von Perm kann man mit Hilfe des Arrays
$permissions definieren, welche Zugriffsrechte unsere Anwendung
erkennt. Bei den Zugriffsrechten handelt es sich um Namen für
Bitmuster, zum Beispiel &amp;ldquo;user&amp;rdquo;, &amp;ldquo;author&amp;rdquo;, &amp;ldquo;editor&amp;rdquo;, &amp;ldquo;supervisor&amp;rdquo;
und &amp;ldquo;admin&amp;rdquo; in dem in local.inc in der Distribution
mitgelieferten Beispiel. Im Beispiel wird jedes dieser
Zugriffsrechte auf ein einzelnes Bit abgebildet.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Example_Perm&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Perm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Perm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$permissions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
                            &lt;span class=&#34;s2&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                            &lt;span class=&#34;s2&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                            &lt;span class=&#34;s2&#34;&gt;&amp;#34;editor&amp;#34;&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                            &lt;span class=&#34;s2&#34;&gt;&amp;#34;supervisor&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                            &lt;span class=&#34;s2&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;
                          &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;perm_invalid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$does_have&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$must_have&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$perm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$auth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_PHPLIB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_PHPLIB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;libdir&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;perminvalid.ihtml&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ein User kann beliebig viele dieser Zugriffsrechte in dem Feld
perms der Tabelle auth_user zugewiesen bekommen. Dazu sind die
Zugriffsrechte dieses Users durch Komma getrennt aufzuführen -
Wichtig: Keine Leerzeichen! Die Rechte müssen direkt
hintereinander geschrieben werden, also z.B. &amp;ldquo;user,admin&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Der Benutzer hat dann die effektiven Zugriffsrechte der Ver-ODER-ung
beider Bitmuster. PHPLIB nimmt die Zugriffsrechte des Benutzers
und prüft diese gegen die Zugriffsrechte, die zum Betreten der
Seite notwendig sind.&lt;/p&gt;
&lt;p&gt;Dies geschieht mit der Funktion check(), etwa so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                  &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                  &lt;span class=&#34;s2&#34;&gt;&amp;#34;perm&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Perm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;# Zum Betreten dieser Seite sind &amp;#34;user&amp;#34;-Rechte notwendig.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$perm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;user,admin&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;head&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;title&amp;gt;Herzlichen Glückwunsch&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;body&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;h1&amp;gt;Sie sind berechtigt&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;Wenn Sie dies lesen können, sind sie berechtigt, diese Seite zu
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;betreten.
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Der Zugriff auf eine Seite ist gestattet, wenn der Benutzer alle
in $perm-&amp;gt;check() verlangten Zugriffsrechte besitzt. Dazu werden
die Bitmuster der im $perm-&amp;gt;check() aufgeführten Rechte
miteinander ver-ODER-t und mit den effektiven Rechten des
Benutzers ver-UND-et. Das Resultat muß den verlangten Rechten
der Seite entsprechen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;Die effektiven Zugriffsrechte eines Benutzers: user
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;                        ergeben als Bitmuster: 16
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Die verlangten Zugriffsrechte der Seite:       user,admin
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;                        ergeben als Bitmuster: 17
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Rechteprüfung:
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;      Effektive Zugriffsrechte: 17
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;AND   verlangte Rechte:         16
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;SIND  17 &amp;amp; 16 =                 16
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;MÜSSEN SEIN verlangte Rechte    17 =&amp;gt; Zugriff verboten.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 6:&lt;/strong&gt; &lt;em&gt;Eine Beispielrechnung für Zugriffsrechte: Ein User mit dem Recht &amp;ldquo;user&amp;rdquo; versucht auf eine Seite mit den verlangten Rechten &amp;ldquo;user,admin&amp;rdquo; zuzugreifen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Zugriffsrechte in diesem Beispiel bezeichnen wir als
&lt;em&gt;atomare&lt;/em&gt; Zugriffsrechte, weil jedes Recht nur einem
einzelnen gesetzten Bit entspricht. Atomare Zugriffsrechte sind
die einfachsten aller Rechteschemata, weil sie sehr einfache
Rechteprüfungen erlauben: Um eine Seite zu sehen, die mit den
Rechten user,editor,admin geschützt ist, muß man mindestens die
Rechte user,editor,admin in der auth_user-Tabelle zugewiesen
bekommen haben.&lt;/p&gt;
&lt;p&gt;Ein anderes populäres Rechteschema sind &lt;em&gt;Userlevel&lt;/em&gt; oder
&lt;em&gt;inklusive Rechte&lt;/em&gt;. In diesem Schema ist jedes
Zugriffsrecht eine Erweiterung aller vorhergehenden Rechte. Man
erreicht dies zum Beispiel mit dieser Definition:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Inclusive_Perm&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Perm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Inclusive_Perm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$permissions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
                       &lt;span class=&#34;s2&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                       &lt;span class=&#34;s2&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                       &lt;span class=&#34;s2&#34;&gt;&amp;#34;editor&amp;#34;&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                       &lt;span class=&#34;s2&#34;&gt;&amp;#34;supervisor&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                       &lt;span class=&#34;s2&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In so einem Fall kann ein Benutzer mit dem Recht admin leicht
auf eine Seite zugreifen, die das Zugriffsrecht &amp;ldquo;user&amp;rdquo; verlangt.&lt;/p&gt;
&lt;p&gt;Auch in diesem Fall ist die Funktionsweise leicht zu merken: Ein
Benutzer mit einem höheren Userlevel kann auf alle Funktionen
eines niedrigeren Zugriffslevels zugreifen. Wegen der internen
Organisation von PHP können bis zu 31 verschiedene Rechtebits
verwendet werden.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;Die effektiven Zugriffsrechte eines Benutzers: admin
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;                        ergeben als Bitmuster: 31
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Die verlangten Zugriffsrechte der Seite:       user
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;                        ergeben als Bitmuster: 1
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Rechteprüfung:
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;      Effektive Zugriffsrechte: 31
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;AND   verlangte Rechte:         1
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;SIND  31 &amp;amp;  1 =                 1
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;MÜSSEN SEIN verlangte Rechte    1 =&amp;gt; Zugriff erlaubt.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 7:&lt;/strong&gt; &lt;em&gt;Eine Beispielrechnung für Zugriffsrechte: Ein User mit dem Recht &amp;ldquo;admin&amp;rdquo; versucht auf eine Seite mit den verlangten Rechten &amp;ldquo;user&amp;rdquo; zuzugreifen.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;seiten-mit-optionalem-login&#34;&gt;
    &lt;a href=&#34;#seiten-mit-optionalem-login&#34;&gt;
	Seiten mit optionalem Login
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In vielen Anwendungen möchte man Benutzer ohne Anmeldung nicht
einfach hinauswerfen, sondern ihnen eine gewisse
Grundfunktionalität bieten, die man für angemeldete Benutzer
erweitert. In PHPLIB ist es nicht möglich, daß auf Seiten, die
eine Anmeldung verlangen unangemeldete Benutzer operieren, aber
man kann dafür sorgen, daß nicht angemeldete Benutzer auf eine
spezielle Gastbenutzer-Identität, nobody, abgebildet werden.&lt;/p&gt;
&lt;p&gt;Wenn man PHPLIB auf diese Weise verwenden möchte, definiert man
sich eine Unterklasse von Auth, in der die Variable $nobody auf
true gesetzt ist. Sobald man eine Seite betritt, auf der eine
Anmeldung verlangt wäre, man selbst jedoch nicht angemeldet ist,
setzt PHPLIB die Benutzeridentität auf den speziellen Wert
&amp;ldquo;nobody&amp;rdquo;, ohne daß ein Loginschirm verlangt wird.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Example_Auth&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Auth&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Name der Klasse
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$lifetime&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;# Nach 15 Minuten Inaktivität wird der 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                                   &lt;span class=&#34;c1&#34;&gt;# User automatisch ausgeloggt.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;# Name der Klasse und Tabelle für den Datenbankzugriff
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$database_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;DB_Example&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$database_table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth_user&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;# Default Authentication verwenden
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$nobody&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;auth_loginform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;loginform.ihtml&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;auth_validatelogin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Code wie üblich
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Um die Anzeige des Loginschirms zu erzwingen muß man speziellen
Code auf seiner Seite unterbringen: Die Funktion login_if() der
Klasse Auth zeigt den Loginbildschirm an, wenn sie mit einem
Argument aufgerufen wird. Man kann also einen Button oder ein
Link auf seiner Seite unterbringen, das dieselbe Seite mit einem
Argument aufruft und dies am Seitenanfang abfragen.&lt;/p&gt;
&lt;p&gt;In Code sieht das folgendermaßen aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
 &lt;span class=&#34;c1&#34;&gt;# using Default Authentication
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                 &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;

 &lt;span class=&#34;c1&#34;&gt;# Falls wir mit dem Parameter $again aufgerufen wurden,
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Loginscreen anzeigen.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$auth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;login_if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$again&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

 &lt;span class=&#34;c1&#34;&gt;# Wenn wir als &amp;#34;nobody&amp;#34; angemeldet sind,
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Login-Link anzeigen.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$auth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;auth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;uid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;nobody&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;A HREF=&amp;#34;&amp;lt;?php $sess-&amp;gt;purl(&amp;#34;$PHP_SELF?again=yes&amp;#34;) ?&amp;gt;&amp;#34;&amp;gt;Login&amp;lt;/A&amp;gt; aufrufen.
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;?php endif ?&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;benutzerspezifische-variablen&#34;&gt;
    &lt;a href=&#34;#benutzerspezifische-variablen&#34;&gt;
	Benutzerspezifische Variablen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Dadurch, daß PHPLIB intern User-IDs statt Usernamen verwendet
und daß diese User-IDs dasselbe Format wie Session-IDs haben,
ist es möglich, eine Klasse User zu haben, die ebenso wie die
Klasse Session funktioniert, aber mit User-IDs arbeitet.&lt;/p&gt;
&lt;p&gt;Variablen, die bei der Klasse User statt Session registriert
werden, stehen erst nach einem Login zur Verfügung, haben dafür
aber eine längere Lebensdauer. Typischerweise wird man hier
benutzerbezogene Einstellungen ablegen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;  &lt;span class=&#34;o&#34;&gt;+------+&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;+--------------+&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abgeleitet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Example_User&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;+------+&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;+--------------+&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;benutzt&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;nx&#34;&gt;zu&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CT_Sql&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;+-----------------------+&lt;/span&gt;
                           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;+---------+--&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abgeleitet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;+-----------------+&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abgeleitet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Example_Session&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;+---------+&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;+-----------------+&lt;/span&gt;
         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                                     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;benutzt&lt;/span&gt;                             &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;benutzt&lt;/span&gt;
         &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;                                     &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;
     &lt;span class=&#34;o&#34;&gt;+--------+&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;+----------------+&lt;/span&gt;
     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CT_Sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abgeleitet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Example_CT_Sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
     &lt;span class=&#34;o&#34;&gt;+--------+&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;+----------------+&lt;/span&gt;
         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                                       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;benutzt&lt;/span&gt;                              &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;benutzt&lt;/span&gt;
         &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;                                       &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;+--------+&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;+------------+&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abgeleitet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;+--------+&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;+------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 7:&lt;/strong&gt; &lt;em&gt;Klassendiagramm für die Klasse User.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Klasse User ist von der Klasse Session abgeleitet, und dann
so modifiziert worden, daß sie statt Cookies und Session-IDs die
UID des angemeldeten Users verwendet. Um diese Klasse verwenden
zu können, muß man sich eine von User abgeleitete Klasse in
local.inc definieren.&lt;/p&gt;
&lt;p&gt;Die Beispielklasse Example_User in der
local.inc-Datei zeigt, wie dies geht - da User von Session
abstammt, gilt im Prinzip alles unter Session gesagte.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Example_User&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_User&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Abracadabra&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Klasse wird genau wie die Session-Klasse verwendet. Da sie
einen angemeldeten Benutzer voraussetzt, kann sie nur mit der
Klasse Auth zusammen verwendet werden.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;# Laden der Variablen aus der Datenbank.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                  &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                  &lt;span class=&#34;s2&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_User&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;# Die globale Variable $s ist nun bei der Session registriert.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;# Die globale Variable $u ist nun bei User registriert.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;u&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;# $s und $u werden auf definierte Startwerte gesetzt, wenn die
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Variable noch nicht existiert.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; 
    &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$u&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// $s und $uhochzählen.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;$u&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
 &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;head&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;title&amp;gt;Eine Testseite&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;h1&amp;gt;Eine Testseite&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  Die Variable $s hat den Wert &amp;lt;?php print $s ?&amp;gt;.&amp;lt;br&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  Die Variable $u hat den Wert &amp;lt;?php print $u ?&amp;gt;.
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  // Zurückspeichern der Variablen in die Datenbank
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;  page_close();
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; ?&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;phplib-referenz&#34;&gt;
    &lt;a href=&#34;#phplib-referenz&#34;&gt;
	PHPLIB Referenz
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;db_sql&#34;&gt;
    &lt;a href=&#34;#db_sql&#34;&gt;
	DB_Sql
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Beschreibung bezieht sich auf die Implementierung von
DB_Sql für MySQL (db_mysql.inc). Die Parameter für den Connect
können sich in Abhängigkeit vom SQL-Servertyp leicht
unterscheiden, je nachdem, welche Informationen der
Datenbankserver für den Connect verlangt.&lt;/p&gt;
&lt;h3 id=&#34;variablen&#34;&gt;
    &lt;a href=&#34;#variablen&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;Host:&lt;/dt&gt;
&lt;dd&gt;Hostname, auf dem der SQL Datenbankserver läuft.&lt;/dd&gt;
&lt;dt&gt;Database:&lt;/dt&gt;
&lt;dd&gt;Name der MySQL Database, die auf dem Server verwendet werden soll.&lt;/dd&gt;
&lt;dt&gt;User:&lt;/dt&gt;
&lt;dd&gt;Benutzername, mit dem sich die Anwendung auf dem Datenbankserver anmelden soll.&lt;/dd&gt;
&lt;dt&gt;Password:&lt;/dt&gt;
&lt;dd&gt;Paßwort, mit dem die Anmeldung erfolgen soll.&lt;/dd&gt;
&lt;dt&gt;Row:&lt;/dt&gt;
&lt;dd&gt;Zeilennummer der aktuellen Zeile eines Anfrageergebnisses, beginnend bei 0.&lt;/dd&gt;
&lt;dt&gt;Record:&lt;/dt&gt;
&lt;dd&gt;Ein assoziatives Array mit der aktuellen Zeile eines Anfrageergebnisses. Die Spalten des Ergebnisses sind unter den Spaltennamen (Schreibweise beachten!) und unter numerischen Spaltenindices verfügbar.&lt;/dd&gt;
&lt;dt&gt;Errno:&lt;/dt&gt;
&lt;dd&gt;Fehlernummer der Datenbank.&lt;/dd&gt;
&lt;dt&gt;Error:&lt;/dt&gt;
&lt;dd&gt;Klartext-Fehlerbeschreibung des Datenbankfehlers.&lt;/dd&gt;
&lt;dt&gt;Auto_Free:&lt;/dt&gt;
&lt;dd&gt;Automatische Freigabe des Anfrageergebnisses, wenn das Ergebnis vollständig gelesen wurde (true, false).&lt;/dd&gt;
&lt;dt&gt;Debug:&lt;/dt&gt;
&lt;dd&gt;true: Alle Anfragen an die Datenbank werden zwecks Fehlersuche ausgegeben.&lt;/dd&gt;
&lt;dt&gt;Halt_On_Error:&lt;/dt&gt;
&lt;dd&gt;Verhalten des Programmes im Fehlerfall:
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;no&amp;rdquo;: Der Fehler wird ignoriert.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;report&amp;rdquo;: Der Fehler wird gemeldet, aber das Programm nicht abgebrochen.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;yes:&amp;rdquo; Das Programm wird mit einer Fehlermeldung angehalten.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;funktionen&#34;&gt;
    &lt;a href=&#34;#funktionen&#34;&gt;
	Funktionen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;query($query_string):&lt;/dt&gt;
&lt;dd&gt;Die Funktion sendet die SQL-Anweisung in $query_string an den
Datenbankserver. Nach dem Absenden werden die Variablen Error
und Errno aktualisiert. Wenn die Anweisung syntaktisch
fehlerhaft war, wird die Funktion halt() aufgerufen und das
Programm gemäß den Einstellungen von $Halt_On_Error angehalten.
Wenn noch kein Datenbank-Link existiert, wird vor dem Absenden
der Query intern die Funktion connect() aufgerufen.
Die Funktion gibt die interne Result-ID zurück, die entweder
eine positive Zahl oder 0 (false) ist, wenn die Query zu einem
Fehler führte.&lt;/dd&gt;
&lt;dt&gt;next_record():&lt;/dt&gt;
&lt;dd&gt;Die Funktion setzt den Cursor auf das nächste Ergebnis in
der Ergebnismenge und aktualisiert die Variablen Record, Row,
Error und Errno.
Die Funktion liefert den Wert true, wenn ein weiteres Ergebnis
verfügbar ist und den Wert false, wenn die aktuelle
Ergebnismenge durchlaufen wurde. Wenn die Variable $Auto_Free
auf true gesetzt war, wird automatisch free_result() aufgerufen,
um den Speicher freizugeben, bevor das Ergebnis false
zurückgegeben wird.
Eine typische Anwendung von query() und next_record() sieht so
aus:&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;select * from table where bedingung = 1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;next_record&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Name = %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;dl&gt;
&lt;dt&gt;seek($pos):&lt;/dt&gt;
&lt;dd&gt;Die Funktion positioniert den aktuellen Zeilenzeiger
innerhalb der Ergebnismenge an die angegebene Position. Dies ist
nützlich, um innerhalb einer Ergebnismenge hin- und
herzuspringen oder eine Ergebnismenge zweimal zu lesen. Die
angegebene Position wird nicht auf Gültigkeit überprüft.
&lt;strong&gt;Hinweis:&lt;/strong&gt; Wenn $Auto_Free auf true gesetzt wird, ist die Funktion
seek() unter Umständen nicht sinnvoll einsetzbar, weil die
Ergebnismenge beim berühren des Endes der Ergebnismenge
automatisch freigegeben wird.&lt;/dd&gt;
&lt;dt&gt;metadata($table, $full=false):&lt;/dt&gt;
&lt;dd&gt;Die Funktion gibt Informationen über den Aufbau der
benannten Tabelle in Form eines zweidimensionalen Feldes zurück.
Das Feld ist in der ersten Dimension numerisch indiziert (Start
bei 0) und enthält einen Eintrag pro Spalte der Tabelle. Für
jede Tabellenspalte enthält der Eintrag die Informationen
Tabellennamen (&amp;ldquo;table&amp;rdquo;), Spaltenname (&amp;ldquo;name&amp;rdquo;), Spaltentyp
(&amp;ldquo;type&amp;rdquo;), Spaltenbreite (&amp;ldquo;len&amp;rdquo;) und Spaltenflags (&amp;ldquo;flags&amp;rdquo;).
Ist das optionale Flag auf true gesetzt, wird außerdem ein
Eintrag num_fields mit der Anzahl der Spalten in der Tabelle und
ein Eintrag meta generiert. Der Eintrag meta enhält eine Liste
mit einer Übersetzungstabelle von Feldnamen nach Spaltennummern.
Das Ergebnis von metadata() ist passend für die Funktion
show() der Klasse Table, wenn das Flag $full auf false steht.
&lt;strong&gt;Hinweis:&lt;/strong&gt; Nicht alle Datenbankinterfaces unterstützen die
Funktion metadata() gleich gut.&lt;/dd&gt;
&lt;dt&gt;table_names():&lt;/dt&gt;
&lt;dd&gt;Die Funktion gibt Informationen über die vorhandenen
Tabellen in Form eines zweidimensionales Feldes zurück.
Das Feld ist in der ersten Dimension numerisch indiziert (Start
bei 0) und enthält einen Eintrag pro Tabelle. Für jede Tabelle
enthält der Eintrag die Informationen Tabellenname
(&amp;ldquo;table_name&amp;rdquo;), Name des Tablespaces
(&amp;ldquo;tablespace_name&amp;rdquo;) und Name der Datenbank (&amp;ldquo;database&amp;rdquo;).
&lt;strong&gt;Hinweis:&lt;/strong&gt; Nicht alle Datenbankinterfaces unterstützen die
Funktion table_names() gleich gut.&lt;/dd&gt;
&lt;dt&gt;num_rows(), nf():&lt;/dt&gt;
&lt;dd&gt;Gibt die Anzahl der Zeilen der Ergebnismenge zurück. Zutreffend auf die Ergebnisse von SELECT-Anweisungen.&lt;/dd&gt;
&lt;dt&gt;affected_rows():&lt;/dt&gt;
&lt;dd&gt;Gibt die Anzahl der Zeilen zurück, die von einem INSERT, UPDATE oder DELETE-Statement betroffen waren.&lt;/dd&gt;
&lt;dt&gt;num_fields():&lt;/dt&gt;
&lt;dd&gt;Gibt die Anzahl der Spalten einer Ergebnismenge zurück. Zutreffend auf die Ergebnisse von SELECT-Anweisungen.&lt;/dd&gt;
&lt;dt&gt;f($field):&lt;/dt&gt;
&lt;dd&gt;Identisch mit return $db-&amp;gt;Record[$field].&lt;/dd&gt;
&lt;dt&gt;p($field):&lt;/dt&gt;
&lt;dd&gt;Identisch mit print $db-&amp;gt;Record[$field].&lt;/dd&gt;
&lt;dt&gt;haltmsg($msg):&lt;/dt&gt;
&lt;dd&gt;Die Funktion wird intern verwendet, um die Fehlermeldung
$msg auszugeben, wenn ein Datenbankfehler auftritt. Sie kann in
einer Unterklasse überschrieben werden, um die Fehlermeldung zu
loggen oder sonstwie zu behandeln.
Die Funktion wird nur dann aufgerufen, wenn $Halt_On_Error auf
&amp;ldquo;report&amp;rdquo; oder &amp;ldquo;yes&amp;rdquo; steht.&lt;/dd&gt;
&lt;dt&gt;halt($msg):&lt;/dt&gt;
&lt;dd&gt;Die Funktion wird intern verwendet, um die Variablen $Error
und $Errno zu aktualisieren und $Halt_On_Error auszuwerten. Sie
ruft ggf. die Funktion haltmsg() auf.
Die Funktion kann in einer Unterklasse überschrieben werden, um
eine andere Fehlerbehandlung zu implementieren.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;seitenverwaltungsfunktionen&#34;&gt;
    &lt;a href=&#34;#seitenverwaltungsfunktionen&#34;&gt;
	Seitenverwaltungsfunktionen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;funktionen-1&#34;&gt;
    &lt;a href=&#34;#funktionen-1&#34;&gt;
	Funktionen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;page_open(array()); :&lt;/dt&gt;
&lt;dd&gt;Diese Funktion muß am Anfang einer Seite aufgerufen werden.  Sie enthält eine Zuordnung von gewünschten Features der Seite zu Klassennamen. Derzeit existieren die folgenden Features:&lt;/dd&gt;
&lt;dt&gt;sess:&lt;/dt&gt;
&lt;dd&gt;Die Seite verwendet Session-Variablen.&lt;/dd&gt;
&lt;dt&gt;auth:&lt;/dt&gt;
&lt;dd&gt;Die Seite verwendet Authentisierung. Um das auth-Feature verwenden zu können, muß auch sess aktiviert sein.&lt;/dd&gt;
&lt;dt&gt;perm:&lt;/dt&gt;
&lt;dd&gt;Die Seite verwendet Benutzerrechteverwaltung. Um das perm-Feature verwenden zu können, müssen auch sess und auth aktiviert sein.&lt;/dd&gt;
&lt;dt&gt;user:&lt;/dt&gt;
&lt;dd&gt;Die Seite verwendet User-Variablen. Um das user-Feature  verwenden zu können, müssen auch sess und auth aktiviert sein.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Eine beispielhafte Anwendung sieht so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dieser Aufruf erzeugt eine Instanz der Klasse Example_Session unter dem Namen $sess. Diese Instanz kann dann in Aufrufen verwendet werden ($sess-&amp;gt;register(&amp;ldquo;s&amp;rdquo;)). Die abgeleiteten Klassen, die als Parameter zu jedem Feature angegeben werden, werden in der Regel in der Datei local.inc definiert.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;page_close():&lt;/dt&gt;
&lt;dd&gt;Die Funktion muß am Ende jeder Seite aufgerufen werden
(nachdem alle registrierten Variablen ausgerechnet wurden). Sie
speichert diese Variablen zurück in der Datenbank. Momentan ist
es harmlos, page_close() auf einer Seite mehrfach aufzurufen,
aber dies kann sich in der Zukunft ändern.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;ct_sql&#34;&gt;
    &lt;a href=&#34;#ct_sql&#34;&gt;
	CT_Sql
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um die Session-Klasse ihren Daten in einer SQL-Datenbank
abspeichern zu lassen, wird in der Session-Klasse der Name einer
Unterklasse von CT_Sql als Container $that_class eingetragen.&lt;/p&gt;
&lt;h3 id=&#34;variablen-1&#34;&gt;
    &lt;a href=&#34;#variablen-1&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;database_table:&lt;/dt&gt;
&lt;dd&gt;Name der Datenbanktabelle, in der die Session ihre Daten  speichern soll.&lt;/dd&gt;
&lt;dt&gt;database_class:&lt;/dt&gt;
&lt;dd&gt;Name der DB_Sql Unterklasse, die zum Zugriff auf die Datenbank verwendet werden soll.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Die Klasse wird von Session intern verwendet und hat keine allgemein anwendbaren Funktionen.&lt;/p&gt;
&lt;h2 id=&#34;ct_split_sql&#34;&gt;
    &lt;a href=&#34;#ct_split_sql&#34;&gt;
	CT_Split_Sql
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Diese Klasse ist praktisch mit der CT_Sql-Klasse identisch, mit
dem Unterschied, daß sie mehrere Zeilen in der Tabelle verwenden
kann, wenn die Menge der zu speichernden Daten über das
hinausgeht, was die Datenbank verarbeiten kann. Dies ist vor
allen Dingen interessant, wenn die Datenbank Probleme mit BLOBs
hat.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hinweis:&lt;/strong&gt; Die Klasse ist nicht tabellenkompatibel mit CT_Sql. Es
muß eine Tabelle active_sessions_split verwendet werden, deren
Layout in den create_database.*-Scripten im stuff-Verzeichnis
der Distribution beschrieben ist.&lt;/p&gt;
&lt;h3 id=&#34;variablen-2&#34;&gt;
    &lt;a href=&#34;#variablen-2&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;database_table:&lt;/dt&gt;
&lt;dd&gt;Name der Datenbanktabelle, in der die Session ihre Daten speichern soll.&lt;/dd&gt;
&lt;dt&gt;database_class:&lt;/dt&gt;
&lt;dd&gt;Name der DB_Sql Unterklasse, die zum Zugriff auf die Datenbank verwendet werden soll.&lt;/dd&gt;
&lt;dt&gt;split_length:&lt;/dt&gt;
&lt;dd&gt;Anzahl der Bytes, nach denen ein Session-Record aufgeteilt werden soll (Default: 4096).&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Die Klasse wird von Session intern verwendet und hat keine allgemein anwendbaren Funktionen.&lt;/p&gt;
&lt;h2 id=&#34;ct_shm&#34;&gt;
    &lt;a href=&#34;#ct_shm&#34;&gt;
	CT_Shm
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um Sessions in System V Shared Memory-Segmenten zu speichern, muß der PHP-Interpreter mit shm-Support übersetzt worden sein (Die Ausgabe der phpinfo()-Funktion zeigt dies an) und es muß als Containerklasse bei Session CT_Shm oder eine Unterklasse davon angegeben werden.&lt;/p&gt;
&lt;h3 id=&#34;variablen-3&#34;&gt;
    &lt;a href=&#34;#variablen-3&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;max_sessions:&lt;/dt&gt;
&lt;dd&gt;Maximale Anzahl von gleichzeitig aktiven Sessions.&lt;/dd&gt;
&lt;dt&gt;shm_key:&lt;/dt&gt;
&lt;dd&gt;Der eindeutige (wichtig!) shm_key für das Shared Memory-Segment, das verwendet werden soll.&lt;/dd&gt;
&lt;dt&gt;shm_size:&lt;/dt&gt;
&lt;dd&gt;Größe des zu verwendenden Shared Memory-Segmentes in Byte.
Der Speicher wird bestellt, wenn das Segment das erste Mal
verwendet wird. Für durchschnittlich kleine Mengen von
Session-Variablen kann man als Schätzwert shm_size =
max_sessions * 600 annehmen.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Die Klasse wird von Session intern verwendet und hat keine allgemein anwendbaren Funktionen.&lt;/p&gt;
&lt;h2 id=&#34;ct_dbm&#34;&gt;
    &lt;a href=&#34;#ct_dbm&#34;&gt;
	CT_Dbm
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um Sessions in UNIX DBM-Dateien zu speichern, muß der
PHP-Interpreter mit dem passenden DBM-Support übersetzt worden
sein (Die Ausgabe der phpinfo()-Funktion zeigt dies an) und es
muß als Containerklasse bei Session CT_Dbm bzw. eine Unterklasse
davon angegeben werden.&lt;/p&gt;
&lt;h3 id=&#34;variablen-4&#34;&gt;
    &lt;a href=&#34;#variablen-4&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;dbm_file:&lt;/dt&gt;
&lt;dd&gt;Der Pfadname der zu verwendenden DBM-Datei. Die Datei muß  bereits existieren und durch den Server beschreibbar sein.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Die Klasse wird von Session intern verwendet und hat keine allgemein anwendbaren Funktionen.&lt;/p&gt;
&lt;h2 id=&#34;ct_ldap&#34;&gt;
    &lt;a href=&#34;#ct_ldap&#34;&gt;
	CT_Ldap
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um Sessions auf einem LDAP-Server zu speichern, muß der
PHP-Interpreter mit LDAP-Support übersetzt worden sein (Die
Ausgabe der phpinfo()-Funktion zeigt dies an) und es
muß als Containerklasse bei Session CT_Ldap bzw. muß als
Containerklasse bei Session CT_Dbm bzw. eine Unterklasse
davon angegeben werden.&lt;/p&gt;
&lt;h3 id=&#34;variablen-5&#34;&gt;
    &lt;a href=&#34;#variablen-5&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;ldap_host:&lt;/dt&gt;
&lt;dd&gt;Hostname des LDAP-Servers, der verwendet werden soll.&lt;/dd&gt;
&lt;dt&gt;ldap_port:&lt;/dt&gt;
&lt;dd&gt;Portnummer des LDAP-Servers, der verwendet werden soll (Default: 389).&lt;/dd&gt;
&lt;dt&gt;basedn:&lt;/dt&gt;
&lt;dd&gt;DN, unterhalb dessen die Daten abgelegt werden sollen.&lt;/dd&gt;
&lt;dt&gt;rootdn:&lt;/dt&gt;
&lt;dd&gt;Wurzel-DN des LDAP-Servers, wird benötigt, um sich mit dem Server verbinden zu können.&lt;/dd&gt;
&lt;dt&gt;rootpw:&lt;/dt&gt;
&lt;dd&gt;Zur rootdn passendes Paßwort.&lt;/dd&gt;
&lt;dt&gt;objclass:&lt;/dt&gt;
&lt;dd&gt;Name der objectclass, der von PHPLIB zu werden ist (siehe auch ldap.ldif im stuff-Verzeichnis der Distribution)&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Die Klasse wird von Session intern verwendet und hat keine allgemein anwendbaren Funktionen.&lt;/p&gt;
&lt;h2 id=&#34;session&#34;&gt;
    &lt;a href=&#34;#session&#34;&gt;
	Session
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Klasse Session verwaltet eine Liste von globalen
Variablennamen, und lädt und speichert die Typen und Werte
dieser Variablen in serialisierter Form am Anfang und Ende jeder
Seite. Die Variablen können vom Typ Skalar (string, integer,
float) oder Array sein. Objekte können ebenfalls gesichert und
geladen werden, wenn sie die Instanzvariablen classname und
persistent_slots haben, damit der Name ihrer Klasse und die zu
sichernden Slots bestimmt werden können.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;classname:&lt;/dt&gt;
&lt;dd&gt;Name der Klasse. Alle von PHPLIB zu sichernden oder zu ladenden Objekte müssen einen Slot classname haben, der den genauen Namen der Klasse enthält.&lt;/dd&gt;
&lt;dt&gt;magic:&lt;/dt&gt;
&lt;dd&gt;Ein geheimer String, der verwendet wird, um die Session-IDs schwerer ratbar zu machen. Der String kann irgendeinen Wert haben. Es ist nur wichtig, diesen Wert geheim zu halten.&lt;/dd&gt;
&lt;dt&gt;mode:&lt;/dt&gt;
&lt;dd&gt;Betriebsart. Entweder &amp;ldquo;cookie&amp;rdquo; (empfohlen) oder &amp;ldquo;get&amp;rdquo;. In cookie-Mode wird die Session-ID vom Browser per Cookie eingeliefert, in get-Mode als CGI-Parameter einer URL.&lt;/dd&gt;
&lt;dt&gt;fallback_mode:&lt;/dt&gt;
&lt;dd&gt;Wenn $mode = &amp;ldquo;cookie&amp;rdquo; ist, kann man diese Variable auf den Wert &amp;ldquo;get&amp;rdquo; setzen. PHPLIB verwendet dann automatisch get-Mode, wenn auf dem zugreifenden Browser cookies abgeschaltet sind.&lt;/dd&gt;
&lt;dt&gt;lifetime:&lt;/dt&gt;
&lt;dd&gt;Lebensdauer des Cookies, den PHPLIB verwendet, in Minuten.
Wenn dieser Wert auf 0 steht (default), werden Session-Cookies
verwendet. Diese Cookies haben dieselbe Lebensdauer wie der
Browser des Anwenders und werden nicht in der cookies.txt-Datei
gespeichert. Dies ist die empfohlene Betriebsart.&lt;/dd&gt;
&lt;dt&gt;gc_time:&lt;/dt&gt;
&lt;dd&gt;PHPLIB führt in Abständen eine garbage collection auf der
Tabelle active_sessions durch. Dabei werden alle Session-Daten
gelöscht, die älter als gc_time Minuten sind. Der Standardwert
ist 1440 (ein Tag) und kann so beibehalten werden.&lt;/dd&gt;
&lt;dt&gt;gc_probability:&lt;/dt&gt;
&lt;dd&gt;Bei jedem Zugriff auf eine Session wird mit der
Wahrscheinlichkeit gc_probability Prozent eine
Garbage-Collection ausgelöst. Der Standardwert ist 5, was für
Server mit niedrigem Traffic in Ordnung ist. Auf stark
belasteten Servern kann der Wert auf 1 gesetzt werden.&lt;/dd&gt;
&lt;dt&gt;allowcache:&lt;/dt&gt;
&lt;dd&gt;Zugelassene Werte sind &amp;ldquo;no&amp;rdquo;, &amp;ldquo;private&amp;rdquo; (Default) und
&amp;ldquo;public&amp;rdquo;. Der Wert bestimmt, welche HTTP-Header erzeugt werden,
die das Caching von PHPLIB-Seiten gestatten. Mit der Einstellung
&amp;ldquo;no&amp;rdquo; wird das Speichern der Seiten in Caches generell verboten,
mit der Einstellung &amp;ldquo;private&amp;rdquo; wird dem Browser des Anwenders das
Speichern der Seite im Cache gestattet, aber öffentlichen Caches
verboten und mit der Einstellung &amp;ldquo;public&amp;rdquo; wird das Cachen der
erzeugten Seiten generell erlaubt.&lt;/dd&gt;
&lt;dt&gt;allowcache_expires:&lt;/dt&gt;
&lt;dd&gt;Das Speichern der erzeugten Seiten wird den Caches für
maximal die hier konfigurierte Anzahl von Minuten erlaubt
(Default: 1440, ein Tag).&lt;/dd&gt;
&lt;dt&gt;that_class:&lt;/dt&gt;
&lt;dd&gt;Name der Containerklasse (eine Unterklasse von CT_Sql,
CT_Split_Sql, CT_Shm, CT_Dbm, CT_Ldap), die von der Session
verwendet wird, um ihre Daten zu laden und zu speichern.&lt;/dd&gt;
&lt;dt&gt;auto_init:&lt;/dt&gt;
&lt;dd&gt;Name einer Datei aus dem include-Verzeichnis, die beim
Erstellen einer neuen Session geladen und ausgeführt wird. Die
Ausführung der Datei erfolgt im Kontext einer Funktion, sodaß
alle zu definierenden globalen Variablen mit &amp;ldquo;global&amp;rdquo; importiert
werden müssen.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;funktionen-2&#34;&gt;
    &lt;a href=&#34;#funktionen-2&#34;&gt;
	Funktionen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;register(&amp;ldquo;varname&amp;rdquo;):&lt;/dt&gt;
&lt;dd&gt;Die Variable mit dem angegebenen Namen wird bei der Session
registriert. Der Name kann sich auf eine globale Variable vom
Typ Skalar, Array oder Objekt beziehen. Wenn es sich bei der
Variablen um ein Objekt handelt, muß es die folgenden beiden
Slots besitzen:&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;classname: String, Name der Klasse des Objektes.&lt;/p&gt;
&lt;p&gt;persistent_slots: Array von Strings, Namen der Slots des Objektes, die von der Session gesichert werden sollen.&lt;/p&gt;
&lt;p&gt;Es ist ohne Nachteile möglich, denselben Namen mehrmals zu registrieren.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;unregister(&amp;ldquo;varname&amp;rdquo;):&lt;/dt&gt;
&lt;dd&gt;Die Variable mit dem angegebenen Namen wird bei der Session
wieder ent-registriert. Die Variable wird nicht gelöscht, ihr
Wert ist bis zum Ende der Seite weiterhin verfügbar, aber ihr
Wert ist nicht mehr persistent und wird am Ende der Seite
verfallen.&lt;/dd&gt;
&lt;dt&gt;delete():&lt;/dt&gt;
&lt;dd&gt;Die aktuelle Session wird zerstört und der Session-Cookie
wird gelöscht. Der Eintrag für die Session wird aus der
Datenbank entfernt.
Weil der Session-Cookie gelöscht wird, muß diese Funktion sehr
früh auf einer Seite aufgerufen werden (bevor irgendein HTML
ausgegeben wurde). Da die Session durch die Funktion zerstört
wird, darf am Ende der Seite nicht mehr page_close() aufgerufen
werden. Die zur Session gehörenden Variablen sind auf der Seite
selbst noch verfügbar. Sie verfallen am Ende der Seite.
Im cookie-Mode ist es möglich, nach dem Aufruf von delete() eine
neue Session aufzumachen, indem ein weiterer page_open()-Aufruf
erzeugt wird. Das erlaubt es auch, Variablen aus der alten
Session bei der neuen Session zu re-registrieren und so zu
übernehmen.&lt;/dd&gt;
&lt;dt&gt;url($url):&lt;/dt&gt;
&lt;dd&gt;Der Funktion wird eine URL übergeben, so wie man sie in
einem A, FRAME oder FORM-Tag verwenden würde. Im cookie-Mode
wird die URL so ausgegeben, im get-Mode wird die aktuelle
Session-ID in die URL mit eingebaut.
Die Funktion gibt die modifizierte URL als Ergebnis zurück.&lt;/dd&gt;
&lt;dt&gt;purl($url):&lt;/dt&gt;
&lt;dd&gt;Eine Abkürzung für print $sess-&amp;gt;url($url).&lt;/dd&gt;
&lt;dt&gt;self_url():&lt;/dt&gt;
&lt;dd&gt;Die Funktion liefert eine URL, die auf die aktuelle Seite
zeigt, zurück. Im get-Mode ist die aktuelle Session-ID dabei
schon enthalten.&lt;/dd&gt;
&lt;dt&gt;pself_url():&lt;/dt&gt;
&lt;dd&gt;Eine Abkürzung für print $sess-&amp;gt;self_url().&lt;/dd&gt;
&lt;dt&gt;hidden_session():&lt;/dt&gt;
&lt;dd&gt;Erzeugt ein HIDDEN-Element für Formulare mit dem Session-Namen und der ID.&lt;/dd&gt;
&lt;dt&gt;add_query($qarray):&lt;/dt&gt;
&lt;dd&gt;Die Funktion erzeugt einen Query-String, der an eine aktuelle URL angehängt werden kann. Beispiel:&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;?php 
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$sess-&amp;gt;pself_url&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$sess-&amp;gt;padd_query&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;(array(&amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;again&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;=&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;yes&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;))
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;?&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Reload&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;dl&gt;
&lt;dt&gt;padd_query($qarray):&lt;/dt&gt;
&lt;dd&gt;Eine Abkürzung für print $this-&amp;gt;add_query($qarray).&lt;/dd&gt;
&lt;dt&gt;reimport_get_vars():&lt;/dt&gt;
&lt;dt&gt;reimport_post_vars():&lt;/dt&gt;
&lt;dt&gt;reimport_cookie_vars():&lt;/dt&gt;
&lt;dd&gt;Wenn man eine FORM-Variable registriert, wird die
Formularvariable in PHP importiert, danach page_open()
aufgerufen und der alte Wert dieser Variablen aus der Datenbank
überschreibt den neuen Wert aus dem Formular.
In einem solchen Fall kann man mit der Funktion
reimport_x_vars() die Variablenwerte reimportiert. Im
allgemeinen ist dies ein Fehler, weil dadurch Werte aus dem
Internet ohne Konsistenzprüfung in die Anwendung übernommen
werden. Die Funktion sollte nicht verwendet werden.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;auth&#34;&gt;
    &lt;a href=&#34;#auth&#34;&gt;
	Auth
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Auth-Klasse im PHPLIB verwaltet alle Anmeldevorgänge und
merkt sich, wann sich der Benutzer unter welchem Namen
angemeldet hat. Da sich die Auth-Klasse selbst persistent macht,
setzt sie voraus, daß auf allen Seiten, auf denen Auth verwendet
wird, auch Session verwendet wird.&lt;/p&gt;
&lt;h3 id=&#34;variablen-6&#34;&gt;
    &lt;a href=&#34;#variablen-6&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;classname:&lt;/dt&gt;
&lt;dt&gt;persistent_slots:&lt;/dt&gt;
&lt;dd&gt;Diese Variablen sind notwendig, damit sich Auth in der
Session speichern und laden kann. Normalerweise muß man
classname auf den Namen seiner Unterklasse setzen und braucht
persistent_slots nicht anzupassen.&lt;/dd&gt;
&lt;dt&gt;lifetime:&lt;/dt&gt;
&lt;dd&gt;Nachdem ein Benutzer $lifetime Minuten lang keine Seiten
abgerufen hat, muß er sich neu am System anmelden, um
weiterarbeiten zu können.&lt;/dd&gt;
&lt;dt&gt;mode:&lt;/dt&gt;
&lt;dd&gt;Entweder &amp;ldquo;log&amp;rdquo; oder &amp;ldquo;reg&amp;rdquo;. Wenn die Variable den Wert &amp;ldquo;log&amp;rdquo;
hat, werden die Funktionen auth_loginform() und
auth_validatelogin() aufgerufen. Im &amp;ldquo;reg&amp;rdquo;-Mode werden
stattdessen auth_registerform() und auth_doregister() verwendet,
mit denen sich ein Anwender beim System anmelden kann.&lt;/dd&gt;
&lt;dt&gt;database_class:&lt;/dt&gt;
&lt;dd&gt;Der Name der Datenbank-Klasse über die die Auth-Funktion in
der Benutzertabelle nachschlagen soll.&lt;/dd&gt;
&lt;dt&gt;database_table:&lt;/dt&gt;
&lt;dd&gt;Der Name der Datenbank-Tabelle, in der die
Benutzerinformationen gespeichert sind.&lt;/dd&gt;
&lt;dt&gt;magic:&lt;/dt&gt;
&lt;dd&gt;Ein zufälliger, geheimer String, der bei der Ermittlung
neuer User-IDs verwendet wird.&lt;/dd&gt;
&lt;dt&gt;nobody:&lt;/dt&gt;
&lt;dd&gt;Schalter: Wenn er auf true gesetzt wird, wird Default
Authentication verwendet, d.h. es erscheint kein Loginformular,
sondern der Anwender wird als nobody eingeloggt.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;funktionen-3&#34;&gt;
    &lt;a href=&#34;#funktionen-3&#34;&gt;
	Funktionen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;url():&lt;/dt&gt;
&lt;dd&gt;Diese Funktion entspricht der Funktion url() von Session.&lt;/dd&gt;
&lt;dt&gt;purl():&lt;/dt&gt;
&lt;dd&gt;Diese Funktion entspricht der Funktion purl() von Session.&lt;/dd&gt;
&lt;dt&gt;login_if($t):&lt;/dt&gt;
&lt;dd&gt;Diese Funktion kann verwendet werden, um die Anzeige eines
Loginformulars zu erzwingen, wenn Default Authentication
verwendet wird.&lt;/dd&gt;
&lt;dt&gt;unauth($nobody = false):&lt;/dt&gt;
&lt;dd&gt;Diese Funktion meldet den aktuellen Benutzer beim System ab,
sodaß beim nächsten Seitenaufruf ein neuer Login notwendig wird.
Der Benutzername bleibt jedoch erhalten, sodaß eine korrekt
geschriebene Login-Seite diesen Namen als Vorgabe präsentieren
kann.
Seit PHPLIB Version 6 ist es möglich, die Funktion mit dem
Parameter &amp;ldquo;true&amp;rdquo; aufzurufen, wenn man den Benutzer nicht einfach
abmelden, sondern stattdessen wieder als nobody anmelden möchte.
Beispielanwendung: $auth-&amp;gt;unauth($auth-&amp;gt;nobody).&lt;/dd&gt;
&lt;dt&gt;logout($nobody = $this-&amp;gt;nobody):&lt;/dt&gt;
&lt;dd&gt;Diese Funktion entspricht der Funktion unauth(), außer das
alle Logininformation einschließlich des Benutzernamens
beseitigt wird. Bei der Neuanmeldung muß der Benutzer das
gesamte Loginformular neu ausfüllen, es existieren keine
Vorgaben.&lt;/dd&gt;
&lt;dt&gt;is_authenticated():&lt;/dt&gt;
&lt;dd&gt;Diese Funktion liefert falsch, wenn der Benutzer keine
gültige Anmeldung hat oder die aktuelle uid, wenn die Anmeldung
gültig ist.&lt;/dd&gt;
&lt;dt&gt;auth_preauth():&lt;/dt&gt;
&lt;dd&gt;Diese Funktion kann durch den Entwickler überschrieben
werden. Sie wird als allererste Funktion im Loginprozeß
aufgerufen und kann entweder false oder eine gültige uid
zurückliefern (Default: Die Funktion liefert immer false).
Wenn die Funktion eine gültige User-ID zurückliefert, wird der
Loginprozeß nicht durchgeführt, sondern diese User-ID verwendet.
Die Funktion könnte zum Beispiel mit Hilfe von Cookies im
Browser des Users ein automatisches Login durchführen, sodaß der
Benutzer sich nicht mehr anzumelden braucht, wenn sein Browser
diese Cookies akzeptiert.&lt;/dd&gt;
&lt;dt&gt;auth_loginform():&lt;/dt&gt;
&lt;dd&gt;Diese Funktion muß durch den Entwickler überschrieben werden
und sollte das HTML ausgeben, das das Loginformular zeichnet.&lt;/dd&gt;
&lt;dt&gt;auth_validatelogin():&lt;/dt&gt;
&lt;dd&gt;Diese Funktion wird aufgerufen, wenn der Benutzer das durch
auth_loginform() gezeichnete Loginformular absendet. Sie muß die
Benutzereingaben prüfen und entweder false oder eine gültige
User-ID zurückliefern.
Die Funktion sollte außerdem $this-&amp;gt;auth[&amp;ldquo;uname&amp;rdquo;] mit dem
Benutzernamen des Users belegen und kann optional
$this-&amp;gt;auth[&amp;ldquo;perm&amp;rdquo;] für die Verwendung durch die Perm-Klasse
mit den Zugriffsrechten des Users vorbelegen.&lt;/dd&gt;
&lt;dt&gt;auth_registerform():&lt;/dt&gt;
&lt;dt&gt;auth_doregister():&lt;/dt&gt;
&lt;dd&gt;Im reg-Mode werden diese beiden Funktionen statt
auth_loginform() und auth_validatelogin() aufgerufen. Sie sollen
ein Anmeldeformular für neue User zeichnen bzw. die Anmeldung
des Benutzers in die Datenbank eintragen.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;perm&#34;&gt;
    &lt;a href=&#34;#perm&#34;&gt;
	Perm
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Perm-Klasse im PHPLIB verwaltet Benutzerrechte und kann
prüfen, ob ein angemeldeter Benutzer Zugang zu einer Seite oder
einer Funktion hat. Benutzerrechte setzen einen angemeldeten
Benutzer voraus, daher setzt Perm voraus, daß auf allen Seiten,
auf denen Perm verwendet wird, auch Auth und Session verwendet
werden.&lt;/p&gt;
&lt;h3 id=&#34;variablen-7&#34;&gt;
    &lt;a href=&#34;#variablen-7&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;permissions:&lt;/dt&gt;
&lt;dd&gt;Ein Array, das Namen von Zugriffsrechten mit den zugehörigen
Bitmustern verbindet.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;funktionen-4&#34;&gt;
    &lt;a href=&#34;#funktionen-4&#34;&gt;
	Funktionen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;check($required):&lt;/dt&gt;
&lt;dd&gt;Die Funktion wird mit einer Liste von Zugriffsrechten
aufgerufen, die für das Ansehen der betreffenden Seite notwendig
sind. Wenn der aktuelle User dieser Rechte nicht hat, wird ihm
das Ansehen der Seite verweigert, d.h. die Funktion
perm_invalid() wird aufgerufen.
Die Funktion perm_invalid() wird ebenfalls aufgerufen, wenn in
den Rechten des Benutzers oder den von der Seite verlangten
Rechten illegale Rechtenamen verwendet werden.&lt;/dd&gt;
&lt;dt&gt;have_perm($required):&lt;/dt&gt;
&lt;dd&gt;Die Funktion arbeitet ähnlich wie check(), ruft aber keine
Fehlerseite auf, sondern liefert entweder true (der Benutzer hat
die verlangten Rechte) oder false (der Benutzer hat die
verlangten Rechte nicht).&lt;/dd&gt;
&lt;dt&gt;perm_sel($name, $current = &amp;ldquo;&amp;rdquo;, $class = &amp;ldquo;&amp;quot;):&lt;/dt&gt;
&lt;dd&gt;Die Funktion liefert als Ergebnis einen String, der einen
HTML SELECT-Tag mit allen möglichen Zugriffsrechten als
OPTION-Tags enthält. Wenn ein Wert für $current angegeben wird,
ist dieses Zugriffsrecht im Option-Tag als SELECTED markiert.
Wenn ein Wert für $class angegeben wird, haben alle erzeugten
HTML-Elemente die angegebene Klasse als CSS stylesheet-Klasse.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;user&#34;&gt;
    &lt;a href=&#34;#user&#34;&gt;
	User
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Klasse User ist eine Unterklasse von Session. Sie
funktioniert im wesentlichen genauso wie Session, nur daß sie
Werte benutzerbezogen speichert. Das bedeutet, daß bei der
Klasse User registrierte Variablen nur auf Seiten zur Verfügung
stehen, die authentisiert sind. Das user-Features kann also nur
zusammen mit auth und sess verwendet werden.&lt;/p&gt;
&lt;h3 id=&#34;variablen-8&#34;&gt;
    &lt;a href=&#34;#variablen-8&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;classname:&lt;/dt&gt;
&lt;dd&gt;Name der Klasse.&lt;/dd&gt;
&lt;dt&gt;magic:&lt;/dt&gt;
&lt;dt&gt;mode:&lt;/dt&gt;
&lt;dt&gt;fallback_mode:&lt;/dt&gt;
&lt;dd&gt;In dieser Klasse ohne Bedeutung.&lt;/dd&gt;
&lt;dt&gt;lifetime:&lt;/dt&gt;
&lt;dd&gt;In dieser Klasse ohne Bedeutung. Stattdessen sollte
$auth-&amp;gt;lifetime verwendet werden.&lt;/dd&gt;
&lt;dt&gt;gc_time:&lt;/dt&gt;
&lt;dd&gt;Funktionsfähig, aber wahrscheinlich nicht sinnvoll.&lt;/dd&gt;
&lt;dt&gt;gc_probability:&lt;/dt&gt;
&lt;dd&gt;Funktionsfähig, aber wahrscheinlich nicht sinnvoll. Sollte
auf 0 gesetzt werden.&lt;/dd&gt;
&lt;dt&gt;that_class:&lt;/dt&gt;
&lt;dd&gt;Name der Containerklasse, die zur Verwaltung der Variablen
verwendet wird.&lt;/dd&gt;
&lt;dt&gt;auto_init:&lt;/dt&gt;
&lt;dd&gt;In dieser Klasse ohne Bedeutung.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;funktionen-5&#34;&gt;
    &lt;a href=&#34;#funktionen-5&#34;&gt;
	Funktionen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;register($varname):&lt;/dt&gt;
&lt;dt&gt;unregister($varname):&lt;/dt&gt;
&lt;dt&gt;delete():&lt;/dt&gt;
&lt;dt&gt;reimport_get_vars():&lt;/dt&gt;
&lt;dt&gt;reimport_post_vars():&lt;/dt&gt;
&lt;dt&gt;reimport_cookie_vars():&lt;/dt&gt;
&lt;dd&gt;Funktioniert erwartungsgemäß.&lt;/dd&gt;
&lt;dt&gt;url($url):&lt;/dt&gt;
&lt;dt&gt;purl($url):&lt;/dt&gt;
&lt;dt&gt;self_url():&lt;/dt&gt;
&lt;dt&gt;pself_url():&lt;/dt&gt;
&lt;dd&gt;In dieser Klasse ohne Bedeutung.
&lt;br&gt;&lt;/dd&gt;
&lt;/dl&gt;
</description>
    </item>
    
    <item>
      <title>rwx - sonst nix?</title>
      <link>https://blog.koehntopp.info/1996/03/01/rwx-sonst-nix.html</link>
      <pubDate>Fri, 01 Mar 1996 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1996/03/01/rwx-sonst-nix.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;aus &amp;ldquo;Linux Magazin&amp;rdquo;, Ausgabe 3/96.&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;rwx---sonst-nix&#34;&gt;
    &lt;a href=&#34;#rwx---sonst-nix&#34;&gt;
	rwx - sonst nix?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;In jedem Buch über UNIX wird das UNIX-Rechtesystem ungefähr in Kapitel 2 vollständig erläutert und es bleiben keine Frage mehr offen.
Wieso also ein Artikel über Zugriffsrechte?
Nun, dieser Artikel erklärt Zugriffsrechte für Leute, die es ganz genau wissen wollen:
Welche Rechte werden für den Zugriff auf eine Datei benötigt?
Wer prüft die Rechte und wie passiert das?&lt;/p&gt;
&lt;p&gt;Wie oft hört man Redewendungen wie &amp;ldquo;Ich öffne jetzt einmal diese Datei&amp;hellip;&amp;rdquo; oder &amp;ldquo;Ich habe keine Zugriffsrechte, um auf dieses Verzeichnis zuzugreifen.&amp;rdquo;
Solche Formulierungen sind zwar üblich und auch jedermann verständlich, weil sie so schön bildhaft sind.
Aber wenn man über Zugriffsrechte reden möchte, sind sie eher schädlich als hilfreich.&lt;/p&gt;
&lt;p&gt;Natürlich öffnet ein User niemals eine Datei oder greift auf ein Verzeichnis zu.
Prozesse tätigen Systemaufrufe und der Kernel öffnet Dateien oder liest Verzeichnisse im Auftrag und mit den Rechten dieses Prozesses.
Solche Unterscheidungen sind auf den ersten Blick Haarspaltereien.
Aber wenn man sich den Spaß macht und die Sache einmal zu Ende verfolgt, wird man feststellen, daß sich auf diese Weise einige Dinge besser verstehen und leichter erklären lassen.
Der Autor will sich also in  diesem Artikel einer besonders genauen Sprache befleißigen.&lt;/p&gt;
&lt;h2 id=&#34;woher-kommen-zugriffsrechte&#34;&gt;
    &lt;a href=&#34;#woher-kommen-zugriffsrechte&#34;&gt;
	Woher kommen Zugriffsrechte?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Zugriffsrechte und Eigentümer sind etwas, das einem zunächst an Dateien ins Auge fällt.
Eine Datei besteht in Linux aus einem Haufen Blöcken auf der Festplatte und einer Verwaltungsstruktur, der I-Node.
Während die Blöcke die eigentliche Information in der Datei speichern, findet man in der I-Node fast alle Information &lt;em&gt;über&lt;/em&gt; die Datei - also Metainformation.
Was die Rechte betrifft, findet man in der I-Node eine User-ID (UID), eine Group-ID (GID) und zwölf Rechtebits:
Drei Bits mit den Bezeichnungen &lt;code&gt;sst&lt;/code&gt; und dann jeweils drei Dreiergruppen &lt;code&gt;rwx&lt;/code&gt;.
&lt;code&gt;sst&lt;/code&gt; sind gewissermaßen Allzweckbits, die je nach Typ der Datei und Systemaufruf unterschiedliche Bedeutung haben können.
Die Auswertung der übrigen neun Bits erfolgt dagegen relativ zentral in einer Funktion &lt;code&gt;permission()&lt;/code&gt;, auf die wir weiter unten eingehen werden.&lt;/p&gt;
&lt;p&gt;Was dem UNIX-Neuling noch auffallen wird, ist die Tatsache, daß sich in der I-Node der Datei nicht der Username und der Gruppenname findet, sondern nur jeweils eine ID.
Diese ID-Nummern werden vom ls-Kommando in Namen umgewandelt, falls man es ihm nicht verbietet.
Man kann das ls-Kommando zwingen, die Angaben numerisch zu machen, indem man die Option &lt;code&gt;-n&lt;/code&gt; verwendet oder indem man dem Benutzer, der ls aufruft, den Lesezugriff auf /etc/passwd und /etc/group verweigert (&lt;a href=&#34;#experiment-1&#34;&gt;Experiment 1&lt;/a&gt;

).&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;experiment-1&#34;&gt;
    &lt;a href=&#34;#experiment-1&#34;&gt;
	Experiment 1
    &lt;/a&gt;
&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@white:~# ls -l /etc/passwd /etc/group
-rw-r--r--   1 root     root          281 Jul 15 14:39 /etc/group
-rw-r--r--   1 root     root         1163 Nov 28 15:30 /etc/passwd
root@white:~# chmod 000 /etc/passwd /etc/group
root@white:~# su - kris
kris@white:~$ ls -l /tmp
-rw-r--r--   1 0        0               5 Nov 23 13:36 lall
-rw-rw-rw-   1 60000    20             11 Nov 28 21:32 lpq.00002b98
drwxr-xr-x   2 0        0            1024 Nov 17 07:31 root
kris@white:~$ exit
root@white:~# chmod 644 /etc/passwd /etc/group
root@white:~# ls -l /tmp
-rw-r--r--   1 root     root            5 Nov 23 13:36 lall
-rw-rw-rw-   1 smbguest users          11 Nov 28 21:32 lpq.00002b98
drwxr-xr-x   2 root     root         1024 Nov 17 07:31 root
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Indem man kris die Leserechte auf die Dateien &lt;code&gt;/etc/passwd&lt;/code&gt; und &lt;code&gt;/etc/group&lt;/code&gt; entzieht, kann man demonstrieren, daß in einer I-Node nur numerische Information über Eigentümer und Gruppe einer Datei gespeichert wird.
ls kann diese Zahlen durch Zugriff auf die Paßwortdatenbank in Namen übersetzen.
Dazu existiert eine Familie von Bibliotheksfunktionen, die in &lt;code&gt;getpwent(3)&lt;/code&gt;, &lt;code&gt;getpwuid(3)&lt;/code&gt;, &lt;code&gt;getgrent(3)&lt;/code&gt; und &lt;code&gt;getgrgid(3)&lt;/code&gt; dokumentiert ist.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Zugriffe auf Dateien erfolgen durch den Kernel im Auftrag eines Prozesses.
Der Kernel entscheidet anhand der Rechtebits in der Inode der Datei einer Datei, ob er den Zugriff auf die Datei ausführen wird oder nicht.
Entscheidend für die Interpretation dieser Rechtebits ist noch, mit welcher UID und GID der Prozeß abläuft, der auf die Datei zugreifen möchte.
Wie man in &lt;code&gt;/usr/include/linux/sched.h&lt;/code&gt; nachlesen kann, hat ein &lt;code&gt;struct task_struct&lt;/code&gt; in Linux die Felder&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;	#define NGROUPS 32

	unsigned short uid,euid,suid,fsuid;
	unsigned short gid,egid,sgid,fsgid;
	int     groups[NGROUPS];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Linux unterscheidet sich hier von einem normalen UNIX:
Für Zugriffe auf Dateien sind die Felder &lt;code&gt;fsuid&lt;/code&gt;, &lt;code&gt;fsgid&lt;/code&gt; und &lt;code&gt;groups[]&lt;/code&gt; relevant, während ein normales UNIX &lt;code&gt;euid&lt;/code&gt; und &lt;code&gt;egid&lt;/code&gt; verwendet.
Natürlich unterscheidet sich Linux nicht so sehr von einem normalen UNIX, daß es inkompatibel wäre:
Normalerweise ist die &lt;code&gt;fsuid/fsgid&lt;/code&gt; mit der &lt;code&gt;euid/egid&lt;/code&gt; des Prozesses identisch.
Die Zugriffe auf Dateien erfolgen also mit der sogenannten effektiven User-ID und Group-ID eines Prozesses.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;#experiment-2&#34;&gt;Kasten 2&lt;/a&gt;

 zeigt, wie man feststellen kann, unter welchen IDs Zugriffe erfolgen.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;experiment-2&#34;&gt;
    &lt;a href=&#34;#experiment-2&#34;&gt;
	Experiment 2
    &lt;/a&gt;
&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kris@white:~$ id
uid=100(kris) gid=20(users) groups=20(users),11(floppy)
kris@white:~$ su -
Password:
root@white:~# id
uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel),11(floppy)
root@white:~# exit
kris@white:~$ id marit
uid=101(marit) gid=20(users) groups=11(floppy)
kris@white:~$ ls -l /tmp/bash
-rwsr-xr-x   1 root     root       295940 Nov 29 12:07 /tmp/bash
kris@white:~$ /tmp/bash
kris@white:~# id
uid=100(kris) gid=20(users) euid=0(root) groups=20(users),11(floppy)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Jemand, der als &lt;code&gt;kris&lt;/code&gt; eingeloggt ist, greift normalerweise mit der UID 100, der GID 20 und den Einträgen 20 und 11 im Feld &lt;code&gt;groups[]&lt;/code&gt; auf Dateien zu.
Ein Systemverwalter dagegen hat die UID und die GID 0 und noch weitere Einträge im Feld &lt;code&gt;groups[]&lt;/code&gt;.
Mit einem Usernamen als Parameter kann man auch die IDs anderer Benutzer abfragen.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Effektive&lt;/em&gt; und &lt;em&gt;reale&lt;/em&gt; UID und GID müssen nicht immer übereinstimmen:
Werden Programme mit gesetztem &lt;em&gt;Set User ID&lt;/em&gt;-Bit ausgeführt, kann sich die effektive UID eines Prozesses ändern - was &lt;em&gt;set user id&lt;/em&gt; genau ist und was das Bit bewirkt, werden wir später noch klären.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Wir halten fest:
Dateien haben genau einen Eigentümer und gehören zu genau einer Gruppe, während ein Prozeß einen Eigentümer hat, aber zu bis zu 32 Gruppen gehören kann.
Zugriffsrechte werden an Dateien in 12 Bit vermerkt.
Die Interpretation dieser 12 Bit hängt ab vom Typ der Datei und von der Identität des zugreifenden Prozesses.&lt;/p&gt;
&lt;h2 id=&#34;wo-werden-die-rechte-geprüft&#34;&gt;
    &lt;a href=&#34;#wo-werden-die-rechte-gepr%c3%bcft&#34;&gt;
	Wo werden die Rechte geprüft?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Linux prüft Zugriffsrechte mit Hilfe der Funktion &lt;code&gt;permission()&lt;/code&gt;.
Sie ist in &lt;code&gt;/usr/src/linux/fs/namei.c&lt;/code&gt; in den Zeilen 91 bis 114 definiert.
Ein Parameter von &lt;code&gt;permission()&lt;/code&gt; ist ein Zeiger auf die I-Node der Datei, auf die zugegriffen wird.
Außerdem muß der Funktion noch gesagt werden, welche Art von Zugriff auf die Datei gewünscht wird.
&lt;code&gt;/usr/include/linux/fs.h&lt;/code&gt; definiert dazu in den Zeilen 35 bis 37 die Werte MAY_EXEC, MAY_WRITE und MAY_READ, die zu einer mask zusammengebaut werden können.
Der &lt;a href=&#34;#experiment-3&#34;&gt;Kasten&lt;/a&gt;

 zeigt den Quelltext von &lt;code&gt;permission()&lt;/code&gt; und die Definitionen aus &lt;code&gt;fs.h&lt;/code&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;experiment-3&#34;&gt;
    &lt;a href=&#34;#experiment-3&#34;&gt;
	Experiment 3
    &lt;/a&gt;
&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/usr/src/linux/fs/namei.c:
    91  /*
    92   *      permission()
    93   *
    94   * is used to check for read/write/execute permissions on a file.
    95   * We use &amp;quot;fsuid&amp;quot; for this, letting us set arbitrary permissions
    96   * for filesystem access without changing the &amp;quot;normal&amp;quot; uids which
    97   * are used for other things..
    98   */
    99  int permission(struct inode * inode,int mask)
   100  {
   101          int mode = inode-&amp;gt;i_mode;
   102  
   103          if (inode-&amp;gt;i_op &amp;amp;&amp;amp; inode-&amp;gt;i_op-&amp;gt;permission)
   104                  return inode-&amp;gt;i_op-&amp;gt;permission(inode, mask);
   105          else if ((mask &amp;amp; S_IWOTH) &amp;amp;&amp;amp; IS_IMMUTABLE(inode))
   106                  return -EACCES; /* Nobody gets write access
                        to an immutable file */
   107          else if (current-&amp;gt;fsuid == inode-&amp;gt;i_uid)
   108                  mode &amp;gt;&amp;gt;= 6;
   109          else if (in_group_p(inode-&amp;gt;i_gid))
   110                  mode &amp;gt;&amp;gt;= 3;
   111          if (((mode &amp;amp; mask &amp;amp; 0007) == mask) || fsuser())
   112                  return 0;
   113          return -EACCES;
   114  }

/usr/include/linux/kernel.h:
    68  #define fsuser() (current-&amp;gt;fsuid == 0)

/usr/include/linux/fs.h:
    35  #define MAY_EXEC 1
    36  #define MAY_WRITE 2
    37  #define MAY_READ 4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Die Funktion &lt;code&gt;permission()&lt;/code&gt; ist der zentrale Kontrollpunkt für Zugriffsrechte.
An ihr kann man sehen, nach welchem Verfahren Linux die Zugriffsrechte prüft.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Der Algorithmus, nach dem &lt;code&gt;permission()&lt;/code&gt; die Zugriffsrechte prüft, ist sehr einfach:
Zunächst einmal (Zeile 103-104) wird festgestellt, ob für die zu prüfende I-Node im Feld &lt;code&gt;i_op-&amp;gt;permission()&lt;/code&gt; der I-Node Struktur eine dateisystemspezifische &lt;code&gt;permission()&lt;/code&gt;-Routine definiert ist.
Auf diese Weise können Dateisysteme, die erweiterte oder von UNIX verschiedene Zugriffsrechte implementieren, ihre eigene Routine zum Testen des Zugriffs bereitstellen.
Derzeit (Kernel 1.2.13) tut dies nur das ext2-Dateisystem mit der Funktion &lt;code&gt;ext2_permission()&lt;/code&gt;, die in &lt;code&gt;/usr/src/linux/fs/ext2/acl.c&lt;/code&gt; definiert ist (und die in Kernel 1.2.13 nichts anderes tut als Zeilen 107-113 der normalen &lt;code&gt;permission()&lt;/code&gt;-Funktion, also noch vollkommen sinnlos ist).&lt;/p&gt;
&lt;p&gt;Die Zeilen 105-106 prüfen dann, ob die Datei als immutable file (unveränderliche Datei) gekennzeichnet ist.
Wenn dies der Fall ist und in mask MAY_WRITE gesetzt ist, wird der Zugriff auf die Datei verweigert und der Fehler permission denied (EACCES) zurückgegeben.
Der Code verwendet in Zeile 105 seltsamerweise die Definition S_IWOTH (das Schreibrecht für other aus der Includedatei &lt;code&gt;linux/stat.h&lt;/code&gt;) anstatt korrekterweise die Definition MAY_WRITE zu verwenden.
Da aber beide Definitionen den Wert 2 haben, kommt es nicht zu einem Fehler.
Da das ext2-Dateisystem eine eigene &lt;code&gt;permission()&lt;/code&gt;-Routine bereitstellt, die den Test auf immutable files nicht enthält, kann man dort unveränderliche Dateien beschreiben.
Das ist ein Fehler, denn an anderen Stellen kennt das ext2-Dateisystemen &lt;code&gt;IS_IMMUTABLE()&lt;/code&gt; und nimmt Rücksicht darauf.&lt;/p&gt;
&lt;p&gt;Der entscheidende Code befindet sich dann in den Zeilen 107-113:
&lt;code&gt;current&lt;/code&gt; bezeichnet den &lt;code&gt;struct task&lt;/code&gt; des aktuellen Prozesses, also desjenigen Prozesses, der soeben versucht hat, auf eine Datei zuzugreifen und dessen Zugriffsrechte jetzt geprüft werden müssen.
Falls die &lt;code&gt;fsuid&lt;/code&gt; dieses Prozesses mit der &lt;code&gt;i_uid&lt;/code&gt; der Datei übereinstimmen, werden die Zugriffsrechte des linken &lt;code&gt;rwx&lt;/code&gt;-Tripels der Datei für die Rechteprüfung verwendet (Zeilen 107 und 108).
Andernfalls prüft Linux mit der Funktion &lt;code&gt;in_group_p()&lt;/code&gt;, ob irgendeine GID des aktuellen Prozesses mit der &lt;code&gt;i_gid&lt;/code&gt; der Datei übereinstimmt.
Ist dies der Fall, werden die Zugriffsrechte des mittleren &lt;code&gt;rwx&lt;/code&gt;-Tripels verwendet (Zeilen 109-110).
Ist weder eine Übereinstimmung der User- noch der Group-IDs zu finden, werden die Defaultzugriffsrechte aus dem rechten Tripel verwendet.&lt;/p&gt;
&lt;p&gt;Die Funktion &lt;code&gt;in_group_p()&lt;/code&gt; ist in &lt;code&gt;/usr/src/linux/kernel/sys.c&lt;/code&gt; in den Zeilen 585-599 definiert.
Sie testet, ob ihr Argument gleich der &lt;code&gt;fsgid&lt;/code&gt; des aktuellen Prozesses ist oder ob das Argument gleich einer der Gruppen aus dem &lt;code&gt;groups[]&lt;/code&gt;-Array des Prozesses ist.
Der Name der Funktion erklärt sich aus der &amp;ldquo;p-convention&amp;rdquo; (siehe Jargon-File, ursprünglich eine Sitte aus dem Bereich der LISP-Programmierung):
Es handelt sich um ein Prädikat, also eine Funktion, die entweder &lt;code&gt;true&lt;/code&gt; oder &lt;code&gt;false&lt;/code&gt; liefert, je nachdem ob die zu prüfende Aussage wahr oder falsch ist.&lt;/p&gt;
&lt;p&gt;Die Bedingung in Zeile 111 entscheidet jetzt, ob der Zugriff auf eine I-Node gewährt wird oder nicht.
Wenn mindestens die in &lt;code&gt;mask&lt;/code&gt; gewünschten Rechtebits in den durch &lt;code&gt;mode&lt;/code&gt; schon in Zeile 101 vorab ermittelten Rechten enthalten sind oder der Zugriff mit Superuser-Privilegien erfolgt (&lt;code&gt;fsuser()&lt;/code&gt; ist wahr), wird der Zugriff auf die Datei gewährt.
In allen anderen Fällen wird ein Fehler permission denied (EACCES) geliefert.&lt;/p&gt;
&lt;p&gt;Wir halten fest:
Einzelne Dateisysteme können besondere Rechteroutinen haben.
Im Normalfall gelten aber die Userrechte für den Eigentümer einer Datei, die Gruppenrechte für jeden, der Mitglied in der Gruppe der Datei ist und die Other-Rechte für alle anderen.
Die Prüfung dieser Rechte erledigt Linux an einer zentralen, leicht wartbaren Stelle im System.&lt;/p&gt;
&lt;h2 id=&#34;pfade-und-rechte-entlang-des-pfades&#34;&gt;
    &lt;a href=&#34;#pfade-und-rechte-entlang-des-pfades&#34;&gt;
	Pfade, und Rechte entlang des Pfades
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Alle UNIX-Kernelfunktionen, die mit Dateien hantieren, nehmen Pfadnamen als Parameter an.
Intern verwendet Linux jedoch wie alle Unices ausschließlich I-Nodes, um mit Dateien zu arbeiten.
Die Umwandlung eines Pfadnamens in eine I-Node übernimmt in Linux eine von mehreren leicht unterschiedlichen &lt;code&gt;namei()&lt;/code&gt;-Funktionen, die in &lt;code&gt;/usr/src/linux/fs/namei.c&lt;/code&gt; definiert sind.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;namei()&lt;/code&gt; bekommt, vereinfacht dargestellt, einen Pfadnamen und die I-Node eines Verzeichnisses als Startpunkt übergeben.
In diesem Verzeichnis wird mittels der Funktion &lt;code&gt;lookup()&lt;/code&gt; die I-Node der ersten Komponente des Pfadnamens gesucht.
Diese I-Node wird jetzt als Startpunkt genommen, um die nächste Komponente des Pfadnames durch &lt;code&gt;lookup()&lt;/code&gt; suchen zu lassen und so weiter bis zum Ende des Pfades.
Am Ende des Pfades ist das Ergebnis dieser Operation genau die I-Node des Verzeichnisses, das durch den Pfadnamen bezeichnet wird.&lt;/p&gt;
&lt;p&gt;Der Code von &lt;code&gt;lookup()&lt;/code&gt; ist nicht ganz so einfach wie diese Erklärung, weil er so unschöne Dinge wie Mountpoints, &amp;ldquo;..&amp;quot;-Komponenten im Pfadnamen und ungültige Pfadnamen berücksichtigen muß, aber er ist auch nicht sonderlich kompliziert.
Für unsere Zwecke sind jedoch nur wenige Zeilen von &lt;code&gt;lookup()&lt;/code&gt; wesentlich:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/usr/src/linux/fs/namei.c:
   163          perm = permission(dir,MAY_EXEC);

   181          if (perm != 0) {
   182                  iput(dir);
   183                  return perm;
   184          }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Um in einem Verzeichnis einen Namen nachschlagen zu können, muß der aufrufende Prozeß das &lt;code&gt;x&lt;/code&gt;-Recht an diesem Verzeichnis haben.
Hat er dieses &lt;code&gt;x&lt;/code&gt;-Recht nicht, schlägt der Aufruf fehl - ganz gleich, welche Kernelfunktion aufgerufen wurde.
Die Folgen können ziemlich fatal sein, wie &lt;a href=&#34;#experiment-4&#34;&gt;Experiment 4&lt;/a&gt;

 demonstriert.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;experiment-4&#34;&gt;
    &lt;a href=&#34;#experiment-4&#34;&gt;
	Experiment 4
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Warnung:&lt;/strong&gt;
Dieses Experiment darf nur durchgeführt werden, wenn in einem zweiten Fenster noch eine weitere Rootshell aktiv ist.
Andernfalls kann man sich so die Systeminstallation ruinieren.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kris@white:~$ ls -ld /
drwxr-xr-x  20 root     root         1024 Nov 29 22:29 /
kris@white:~$ su - 
root@white:~# chmod go-x /
root@white:~# ls -ld /
drwxr--r--  20 root     root         1024 Nov 29 22:29 /
root@white:~# exit
kris@white:~$ ls 
csh: /bin/ls: Permission denied
kris@white:~$ su
csh: /bin/su: Permission denied
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In einem anderen Fenster mit einer aktiven Rootshell:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@white:~# chmod 755 / 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Das Hauptverzeichnis &lt;code&gt;/&lt;/code&gt; hat normalerweise die Rechte 755.
Jeder Benutzer hat also &lt;code&gt;x&lt;/code&gt;-Recht am Verzeichnis &lt;code&gt;/&lt;/code&gt; und kann damit absolute Pfadnamen auflösen.
Nimmt man dem Root-Verzeichnis die &lt;code&gt;x&lt;/code&gt;-Rechte, kann kein normaler Benutzer mehr absolute Pfadnamen auflösen und jeder Aufruf eines Systemkommandos schlägt fehl.
Insbesondere ist auch kein &lt;code&gt;su&lt;/code&gt; mehr möglich, um die Operation rückgängig zu machen.
Daher muß schon vor dem Beginn des Experimentes eine zweite, aktive Rootshell bereitstehen, um die Zugriffsrechte wieder zu reparieren.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Wir halten fest:
Jede richtige Antwort auf die Frage &amp;ldquo;Welche Rechte braucht man, um mit einer Datei  eine bestimmte Operation (Öffnen, Löschen, Umbenennen und so weiter) durchführen zu können?&amp;rdquo; muß mit den Worten &amp;ldquo;Man braucht die &lt;code&gt;x&lt;/code&gt;-Rechte an den Verzeichnissen entlang des Pfades und &amp;hellip;&amp;rdquo; beginnen.
Ohne diese &lt;code&gt;x&lt;/code&gt;-Rechte kann der Pfadname von Linux nicht aufgelöst werden und was immer sich an seinem Ende befindet, ist nicht zugreifbar.
Weil wirklich jede Antwort mit diesem Halbsatz beginnen muß, wird er oft weggelassen - vergessen darf man ihn trotzdem nicht!
Die einzelne Operation (&lt;code&gt;open(2)&lt;/code&gt;, &lt;code&gt;unlink(2)&lt;/code&gt;, &lt;code&gt;rename(2)&lt;/code&gt; und so weiter) kann dann noch zusätzlich weitere Zugriffsrechte verlangen.&lt;/p&gt;
&lt;h2 id=&#34;lese--und-schreibrechte-an-dateien&#34;&gt;
    &lt;a href=&#34;#lese--und-schreibrechte-an-dateien&#34;&gt;
	Lese- und Schreibrechte an Dateien
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Welche Zugriffsrechte werden nun wirklich benötigt, um eine Datei zu öffnen?
Auch dies können wir im Linux-Kernel nachlesen:
In &lt;code&gt;/usr/src/linux/fs/open.c&lt;/code&gt; befindet sich der Code des Systemaufrufes &lt;code&gt;open(2)&lt;/code&gt;.
Die Funktion &lt;code&gt;sys_open()&lt;/code&gt;, die diese Kernelfunktion realisiert, ist nur sehr kurz.
Sie tut kaum mehr, als &lt;code&gt;do_open()&lt;/code&gt; in derselben Datei mit den richtigen Parametern aufzurufen.
Der Code von &lt;code&gt;do_open()&lt;/code&gt; beschäftigt sich hauptsächlich mit der Verwaltung der Dateitabelle des Kernels und ist für die Klärung unserer Frage nicht interessant.&lt;/p&gt;
&lt;p&gt;Die eigentliche Arbeit des Öffnens der Datei überläßt er der Funktion &lt;code&gt;open_namei()&lt;/code&gt;, die wie bereits erklärt, den filename in eine I-Node umwandelt.
Der Aufruf findet sich in Zeile 442 in &lt;code&gt;open.c&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;   442          error = open_namei(filename,flag,mode,&amp;amp;inode,NULL);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Dabei ist &lt;code&gt;filename&lt;/code&gt; der Name der zu öffnenden Datei, &lt;code&gt;flag&lt;/code&gt; der Modus, in dem die Datei geöffnet werden soll (O_RDONLY, O_CREAT und so weiter) und &lt;code&gt;mode&lt;/code&gt; ist nur interessant, wenn die Datei angelegt werden soll:
Dann soll sie mit den in &lt;code&gt;mode&lt;/code&gt; angegebenen Wunschrechten angelegt werden.
In &lt;code&gt;inode&lt;/code&gt; liefert die Funktion die I-Node der geöffneten Datei  zurück.&lt;/p&gt;
&lt;p&gt;Der Code von &lt;code&gt;open_namei()&lt;/code&gt; steht dann in &lt;code&gt;/usr/src/linux/fs/namei.c&lt;/code&gt;, von dem wir uns ja weiter oben schon Teile angesehen haben.
&lt;code&gt;open_namei()&lt;/code&gt; ist eine lange Funktion, sie erstreckt sich von Zeile 333 bis Zeile 439.
Die Umwandlung des &lt;code&gt;filename&lt;/code&gt;-Parameters in die &lt;code&gt;inode&lt;/code&gt; erfolgt in zwei Schritten.
In einem ersten Schritt wird mithilfe von &lt;code&gt;dir_namei()&lt;/code&gt; erst einmal die I-Node des Verzeichnisses lokalisiert, in dem sich die zu öffnende Datei befindet.
Der zweite Schritt ist dann leicht unterschiedlich, je nachdem, ob die die öffnende Datei bereits existiert oder ob sie wegen eines gesetzten O_CREAT erst noch erzeugt werden muß.&lt;/p&gt;
&lt;p&gt;In Zeile 342 von &lt;code&gt;namei.c&lt;/code&gt; wird zunächst die I-Node des Verzeichnisses lokalisiert, in dem eine Datei geöffnet werden soll. Das ist der erste Schritt zum Öffnen der Datei.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;   342          error = dir_namei(pathname,&amp;amp;namelen,&amp;amp;basename,base,&amp;amp;dir);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Dabei wird von &lt;code&gt;dir_namei()&lt;/code&gt; die Variable &lt;code&gt;basename&lt;/code&gt; mit dem Namen der Datei im Verzeichnis belegt, &lt;code&gt;namelen&lt;/code&gt; mit der Länge dieses Namens. &lt;code&gt;dir&lt;/code&gt; ist ein Zeiger auf die I-Node des Verzeichnisses, indem die Datei geöffnet werden soll, das eigentliche Ergebnis dieses Aufrufes (und wird in Zeile 361 weiterverwendet).
Wenige Zeilen später wird fallweise unterschieden, ob eine Datei angelegt werden soll oder nicht (Zeile 359).&lt;/p&gt;
&lt;p&gt;Soll eine Datei angelegt werden, muß überprüft werden, ob eine Datei dieses Namens schon existiert (Zeile 361).
Wenn dies der Fall ist und außerdem O_EXCL als Parameter beim &lt;code&gt;open()&lt;/code&gt; angegeben war, muß das &lt;code&gt;open()&lt;/code&gt; fehlschlagen (Zeile 362-366).&lt;/p&gt;
&lt;p&gt;Existiert die Datei im Verzeichnis noch nicht, kann versucht werden, sie zu erzeugen.
Dazu müssen w- und x-Recht am Verzeichnis vorhanden sein, daß die Datei einmal enthalten soll (Zeile 367).
Außerdem muß eine &lt;code&gt;create&lt;/code&gt;-Funktion in den I-Node-Operations für das Verzeichnis definiert sein (Zeile 369-370).
Ist dies nicht der Fall, wird ebenfalls  &lt;code&gt;permission denied&lt;/code&gt; gemeldet.&lt;/p&gt;
&lt;p&gt;Auf Dateisystemen, die read-only angemeldet sind, dürfen selbstverständlich ebenfalls keine Dateien angelegt werden (Zeile 371-372).
Erst wenn alle diese Vorbedingungen erfüllt sind, darf die Datei wirklich angelegt werden und ist damit geöffnet.&lt;/p&gt;
&lt;p&gt;Wir halten fest: Um eine Datei in einem Verzeichnis neu anlegen zu können, wird also das x-Recht an allen Verzeichnissen entlang des Pfades dieser Datei benötigt und das w- und das x-Recht an dem Verzeichnis, in dem die Datei neu anzulegen ist.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;   359          if (flag &amp;amp; O_CREAT) {
   361                  error = lookup(dir,basename,namelen,&amp;amp;inode);
   362                  if (!error) {
   363                          if (flag &amp;amp; O_EXCL) {
   364                                  iput(inode);
   365                                  error = -EEXIST;
   366                          }
   367                  } else if ((error = permission(dir,
                                              MAY_WRITE | MAY_EXEC)
   368                          ;       /* error is already set! */
   369                  else if (!dir-&amp;gt;i_op || !dir-&amp;gt;i_op-&amp;gt;create)
   370                          error = -EACCES;
   371                  else if (IS_RDONLY(dir))
   372                          error = -EROFS;
   373                  else {
   
   375                          error = 
                     dir-&amp;gt;i_op-&amp;gt;create(dir,basename,namelen,mode,res_inode);
   
   379                  }
   381          } else
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Soll dagegen eine bereits existierende Datei geöffnet werden, muß zunächst ihr Name im Verzeichnis gesucht werden, um eine I-Node für diese Datei zu bekommen (Zeile 382).&lt;/p&gt;
&lt;p&gt;Es kann sein, daß die so gefundene I-Node nicht die I-Node der wirklich zu öffnenden Datei ist, sondern daß es sich um ein Symlink handelt.
Ein Aufruf von &lt;code&gt;follow_link()&lt;/code&gt; regelt dies (Zeile  387).&lt;/p&gt;
&lt;p&gt;Der folgende Code stellt dann sicher, daß ein Verzeichnis niemals zum Schreiben geöffnet werden darf (Zeile 390-393).
Wäre dies nicht so, könnte man in Verzeichnissen beliebige I-Node-Nummern eintragen und so die Zugriffsrechte entlang des Pfades unterlaufen.&lt;/p&gt;
&lt;p&gt;Der eigentliche Rechtetest erfolgt dann in den Zeilen 394-397, in denen die gewünschten Zugriffsrechte in &lt;code&gt;flag&lt;/code&gt; mit den vorhandenen Rechten in der inode verglichen werden.
Nach diesen Zeilen folgt weiterer Code, der Gerätedateien in mit &lt;code&gt;nodev&lt;/code&gt; gemounteten Dateisystemen, read-only Dateisysteme, append-only Files und die Option O_TRUNC beim Öffnen behandelt, uns hier aber bei unserer Frage nichts neues bringt.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;   382                  error = lookup(dir,basename,namelen,&amp;amp;inode);

   387          error = follow_link(dir,inode,flag,mode,&amp;amp;inode);

   390          if (S_ISDIR(inode-&amp;gt;i_mode) &amp;amp;&amp;amp; (flag &amp;amp; 2)) {
   391                  iput(inode);
   392                  return -EISDIR;
   393          }
   394          if ((error = permission(inode,ACC_MODE(flag))) != 0) {
   395                  iput(inode);
   396                  return error;
   397          }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Wir halten fest: Beim Öffnen einer vorhandenen Datei wird das x-Recht an allen Verzeichnisses entlang des Pfade dieser Datei benötigt und das passende r- und/oder w-Recht an der Datei selbst.&lt;/p&gt;
&lt;p&gt;Offenbar ist das Öffnen einer Datei und die Kontrolle der Zugriffsrechte für ein Betriebssystem eine recht anstrengende und langsame Angelegenheit.
Neben der zeitraubenden Umwandlung von Pfadnamen in I-Nodes müssen auch noch zahlreiche Rechteflags an allen Verzeichnissen und an der Datei selbst kontrolliert werden und zahlreiche Sonderfälle berücksichtigt werden.&lt;/p&gt;
&lt;p&gt;Zum Glück ist dieser ganze Aufwand auf das Öffnen einer Datei beschränkt.
Ist die Datei erst einmal geöffnet, findet keine weitere Rechtekontrolle mehr statt. &lt;code&gt;read()&lt;/code&gt; und &lt;code&gt;write()&lt;/code&gt; können sich also auf ihre eigentliche Aufgabe, das Datenschaufeln, konzentrieren und müssen sich nicht mit der Kontrolle von Zugriffsrechten herumschlagen.&lt;/p&gt;
&lt;h2 id=&#34;ausführungsrechte-an-dateien&#34;&gt;
    &lt;a href=&#34;#ausf%c3%bchrungsrechte-an-dateien&#34;&gt;
	Ausführungsrechte an Dateien
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um das x-Recht an Dateien zu verstehen, müssen wir uns den Systemaufruf &lt;code&gt;execve(2)&lt;/code&gt; ansehen.
Dieser Systemaufruf ist die einzige Methode, um in UNIX ein neues Programm zu laden.
In Linux, das auf mehr als einer Prozessorplattform ablaufen kann, ist ein Teil des Aufrufes systemspezifisch.
Für Intel-Prozessoren befindet sich in &lt;code&gt;/usr/src/linux/arch/i386/kernel/process.c&lt;/code&gt; der Code von &lt;code&gt;sys_execve()&lt;/code&gt;, der die Parameter des Systemaufrufes beschafft und dann den plattformunabhängigen Code in &lt;code&gt;/usr/src/linux/fs/exec.c&lt;/code&gt; aufruft.
Der Funktion &lt;code&gt;do_execve()&lt;/code&gt; werden außer dem Namen der zu startenden Binärdatei auch noch ein Feld von Parameterstrings und ein Feld von Environmentvariablen sowie ein Satz initiale Prozessorregister mitgegeben.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;do_execve()&lt;/code&gt; beschafft sich durch einen Aufruf von &lt;code&gt;open_namei()&lt;/code&gt; zunächst einmal die I-Node der auszuführenden Datei.
Weiter oben ist schon gezeigt worden, daß dies nur gelingen kann, wenn auf allen Verzeichnissen entlang des Pfades zu dieser Datei x-Rechte vorhanden sind.&lt;/p&gt;
&lt;p&gt;Der folgende Code stellt sicher, daß die ausführbare Datei ein &lt;code&gt;regular file&lt;/code&gt; ist.
Wenn das Dateisystem mit der Option &lt;code&gt;noexec&lt;/code&gt; gemountet ist, schlägt der Aufruf von &lt;code&gt;execve()&lt;/code&gt; in jedem Fall fehl, ebenso wenn der Superblock zugehörigen Dateisystems nicht erreichbar ist.&lt;/p&gt;
&lt;p&gt;Nach diesen elementaren Überprüfungen folgt der Code, der &lt;em&gt;set user id/set group id&lt;/em&gt; handhabt und das x-Recht testet.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;ausführungsrecht-und-suidsgid-beim-execve-systemaufrufh3&#34;&gt;
    &lt;a href=&#34;#ausf%c3%bchrungsrecht-und-suidsgid-beim-execve-systemaufrufh3&#34;&gt;
	Ausführungsrecht und SUID/SGID beim execve() Systemaufruf&lt;/h3&gt;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/usr/src/linux/fs/exec.c:
   586          i = bprm.inode-&amp;gt;i_mode;
   587          if (IS_NOSUID(bprm.inode) &amp;amp;&amp;amp; (((i &amp;amp; S_ISUID)
                &amp;amp;&amp;amp; bprm.inode-&amp;gt;i_uid != current-&amp;gt;
   588              euid) || ((i &amp;amp; S_ISGID) 
                &amp;amp;&amp;amp; 	!in_group_p(bprm.inode-&amp;gt;i_gid))) &amp;amp;&amp;amp; !suser()) {
   589                  retval = -EPERM;
   590                  goto exec_error2;
   591          }
   592          /* make sure we don&#39;t let suid, sgid files be ptraced. */
   593          if (current-&amp;gt;flags &amp;amp; PF_PTRACED) {
   594                  bprm.e_uid = current-&amp;gt;euid;
   595                  bprm.e_gid = current-&amp;gt;egid;
   596          } else {
   597                  bprm.e_uid = 
                        (i &amp;amp; S_ISUID) ? bprm.inode-&amp;gt;i_uid : current-&amp;gt;euid;
   598                  bprm.e_gid = 
                        (i &amp;amp; S_ISGID) ? bprm.inode-&amp;gt;i_gid : current-&amp;gt;egid;
   599          }
   600          if ((retval = permission(bprm.inode, MAY_EXEC)) != 0)
   601                  goto exec_error2;
   602          if (!(bprm.inode-&amp;gt;i_mode &amp;amp; 0111) &amp;amp;&amp;amp; fsuser()) {
   603                  retval = -EACCES;
   604                  goto exec_error2;
   605          }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Im Rahmen der Funktion &lt;code&gt;do_execve()&lt;/code&gt; werden das SUID- und SGID-Bit der auszuführenden Datei geprüft und Linux bestimmt, unter welcher euid und egid das Programm zur Ausführung kommt.
Danach wird getestet, ob ausreichende Rechte vorhanden sind, um das Programm starten zu dürfen.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Zunächst bestimmt der Kernel die Rechtebits der auszuführenden Datei (Zeile 586).
Falls das Dateisystem, auf dem sich diese Datei befindet, mit der Option &lt;code&gt;nosuid&lt;/code&gt; angemeldet ist und die Ausführung der Datei einen Wechsel der effektiven User-ID oder Group-ID bewirken würde, darf nur der Superuser die Datei ausführen (Zeilen 587-591).
Danach wird bestimmt, unter welcher UID und GID das neue Programm zur Ausführung kommen wird.&lt;/p&gt;
&lt;p&gt;Falls das Programm zur Zeit mittels &lt;code&gt;ptrace()&lt;/code&gt; in einem Debugger bearbeitet wird, werden sich seine Rechte nicht ändern (Zeilen 592-595).
Auf diese Weise wird verhindert, daß man durch tracen eines SUID-Programmes und nachträgliches Verändern seines Codes zusätzliche Rechte gewinnen könnte.&lt;/p&gt;
&lt;p&gt;Bei normalen Programmen (Zeilen 596-599) wird die effektive UID aus der I-Node der auszuführenden Datei übernommen, wenn das SUID-Bit an der Datei gesetzt ist, andernfalls wird die UID des Vorläufers ererbt.
Analog wird mit der GID verfahren.&lt;/p&gt;
&lt;p&gt;Der Kernel wird das Programm jedoch nur ausführen, wenn die &lt;code&gt;permission()&lt;/code&gt;-Funktion feststellt, das MAY_EXEC-Recht vorhanden ist (Zeilen 600-601).
Auch ein Superuser kann eine Datei nicht als Programm starten, wenn nicht wenigstens irgendein x-Recht an der Datei vorhanden ist (Zeilen 602-603).&lt;/p&gt;
&lt;p&gt;Der folgende, sehr umfangreiche Code beschäftigt sich dann mit dem Handling von Shellscripten, die durch einen #!-Kommentar eingeleitet werden.
Erst ab Zeile 701 kann der Kernel versuchen, tatsächlich ein Programm mit den gegebenen Eigenschaften auszuführen.&lt;/p&gt;
&lt;p&gt;Wir halten fest:
Um ein Programm starten zu dürfen, muß außer den x-Rechten an den Verzeichnissen entlang des Pfades auch das x-Recht an der Datei vorhanden sein.
Ein Superuser kann eine Datei immerhin dann als Programm starten, wenn wenigsten irgendein x-Recht an der Datei vorhanden ist.
Wenn das SUID-Bit an der zu startenden Datei gesetzt ist, wird die Datei unter der &lt;code&gt;euid&lt;/code&gt; des Dateieigentümers ausgeführt, sonst unter der &lt;code&gt;euid&lt;/code&gt; des aufrufenden Prozesses - Prozesse mit einer bestehenden Verbindung zu einem Debugger werden jedoch aus Sicherheitsgründen immer nur unter der &lt;code&gt;euid&lt;/code&gt; des aufrufenden Prozesses ausgeführt.
Analog wird auch mit dem SGID-Bit verfahren.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;experiment-5&#34;&gt;
    &lt;a href=&#34;#experiment-5&#34;&gt;
	Experiment 5
    &lt;/a&gt;
&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@white:/tmp# cat &amp;gt;&amp;gt; x
#! /bin/sh --

id
root@white:/tmp# chmod 6555 x
root@white:/tmp# ls -l x
-r-sr-sr-x   1 root     root           18 Dec 10 21:14 x
root@white:/tmp# exit
kris@white:~$ /tmp/x
uid=100(kris) gid=20(users) groups=20(users),11(floppy)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Shellscripte mit gesetztem SUID- und SGID-Bit werden trotzdem mit normalen euid- und egid-Werten aufgerufen.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href=&#34;#experiment-5&#34;&gt;Experiment 5&lt;/a&gt;

 zeigt, wie der Kernel mit Shellscripten umgeht, die mit SUID- oder SGID-Rechten versehen sind.
Das liegt daran, daß bei der Interpretation von #!-Zeichen der Name des auszuführenden Programmes verändert wird und danach der &lt;code&gt;execve()&lt;/code&gt;-Aufruf komplett neu gestartet wird.
Aus dem Aufruf von &lt;code&gt;/tmp/x&lt;/code&gt; wird so durch die Interpretation der #!-Zeile der Aufruf &lt;code&gt;/bin/sh -- /tmp/x&lt;/code&gt;, der vom Kernel komplett neu bewertet wird.&lt;/p&gt;
&lt;p&gt;An &lt;code&gt;/bin/sh&lt;/code&gt; ist aber weder das SUID- noch das SGID-Bit gesetzt, also wird die Shell mit normalen Rechten gestartet.
Daß es sich bei einem Parameter des Aufrufes um den Namen einer Datei handelt, an der SUID und SGID gesetzt sind, darf den Kernel nicht interessieren und die Shell wertet es nicht aus - sie könnte es auch nicht, wenn sie wollte.
Dieser Effekt ist durchaus beabsichtigt: Ein nichttriviales Shellscript zu schreiben, daß sicher und ohne Lücken für eventuelle Hacker unter einer fremden User-ID laufen kann, ist so gut wie unmöglich.&lt;/p&gt;
&lt;h2 id=&#34;rückblick&#34;&gt;
    &lt;a href=&#34;#r%c3%bcckblick&#34;&gt;
	Rückblick
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wie wir gesehen haben, findet die Kontrolle der Zugriffsrechte an Dateien in Linux so gut es geht zentral statt.
Wenige Funkionen wie &lt;code&gt;permission()&lt;/code&gt; und die Funktionen der &lt;code&gt;namei()&lt;/code&gt;-Familie spielen dabei eine sehr wichtige Rolle.
Trotzdem muß jeder Systemaufruf noch für sich selbst die Rechte des aufrufenden Prozesses an der Datei testen, die durch den Systemaufruf manipuliert werden soll.
Dabei müssen viele Sonderfälle wie &lt;em&gt;immutable files&lt;/em&gt;, &lt;em&gt;append only directories&lt;/em&gt; und andere exotische Dinge beachtet werden.
Wollte man eine vollständige und genaue Aufstellung von Zugriffsrechten in Linux machen, müßte man eine Liste von Systemaufrufen machen und für jeden Systemaufruf eine vollständige Liste von Vorbedingungen aufschreiben.
Ein Eintrag würde sich dann in etwa so lesen:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;unlink:&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;unlink()&lt;/code&gt; löscht eine Datei mit einem gegebenen Pfadnamen, wenn alle Verzeichnisse entlang des Pfades x-Recht haben, der Name der Datei im letzten Verzeichnis nicht leer (&amp;quot;&amp;quot;) ist, das Dateisystem nicht read only ist, am enthaltenden Verzeichnis w- und x-Recht bestehen, das enthaltende Verzeichnis nicht append only ist und für die I-Node der Datei eine unlink()-Operation definiert ist. Diese unlink()-Operation kann jedoch noch weitere Bedingungen an die Entfernung einer Datei stellen (das ext2-Dateisystem macht dies zum Beispiel, wenn das t-Bit am enthaltenden Verzeichnis gesetzt ist).&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Letztendlich wird eine solche Tabelle jedoch sehr unübersichtlich und lang.
Man sieht, daß Zugriffsrechte in UNIX im allgemeinen und Linux im besonderen nur auf den ersten Blick einfach und harmlos aussehen.
Wenn man über das einfache &lt;code&gt;rwx&lt;/code&gt; hinausgeht, wird die ganze Angelegenheit ziemlich kompliziert und unübersichtlich, da viele Sonderfälle betrachtet werden müssen.
Zum Glück kommen solche Sonderfälle in einer normalen Installation nur sehr selten vor, denn sonst würde das eingangs erwähnte Kapitel 2 eines UNIX-Handbuches sehr lang werden &amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Samba</title>
      <link>https://blog.koehntopp.info/1996/01/11/samba.html</link>
      <pubDate>Thu, 11 Jan 1996 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1996/01/11/samba.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;erschienen in der iX 1/96&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#samba-19&#34;&gt;Text des Artikels&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#samba-im-internet&#34;&gt;Samba im Internet&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#eine-standardkonfiguration&#34;&gt;Eine Standardkonfiguration&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;samba-19&#34;&gt;
    &lt;a href=&#34;#samba-19&#34;&gt;
	Samba 1.9
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h4 id=&#34;samba-ist-ein-softwarepaket-für-unix-das-microsoft-lan-manager-server-funktionen-erbringt-ursprünglich-von-andrew-tridgell-einem-studenten-an-der-australian-national-university-canberra-erstellt-ist-es-inzwischen-unter-der-gnu-general-public-license-verfügbar&#34;&gt;
    &lt;a href=&#34;#samba-ist-ein-softwarepaket-f%c3%bcr-unix-das-microsoft-lan-manager-server-funktionen-erbringt-urspr%c3%bcnglich-von-andrew-tridgell-einem-studenten-an-der-australian-national-university-canberra-erstellt-ist-es-inzwischen-unter-der-gnu-general-public-license-verf%c3%bcgbar&#34;&gt;
	Samba ist ein Softwarepaket für Unix, das Microsoft Lan Manager Server-Funktionen erbringt. Ursprünglich von Andrew Tridgell, einem Studenten an der Australian National University, Canberra erstellt, ist es inzwischen unter der GNU General Public License verfügbar.
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Andrew Tridgell, ein Student an der Australian National University Canberra, stand Ende 1991 vor dem Problem, einen Fileserver für SUN Workstations haben zu müssen, der zu DEC Pathworks für kompatibel ist.
Ohne Informationen über die Art des verwendeten Protokolls zu haben, gelang es ihm schon nach wenigen Tagen, das verwendete Protokoll in Teilen zu reverse engineeren.
Erst nachdem eine allererste Version seines Servers schon fertiggestellt war, wies man ihn auf das in RFC 1001 und 1002 definierte &amp;ldquo;NetBIOS on a TCP/UDP transport&amp;rdquo; Protokoll hin.
Im Januar wurde die erste Version seines &amp;ldquo;Server 0.1&amp;rdquo; Paketes auf dem Netz veröffentlicht.
Es sollte jedoch noch bis Ende 1993 dauern, bis Tridgell durch den Einsatz von Linux und die Notwendigkeit, mit PCs unter DOS, Windows und OS/2 zu kommunizieren, die Weiterentwicklung von Samba wieder aufnahm.&lt;/p&gt;
&lt;p&gt;Heute ist Samba ein relativ ausgereiftes, standardkonformes und vor allen Dingen hochportables Softwarepaket, das auf den meisten UNIX-Versionen problemlos installierbar ist und die Möglichkeit bietet, Verzeichnisse und Drucker an PC-Betriebssysteme zu exportieren.
Samba konkurriert hier mit dem von SUN definierten Network File System (NFS).&lt;/p&gt;
&lt;p&gt;Für den Systemadministrator in einem heterogenen Netzwerk von UNIX-Servern und Client-PCs ist Samba dabei wahrscheinlich attraktiver als NFS, denn in den meisten Fällen stehen wenigen UNIX-Servern viele Client-PCs gegenüber.
Beim Einsatz von NFS könnte zwar das mit den meisten UNIX-Versionen mitgelieferte Serverpaket verwendet werden, aber für die Clients müßten nicht nur viele Client-Lizenzen von PC-NFS oder etwas vergleichbarem angeschafft werden, sondern diese Software müßte auch netzwerkweit installiert und gewartet werden.
Windows für Workgroups, Windows 95, Windows NT und OS/2 sprechen aber schon von Haus aus das Lan Manager Protokoll und so ist es effizienter, den wenigen Servern dieses Protokoll beizubringen und auf den Clients mitgelieferte Software zu verwenden.
Diesen Weg geht Samba.&lt;/p&gt;
&lt;p&gt;Da der Samba-Server ein reiner Usermode-Server ist, also ein ganz normales Anwendungsprogramm, ist es möglich, auch Verzeichnisse per Samba zu reexportieren, die der Server per NFS gemountet hat.
Auf diese Weise entsteht eine Protokollbrücke von NFS nach SMB.
Dabei ist natürlich der Performanceverlust durch doppelten Netzzugriff in Kauf zu nehmen.
Auf der anderen Seite ist Samba unter der GNU GPL frei zur Verfügung stehende Software und so steht der Installation des Samba-Servers auf allen Servermaschinen nichts im Weg.&lt;/p&gt;
&lt;p&gt;Es soll jedoch nicht verschwiegen werden, daß Samba aus der Sicht eines UNIX-Systemverwalters schwerwiegende Nachteile hat.
Als Protokoll, das in der PC-Welt entstanden ist, kennt Samba kein Konzept eines Dateieigentümers.
Die Zugriffe auf Ressourcen erfolgen oft mit unklaren Userrechten oder scheinbar willkürlich gewählten Paßworten.
Betriebssysteme wie Windows für Workgroups und Windows&#39;95, die dem Benutzer zwar einen Namen geben, dann aber Netzwerkzugriffe ohne oder unter anderen Namen erzeugen, machen die Sache nicht leichter.
Dazu kommt, daß die Familie der Windows-Betriebssysteme die Groß-/Kleinschreibung von Paßworten in einigen Kombinationen von Betriebssystem/Paßwort verändern.
Samba hat eine ganze Reihe Mechanismen, um diesem Problem abzuhelfen, aber der Verwaltungsaufwand ist anfangs trotzdem höher als bei einer typischen NFS-Installation.&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1996/01/SuperNOS.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Novell hat versucht, das Super Network Operating System durch Verschmelzung der zugekauften UNIX-Quellen mit ihrem eigenen Serverbetriebssystem zu bauen und ist gescheitert. Klammheimlich hat das frei verfügbare Linux gelernt, die meisten Netzwerkprotokolle zu sprechen und ist auf dem besten Wege, eben dieses SuperNOS zu werden.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;
    &lt;a href=&#34;#installation&#34;&gt;
	Installation
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Installation gestaltet sich relativ einfach.
Nach dem Auspacken ist das Makefile im &lt;code&gt;source/&lt;/code&gt;-Verzeichnis nach den eigenen Wünschen anzupassen.
Dabei ist es hilfreich, nicht nur die gewünschten Pfadnamen einzutragen, sondern auch schon den Namen der gewünschten Arbeitsgruppe in der Variablen &lt;code&gt;WORKGROUP&lt;/code&gt; einzutragen und einen speziellen  Gastaccount, der nur für SMB genutzt wird, in &lt;code&gt;GUESTACCOUNT&lt;/code&gt; einzucompilieren.
Diese Defaults sind zwar auch zur Laufzeit änderbar, aber anpassen im Quelltext erspart das Schreiben von Konfigurationsdateien.
Weiterhin sind noch die gewünschten &lt;code&gt;make&lt;/code&gt;-Optionen für den verwendeten Betriebssystemtyp zu aktivieren.
Danach steht einem &lt;code&gt;make&lt;/code&gt; nichts mehr im Wege.&lt;/p&gt;
&lt;p&gt;Erzeugt werden die Programme&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;nmbd:&lt;/dt&gt;
&lt;dd&gt;NetBios Name Server. Der Name Server ist in der Lage, Hostnamen auf IP-Nummern abzubilden. Gleichzeitig steuert das Programm aber auch das Browsing, d.h. die Anzeige von exportierten Diensten und übernimmt damit Aufgaben, die bei NFS der &lt;code&gt;mountd&lt;/code&gt; wahrnehmen würde.&lt;/dd&gt;
&lt;dt&gt;nmblookup:&lt;/dt&gt;
&lt;dd&gt;NetBios Name Lookup. Das Programm nimmt in etwa dieselbe Funktion wahr wie &lt;code&gt;nslookup&lt;/code&gt; für das DNS, fragt jedoch einen &lt;code&gt;nmbd&lt;/code&gt; ab.&lt;/dd&gt;
&lt;dt&gt;smbclient:&lt;/dt&gt;
&lt;dd&gt;Samba Client. Dient dazu, auf Linux-Seite einen SMB Server zu connecten und Dateien zu übertragen. Die Steuerung erfolgt ähnlich wie bei FTP. Linux bietet auch ein echtes, kernelbasiertes &lt;code&gt;smbfs&lt;/code&gt; an, mit dem man einen Server richtig mounten kann. Andere Betriebssysteme sind auf den &lt;code&gt;smbclient&lt;/code&gt; angewiesen.&lt;/dd&gt;
&lt;dt&gt;smbd:&lt;/dt&gt;
&lt;dd&gt;Der eigentliche Fileserver.&lt;/dd&gt;
&lt;dt&gt;smbpasswd:&lt;/dt&gt;
&lt;dd&gt;Ein Hilfsprogramm des &lt;code&gt;smbd&lt;/code&gt;, mit dem Benutzer vom Client aus ihr Paßwort ändern können sollen. Es hat nur dann Funktion, wenn Samba mit der &lt;code&gt;libdes&lt;/code&gt; und verschlüsselten Paßworten (siehe &lt;strong&gt;Samba im Internet&lt;/strong&gt;) übersetzt wurde.&lt;/dd&gt;
&lt;dt&gt;smbrun:&lt;/dt&gt;
&lt;dd&gt;Ein Hilfsprogramm des &lt;code&gt;smbd&lt;/code&gt;, mit dem Samba zu Beginn und Ende einer Serverconnection Logbucheinträge erzeugt.&lt;/dd&gt;
&lt;dt&gt;smbstatus:&lt;/dt&gt;
&lt;dd&gt;Ein sehr einfaches Programm zur Anzeige des Status aller zum Server bestehenden Verbindungen.&lt;/dd&gt;
&lt;dt&gt;smbtar:&lt;/dt&gt;
&lt;dd&gt;Ein Shellscript, das &lt;code&gt;smbclient&lt;/code&gt; verwendet und das ein von einem PC exportiertes Verzeichnis mit &lt;code&gt;tar&lt;/code&gt; auf dem Bandlaufwerk des UNIX-Servers sichert.&lt;/dd&gt;
&lt;dt&gt;testparm:&lt;/dt&gt;
&lt;dd&gt;Syntaxchecker für die Konfigurationsdatei.&lt;/dd&gt;
&lt;dt&gt;testprns:&lt;/dt&gt;
&lt;dd&gt;Syntaxchecker für die Druckerkonfiguration.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1996/01/programme.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Samba besteht aus einer Reihe von Programmen, die zum Betrieb des Servers (Server-Tools) oder zu seinem Test (Client-Tools) dienen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ein &lt;code&gt;make install&lt;/code&gt; installiert diese Programme und die Manualpages dann im gewünschten Verzeichnis.
Damit der Server in Betrieb genommen werden kann, müssen &lt;code&gt;nmbd&lt;/code&gt; und &lt;code&gt;smbd&lt;/code&gt; entweder als permanent laufende Dämonen gestartet werden oder über passende Einträge in der &lt;code&gt;/etc/inetd.conf&lt;/code&gt; bei Bedarf hochgezogen werden.&lt;/p&gt;
&lt;p&gt;Für letzteres sind die Einträge&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;netbios-ns      137/tcp                         # NETBIOS Name Service
netbios-ns      137/udp
netbios-dgm     138/tcp                         # NETBIOS Datagram Service
netbios-dgm     138/udp
netbios-ssn     139/tcp                         # NETBIOS session service
netbios-ssn     139/udp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;in der Datei &lt;code&gt;/etc/services&lt;/code&gt; notwendig. Dazu passen dann die Zeilen&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# SMB Samba File Server
#
netbios-ssn stream tcp  nowait  root    /usr/local/samba/bin/smbd smbd 
netbios-ns  dgram  udp  wait    root    /usr/local/samba/bin/nmbd nmbd -H /usr/local/samba/lib/lmhosts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;in der &lt;code&gt;/etc/inetd.conf&lt;/code&gt;.
Der &lt;code&gt;inetd&lt;/code&gt; muß nach einer Änderung in seiner Konfigurationsdatei durch ein &lt;code&gt;SIGHUP&lt;/code&gt; geweckt werden, damit er die Datei neu einliest.&lt;/p&gt;
&lt;h2 id=&#34;tests-mit-einer-einfachen-konfiguration&#34;&gt;
    &lt;a href=&#34;#tests-mit-einer-einfachen-konfiguration&#34;&gt;
	Tests mit einer einfachen Konfiguration
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Durch die Verwendung einer &lt;code&gt;lmhosts&lt;/code&gt;-Datei kann der Samba-Server als Nameserver für ein Lan Manager Netzwerk dienen.
Die &lt;code&gt;lmhosts&lt;/code&gt;-Datei entspricht dabei in ihren ersten beiden Spalten einer normalen Hosts-Datei:
In der ersten Spalte wird eine IP-Nummer genannt, der in der zweiten Spalte ein Name zugeordnet wird.
Mit einer optionalen, dritten Spalte können für einzelne Namen bestimmte Flags gesetzt werden:
Der Buchstabe &lt;code&gt;G&lt;/code&gt; kennzeichnet einen Namen als den Namen der eigenen Arbeitsgruppe.
Die zugehörige Adresse ist die Broadcast-Adresse der betreffenden Arbeitsgruppe.
Das Flag &lt;code&gt;S&lt;/code&gt; kennzeichnet die Namen und Broadcastadressen weiterer Arbeitsgruppen, in denen die Dienste unseres Servers ebenfalls angepriesen (registriert) werden sollen.
Und das Flag &lt;code&gt;M&lt;/code&gt; schließlich kennzeichnet diesen Eintrag als den defaultmäßigen Netbios-Namen dieser Maschine.&lt;/p&gt;
&lt;p&gt;Der nächste Schritt ist die Erzeugung der zentralen Konfigurationsdatei.
Wenn Samba im Defaultverzeichnis &lt;code&gt;/usr/local/samba&lt;/code&gt; installiert worden ist, muß diese Datei in &lt;code&gt;/usr/local/samba/lib/smb.conf&lt;/code&gt; angelegt werden.
Ihr Aufbau gleicht syntaktisch dem einer WIN.INI-Datei von MS-Windows:
Sie besteht aus Abschnitten, die jeweils durch einen Namen in eckigen Klammern eingeleitet wird.
Jeder Abschnitt enthält dann eine Reihe von Zuweisungen der Form &lt;code&gt;Parameter = Wert&lt;/code&gt;.
Parameter dürfen genau wie Abschnittnamen Leerzeichen enthalten, die Samba ignoriert.
Ebenso spielt Gross- und Kleinschreibung keine Rolle.&lt;/p&gt;
&lt;p&gt;Jeder Abschnitt der &lt;code&gt;smb.conf&lt;/code&gt; definiert einen Service, der von Samba exportiert wird.
Ein Service kann dabei ein Drucker oder - häufiger - ein Verzeichnis sein.
Samba kennt drei Abschnitte, die besondere Bedeutung haben:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;[global]:&lt;/dt&gt;
&lt;dd&gt;In diesem Abschnitt werden besondere, globale Einstellungen für den Server getroffen.&lt;/dd&gt;
&lt;dt&gt;[printers]:&lt;/dt&gt;
&lt;dd&gt;In diesem Abschnitt kann man alle Drucker der &lt;code&gt;/etc/printcap&lt;/code&gt; exportieren.&lt;/dd&gt;
&lt;dt&gt;[homes]:&lt;/dt&gt;
&lt;dd&gt;In diesem Abschnitt kann man alle Homeverzeichnisse des Servers exportieren.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Samba bietet nun buchstäblich Dutzende von Parametern, mit denen man den Server seinen Bedürfnissen anpassen kann.
Zum Glück sind die Defaults jedoch so eingestellt, daß man nur wenige dieser Parameter wirklich anpassen muß.&lt;/p&gt;
&lt;p&gt;Zum Testen sollte man eine minimale &lt;code&gt;smb.conf anlegen.&lt;/code&gt;Sie könnte zum Beispiel so aussehen:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[global]
        guest account = smbguest

[tmp]
        comment = temporary files 
        path = /tmp
        read only = yes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Der Account &lt;code&gt;smbguest&lt;/code&gt; ist dabei ein User mit minimalen Rechten.
Der Abschnitt &lt;code&gt;[tmp]&lt;/code&gt; exportiert das lokale &lt;code&gt;/tmp&lt;/code&gt;-Verzeichnis read-only an die Welt.&lt;/p&gt;
&lt;p&gt;Die Korrektheit dieser Konfigurationsdatei kann mit dem Kommando&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ SAM=/usr/local/samba
$ $SAM/bin/testparm $SAM/lib/smb.conf | more
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;schnell überprüft werden.
&lt;code&gt;testparm&lt;/code&gt; liest die Datei ein und zeigt an, ob die Datei syntaktisch korrekt ist.
Danach werden die Werte aller internen Konfigurationsvariablen ausgegeben.
Auf diese Weise kann man schnell sehen, mit welchen internen Parameterwerten Samba wirklich operiert.&lt;/p&gt;
&lt;p&gt;Mit dem &lt;code&gt;smbclient&lt;/code&gt; kann man nun ausprobieren, ob das gewünschte Verzeichnis wirklich exportiert wird:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$SAM/bin/smbclient -L localhost -U%
Server time is Thu Nov 23 11:17:01 1995
Timezone is UTC+1.0
Domain=[DAHEIM] OS=[Unix] Server=[Samba 1.9.15p3]

Server=[localhost] User=[smbguest] Workgroup=[DAHEIM] Domain=[DAHEIM]

        Sharename      Type      Comment
        ---------      ----      -------
        tmp            Disk      temporary files
        IPC$           IPC       IPC Service (Samba 1.9.15p3)


This machine has a browse list:

        Server               Comment
        ---------            -------
        WHITE                Samba 1.9.15p3
        MAHAKI               
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Die Meldung &amp;ldquo;bad password&amp;rdquo; an dieser Stelle würde anzeigen, daß der Gastaccount von Samba nicht richtig gesetzt ist oder nicht verwendet werden kann.
Auch &amp;ldquo;hosts allow&amp;rdquo; und &amp;ldquo;hosts deny&amp;rdquo;-Einträge, die unseren eigenen Rechner ausschließen, oder &amp;ldquo;valid users&amp;rdquo; und &amp;ldquo;invalid users&amp;rdquo;, die zu strikt gesetzt sind, können zu der Fehlermeldung führen.&lt;/p&gt;
&lt;p&gt;Die Meldung &amp;ldquo;connection refused&amp;rdquo; deutet dagegen darauf hin, daß auf den Samba-Sockets kein Dämon zuhört.
Ein häufiger Fehler ist es, den inetd nach Änderungen an der Konfigurationsdatei nicht mit &lt;code&gt;SIGHUP&lt;/code&gt; zu wecken.
&lt;code&gt;netstat -a&lt;/code&gt; zeigt an, ob jemand auf dem Port &lt;code&gt;netbios-ssn&lt;/code&gt; zuhört.&lt;/p&gt;
&lt;p&gt;Ähnlich kann man die Funktionsfähigkeit des &lt;code&gt;nmbd&lt;/code&gt; überprüfen:
Das Kommando&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ $SAM/bin/nmblookup -B localhost __SAMBA__
Sending queries to 127.0.0.1
193.102.57.4 __SAMBA__
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;sollte die IP-Adresse des eigenen Servers zurückliefern. Ebenso sollte ein&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ $SAM/bin/nmblookup -B mahaki &#39;*&#39;
Sending queries to 193.102.57.2
193.102.57.2 *
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;die Adresse des Clients zurückliefern.
Und schließlich sollten sich bei einem&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ $SAM/bin/nmblookup -d 2 &#39;*&#39;
Netmask for eth0 = 255.255.255.0
Derived broadcast address 193.102.57.255
Using broadcast 193.102.57.255
Sending queries to 193.102.57.255
Got a positive name query response from 193.102.57.2 (193.102.57.2)
Got a positive name query response from 193.102.57.4 (193.102.57.4)
193.102.57.4 *
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;alle Teilnehmer des lokalen Netzes melden, falls sie schnell genug sind.
Falls Server und Client nicht auf demselben Subnetz sind, ist es notwendig, die korrekte Broadcast-Adresse des entfernten Subnetzes mit der Option -B anzugeben.&lt;/p&gt;
&lt;p&gt;Wenn man so sichergestellt hat, daß sich alle Rechner untereinander kennen und einander erreichen können, kann man versuchen, erst einmal lokal auf die exportierten Ressourcen
zuzugreifen:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ $SAM/bin/smbclient &amp;quot;\\\\localhost\\tmp&amp;quot;
Server time is Thu Nov 23 11:28:06 1995
Timezone is UTC+1.0
Password: 
Domain=[DAHEIM] OS=[Unix] Server=[Samba 1.9.15p3]
smb: \&amp;gt; dir
  isdnctrl0                                226942  Thu Nov 23 10:14:14 1995
  crond_running                                 0  Thu Nov 23 11:28:01 1995
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Der Name der verwendeten Ressource wird DOS-Konform mit &lt;code&gt;\\rechner\ressource&lt;/code&gt; bezeichnet.
Die verwendete Shell macht es jedoch notwendig, Backslashes als &lt;code&gt;\\&lt;/code&gt; zu escapen.
Die Schreibweise des Kommandos erscheint so etwas merkwürdig.
Samba versucht sich unter dem normalen Usernamen anzumelden.
Das verlangte Paßwort ist also das normale Paßwort des Accounts.
Möchte man unter einem anderen Benutzernamen testen, ist die Option &lt;code&gt;-U username&lt;/code&gt; hinter dem Namen der Ressource anzugeben.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;smbclient&lt;/code&gt; arbeitet ähnlich wie &lt;code&gt;ftp&lt;/code&gt; und versteht Kommandos wie &amp;ldquo;help&amp;rdquo;, &amp;ldquo;get&amp;rdquo;, &amp;ldquo;put&amp;rdquo; und &amp;ldquo;quit&amp;rdquo;.
Wegen der Option &lt;code&gt;read only = yes&lt;/code&gt; in der &lt;code&gt;smb.conf&lt;/code&gt; schlägt ein &amp;ldquo;put&amp;rdquo; wie erwartet fehl:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;smb: \&amp;gt; put username.map
ERRDOS - ERRnoaccess (Access denied.) opening remote file \username.map
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Wenn dies alles funktioniert, kann man versuchen, vom PC aus auf das Verzeichnis zuzugreifen.
Aus einem DOS-Fenster sollte man die exportierten Ressourcen mit&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;E:\users\default&amp;gt;net view &amp;quot;\\white&amp;quot;
Freigegebene Ressourcen auf \\white

Samba 1.9.15p3

Name         Typ          Lokal    Beschreibung

-------------------------------------------------------------------------------
tmp          Platte                temporary files
Der Befehl wurde erfolgreich ausgeführt.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ansehen. Mit&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;E:\users\default&amp;gt;net use &amp;quot;\\white\tmp&amp;quot; /user:kris
Das Kennwort für \\white\tmp ist ungültig.

Geben Sie das Kennwort für \\white\tmp ein:
Der Befehl wurde erfolgreich ausgeführt.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;kann man sich dann beim Server anmelden.
Programme, die erweiterte Pfadnamen mit &lt;code&gt;\\rechnername&lt;/code&gt; verstehen, können jetzt schon auf das Laufwerk zugreifen.
Der Samba-Server sollte nun auch im Dateimanager unter &amp;ldquo;Datenträger&amp;rdquo;, &amp;ldquo;Netzwerklaufwerk verbinden&amp;rdquo; sichtbar sein.&lt;/p&gt;
&lt;p&gt;Die Bemerkung &amp;ldquo;Das Kennwort für &amp;hellip; ist ungültig&amp;rdquo; des Windows NT-Servers aus dem Beispiel tritt übrigens auf, weil der Samba Server ohne verschlüsselte Paßworte  übersetzt wurde.
Wir der Server mit der &lt;code&gt;libdes&lt;/code&gt; und der Option &lt;code&gt;encrypted passswords = yes&lt;/code&gt; in der &lt;code&gt;smb.conf&lt;/code&gt; installiert, erfolgt das Login ohne Rückfrage.&lt;/p&gt;
&lt;h2 id=&#34;geschwindigkeit&#34;&gt;
    &lt;a href=&#34;#geschwindigkeit&#34;&gt;
	Geschwindigkeit
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Samba verwendet ein verbindungsorientiertes und asynchrones Protokoll und unterliegt so nicht den Einschränkungen, die die Geschwindigkeit von NFS begrenzen.
Auf der anderen Seite ist der Samba-Server so natürlich nicht so datensicher wie ein NFS-Server.
In der Praxis sollte das wenig ausmachen, da die Clients PCs sind und so vermutlich häufiger abstürzen&amp;hellip;&lt;/p&gt;
&lt;p&gt;Geschwindigkeitsprobleme kann es beim Einloggen geben, wenn der Client ein Windows für Workgroups ist und Samba das Loginpaßwort raten muß (siehe Kasten &amp;ldquo;Eine Standardkonfiguration&amp;rdquo;).
Falls das richtige Paßwort mehrere Großbuchstaben enthält und die &lt;code&gt;crypt()&lt;/code&gt;-Routine des Servers hinreichend langsam ist, können so einige Sekunden vergehen.&lt;/p&gt;
&lt;p&gt;Der Text &lt;code&gt;SPEED.txt&lt;/code&gt; aus der Samba-Dokumentation enthält außerdem einige weitere Tips, mit der man die Geschwindigkeit des Servers unter Umständen weiter verbessern kann:
Niedrige Debug-Level, große Puffer und überlappende Zugriffe auf Platte und Netzwerk können die Serverperformance weiter steigern.&lt;/p&gt;
&lt;p&gt;Alles in allem erreicht Samba so eine Performance, die einem Windows NT Server oder einem Pathworks Server vergleichbar ist.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;samba-im-internet&#34;&gt;
    &lt;a href=&#34;#samba-im-internet&#34;&gt;
	Samba im Internet
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Die zur Zeit der Entstehung dieses Artikels aktuelle Version von
Samba ist 1.9.15, Patch 3.&lt;/p&gt;
&lt;p&gt;Das Homeverzeichnis von Samba ist &lt;a href=&#34;ftp://nimbus.anu.edu.au/pub/tridge/samba&#34;&gt;ftp://nimbus.anu.edu.au/pub/tridge/samba&lt;/a&gt;

.
Da jedoch die Internet-Anbindung von Australien aus der Sicht von Deutschland nicht überragend ist, ist es vorteilhaft, sich Samba von einem der offiziellen Mirrors zu kopieren.
Die Dokumentation nennt dazu unter anderem
&lt;a href=&#34;ftp://sunsite.unc.edu/pub/Linux/system/Network/Samba&#34;&gt;ftp://sunsite.unc.edu/pub/Linux/system/Network/Samba&lt;/a&gt;


und
&lt;a href=&#34;ftp://ftp.uni-trier.de/pub/unix/network/samba&#34;&gt;ftp://ftp.uni-trier.de/pub/unix/network/samba&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Das Paket liegt außerdem auf vielen deutschen Sunsite-Mirrors und ist praktisch auf jeder besseren Linux CD-ROM auch im Quelltext archviert.
Diese Versionen hinken jedoch, wie üblich, um einige Minor-Releases hinterher.&lt;/p&gt;
&lt;p&gt;Nicht alle Mirrors archivieren
&lt;a href=&#34;ftp://nimbus.anu.edu.au/pub/tridge/libdes/libdes.tar.92-10-13.gz&#34;&gt;ftp://nimbus.anu.edu.au/pub/tridge/libdes/libdes.tar.92-10-13.gz&lt;/a&gt;

,
weil dies administrative Probleme beim FTP-Verkehr von und nach USA machen würde.
Diese Bibliothek ist notwendig, wenn man mit verschlüsselten Paßworten auf dem Netz arbeiten möchte.
Clients und Server unter Windows NT verhalten sich ohne verschlüsselte Paßworte jedoch eigenartig.&lt;/p&gt;
&lt;p&gt;Samba hat eine eigene Newsgroup im USENET, &lt;code&gt;comp.protocols.smb&lt;/code&gt;,
die glücklicherweise nicht sehr überlaufen ist.
Außerdem findet man in den einschlägigen Linux-Newsgroups ebenfalls massenweise Fragen und Antworten rund um Samba.&lt;/p&gt;
&lt;p&gt;Wer an aktuellen Informationen über Samba interessiert ist, kann sich auf der Mailingliste &lt;code&gt;samba-announce&lt;/code&gt; eintragen lassen.
Dazu ist es notwendig, eine Mail an &lt;code&gt;listproc@listproc.anu.edu.au&lt;/code&gt; zu senden, die im Text (nicht im Subject!) das Kommando &lt;code&gt;subscribe samba-announce Vorname Nachname&lt;/code&gt; enthält.&lt;/p&gt;
&lt;p&gt;Es existiert eine weitere Mailingliste, &lt;code&gt;samba&lt;/code&gt;, die der Weiterentwicklung von Samba dient.
Um sich dort einzuschreiben, ist &lt;code&gt;subscribe samba Vorname Nachname&lt;/code&gt; an die oben angegebene Adresse zu senden.&lt;/p&gt;
&lt;p&gt;Die Samba Home-Page ist &lt;a href=&#34;http://lake.canberra.edu.au/pub/samba/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://lake.canberra.edu.au/pub/samba/&lt;/a&gt;

&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;eine-standardkonfiguration&#34;&gt;
    &lt;a href=&#34;#eine-standardkonfiguration&#34;&gt;
	Eine Standardkonfiguration
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Die folgende Konfigurationsdatei dürfte die meisten
einfachen Anwendungsfälle abdecken:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[global]
  ; Gastaccount zuweisen
  guest account = smbguest
  ; Nicht alle User auf dem UNIX-Rechner heißen auf dem Windows NT gleich
  ; Format:
  ; unixuser = dosalias dosalias2 dosalias3...
  ; root = administrator admin
  username map = /usr/local/samba/lib/username.map
  ; Windows NT erfordert libdes und encrypted passwords, siehe Dokumentation
  encrypt passwords = yes
  ; Samba soll Domain Master und Browse Master sein.
   os level = 33
   domain master = yes
  ; nur Verbindungen von vertrauenswürdigen Hosts zulassen
  allow hosts = black, white, mahaki
  ; DOS &amp;quot;share&amp;quot; locking simulieren
  locking = yes
  share modes = yes
  ; Windows NT Protokoll verwenden
  ; Optionen sind CORE, COREPLUS, LANMAN1, LANMAN2 und NT1
  protocol = NT1
  
  ; Dies ist die Workgroup, der wir angehören
  workgroup = DAHEIM
  
[tmp]
  comment = Zwischenablage
  path = /tmp
  read only = no

[faq]
  comment = Haeufig gestellte Fragen (aus USENET)
  path = /scratch/faq
  read only = yes

[homes]
  comment = Homeverzeichnisse
  browseable = no
  read only = no
  create mode = 0750

[printers]
  comment = Alle Drucker aus /etc/printcap
  printing = bsd
  browseable = no
  load printers = yes
  read only = yes
  printable = yes
  path = /tmp
  public = yes
  create mode = 0700
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Diese &lt;code&gt;smb.conf``  versucht einen minimalen Sicherheitslevel herzustellen, indem nur Verbindungen von Hosts von vertrauenswürdigen zugelassen werden. Sie exportiert zwei gewöhnliche Verzeichnisse: &lt;/code&gt;/tmp&lt;code&gt;read-write und&lt;/code&gt;/scratch/faq` read-only.&lt;/p&gt;
&lt;p&gt;Außerdem werden die Drucker der &lt;code&gt;/etc/printcap&lt;/code&gt; durch den besonderen Abschnitt &lt;code&gt;[printers]&lt;/code&gt; und die Home-Verzeichnisse aller Benutzer durch &lt;code&gt;[homes]&lt;/code&gt; exportiert.
Beide Abschnitte sind nicht als Browseable gekennzeichnet.
Dadurch erscheint nur das Home-Verzeichnis des auf dem Windows-Rechner angemeldeten Benutzers in der Browse-List des Dateimanagers.
Ebenso wird nicht &lt;code&gt;[printers]&lt;/code&gt; selbst im Druckmanager angezeigt, sondern die Drucker der &lt;code&gt;/etc/printcap&lt;/code&gt; werden durch das &lt;code&gt;load printers&lt;/code&gt; einzeln angezeigt.&lt;/p&gt;
&lt;p&gt;Dadurch, daß das NT1-Protkoll verwendet wird, ist es möglich, auch lange Dateinamen mit Groß-/Kleinschreibung zu verwenden.
Auch das LANMAN2-Protokoll kann dies.
Windows für Workgroups wandelt alle Paßworte in reine Großschrift um, wenn ein höheres Protokoll als COREPLUS verwendet wird.
In diesem Fall versucht Samba, das Paßwort zu raten, indem das übermittelte Paßwort in Groß- und Kleinschrift ausprobiert wird.
Mit der Option &lt;code&gt;password level = zahl&lt;/code&gt; kann man Samba dazu bewegen, auch Kombinationen von Groß- und Kleinbuchstaben zu testen.
Die Zahl bestimmt dabei die maximale Anzahl von Großbuchstaben im Paßwort.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Was ist das Internet?</title>
      <link>https://blog.koehntopp.info/1996/01/02/was-ist-das-internet.html</link>
      <pubDate>Sat, 02 Mar 1996 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1996/01/02/was-ist-das-internet.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;aus &amp;ldquo;Die Netzrevolution - auf dem Weg in die Weltgesellschaft&amp;rdquo;, Rost (Hrsg.), 1996, Frankfurt/ Main: Eichborn-Verlag, 230 Seiten&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Das Internet - unendliche Weiten. Seit einigen Jahren kreuzen
Millionen Bürger durch das Netz, um neue Dienste zu entdecken, neue
Möglichkeiten und neue Informationen, die andere Menschen für sie
geschaffen haben.  Cyberspace - der gemeinsame Informationsraum der
Menschheit - ist in gewisser Weise genau das Gegenteil des Weltraums.&lt;/p&gt;
&lt;p&gt;Im Weltraum, einer Umgebung, die dem irdischen Leben so fremd ist,
wie nur irgend möglich, können wir Dinge finden, sie niemals zuvor
ein Mensch (und wahrscheinlich auch sonst niemand) gesehen hat. Wir
können an Orte kommen, die niemals zuvor betreten worden sind, um
dann dort das Unerwartete und das Fremdartige zu entdecken. Der
Weltraum ist die &amp;ldquo;final frontier&amp;rdquo;, die letzte Grenze, die nicht
überschritten werden kann, sondern die wir nur vor uns her schieben
können. Der Weltraum, das ist das physikalische Universum, die
fremdartige Außenwelt, in der wir leben.&lt;/p&gt;
&lt;p&gt;Cyberspace ist ebenfalls ein ganzes Universum, aber eines, das nach
ganz anderen Regeln funktioniert. Im Gegensatz zum Weltraum, wo wir
das Fremde und Nicht-Menschliche zu finden erwarten, können wir im
Netz nur Artefakte menschlichen Denkens und Schaffens finden. Das
heißt nicht, daß uns diese Artefakte nicht genauso fremdartig
erscheinen können, wie die einer Alien-Kultur&amp;hellip;&lt;/p&gt;
&lt;p&gt;Wir können im Netz nur das finden, was andere vor uns hineingestellt
haben und wir können im Cyberspace nur dahin gehen, wo andere schon
vor uns gewesen sind und den &amp;ldquo;Raum&amp;rdquo;, den wir betreten wollen, für uns
geschaffen haben. Oder wir können selber neue Räume schaffen, ganze
Welten, wenn wir wollen, in denen sich dann andere Bewohner des
Netzraumes tummeln können. Denn so ist das Netz entstanden: Am Anfang
war im Netz nur die große, unbewohnte Leere. Dann kam der Mensch und
sprach - keinen einzelnen Satz, sondern viele hunderttausend Zeilen
Quelltext und Dokumente in den unterschiedlichsten Sprachen und
Programmiersprachen. Das Resultat ist das Netz, wie der Weltraum eine
&amp;ldquo;final frontier&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Im Unterschied zum Weltraum, der trotz Vakuums eine materielle Welt
ist, ist das Netz eine rein virtuelle Welt - eine Welt der Bilder,
der Ideen und der Abstraktionen. Trotzdem hat der Informationsraum
natürlich einen Bezug zur wirklichen Welt. Er ist nicht nur eine
Bilderwelt, sondern auch ein Bild der Welt, geschaffen nach unserem
Bilde. Wenn uns Bilder im Cyberspace nicht gefallen, dann ist dies
deswegen so, weil uns die Welt nicht gefällt, die abgebildet wird.&lt;/p&gt;
&lt;h2 id=&#34;die-genesis-des-cyberspace&#34;&gt;
    &lt;a href=&#34;#die-genesis-des-cyberspace&#34;&gt;
	Die Genesis des Cyberspace
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das Internet, ein weltweites Netzwerk aus Rechnern und
Übertragungswegen der unterschiedlichsten Hersteller, bekommt seit
ungefähr drei Jahren erhöhte Aufmerksamkeit in den Medien. Aber
eigentlich ist es viel älter: Das ARPANET, ein Vorläufer des heutigen
Internet, entstand schon 1969. Damals begann man damit, die
Rechzenzentren amerikanischer Forschungszentren miteinander zu
vernetzen, um Hard- und Softwareressourcen verteilt nutzen zu können.
Anfang der 1980er Jahre wurde das alte ARPANET in zwei Netze
aufgeteilt, ARPANET und Milnet. Das Gesamtnetzwerk bekam zunächst den
Namen DARPA Internet, der später durch Verkürzung zu &amp;ldquo;Dem Internet&amp;rdquo;
wurde. In der Frühzeit des Internet war der Zugang zu diesem Netz auf
militärische Nutzung, Forschung und Lehre beschränkt und kommerzielle
Nutzung war verboten.&lt;/p&gt;
&lt;p&gt;Trotz dieser Einschränkungen war Internet ein größerer Erfolg als
geplant und vorausgesehen. Weitere Netze, die zum Teil unabhängig vom
DARPA Internet entstanden und meistens zu Forschungszwecken dienten,
schlossen sich über mehr oder weniger indirekte Methoden an das
Internet an. Um den Bedarf nach akademischer Kommunikation zu
kanalisieren und besser decken zu können, entstand in den USA 1986
das National Sciene Foundation Network (NSFNET), das bis 1990 das
ARPANET als Forschungsnetzwerk ersetzte. Zugleich begann das Internet
auch immer mehr, über die nationalen Grenzen der USA hinauszuwachsen
und sich schließlich weltweit auszudehnen.&lt;/p&gt;
&lt;p&gt;In 1992 rückte das Internet wieder in das Rampenlicht, diesmal als
Bestandteil der &amp;ldquo;National Information Infrastructure&amp;rdquo; im Rahmen des
Wahlkampfes von Bill Clinton und Al Gore. Dies war zugleich der
Beginn der Öffnung des Internet, die es ermöglicht, das Netz auch zu
anderen als Forschungszwecken zu nutzen. Heute, drei Jahre später,
wird das Netz durch die unterschiedlichsten Firmen bereits auf
vielfältige Weise genutzt, auch wenn die meisten Formen dieser
Nutzung noch experimentell sind.&lt;/p&gt;
&lt;h2 id=&#34;warum-ist-das-internet-so-erfolgreich&#34;&gt;
    &lt;a href=&#34;#warum-ist-das-internet-so-erfolgreich&#34;&gt;
	Warum ist das Internet so erfolgreich?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Rechnernetze gibt es viele und zu den unterschiedlichsten Zwecken. So
sind die Rechner in den meisten Büros über ein Ethernet-Kabel
miteinander verbunden, Außenstellen kommunizieren mit der Zentrale
über Datex-P oder Datex-J und wir selbst nutzen Telefonnetze
weltweit, um miteinander zu reden oder Dokumente zu faxen. Gegen Ende
des zwanzigsten Jahrhunderts ist es kein Problem mehr, irgendwelche
Geräte miteinander zu vernetzen, denn wir haben buchstäblich Dutzende
Methoden, um das zu tun.&lt;/p&gt;
&lt;p&gt;Und sie sind alle unterschiedlich.&lt;/p&gt;
&lt;p&gt;Das Internet basiert auf der Idee eines Meta-Netzwerkes. Es dient
nicht dazu, Rechner miteinander zu vernetzen. Es gibt keine
Internet-Steckkarten, keine Internet-Netzwerkkabel und keine
Internet-Anschlüsse. Stattdessen verwendet Internet immer vorhandene
Netzwerktechniken, um vorhandene Rechnernetze untereinander zu
vernetzen.&lt;/p&gt;
&lt;p&gt;Es setzt voraus, daß schon irgendeine Form von nutzbarem Anschluß
vorhanden ist und benutzt diesen dann, um ein lokales Netz in das
weltumspannende Geflecht des Internet einzugliedern. Und da alle
Hardware schon vorhanden ist, wird lediglich Software gebraucht, um
diese Hardware die Sprache des Internet, das Internetwork Protocol
(IP), zu lehren.&lt;/p&gt;
&lt;p&gt;Da das Internet die unterschiedlichsten Netzwerke als Träger benutzen
kann, wird im Internetwork Protocol ein großer Aufwand getrieben, die
Unterschiede zwischen diesen Netzen für die Software und den
Anwender, der sie letztendlich verwenden soll, zu verwischen. Als
Internet-Anwender merkt man nichts davon, daß eine Netzwerkverbindung
über ein halbes Dutzend unterschiedliche Netzwerke mit
unterschiedlichen Eigenschaften geleitet wird. Jedes dieser Netzwerke
hat seine ganz besonderen Eigenheiten wie besondere Formen der
Adressierung, eine andere maximale Größe für Datenpakete oder eine
andere Art, den Weg eines Datenpaketes durch das Netz festzulegen.
Der Anwender braucht sich mit solchen Dingen nicht zu befassen, IP
kümmert sich darum. So entsteht eine neue Abstraktionsebene: Weg vom
konkreten Kabel, hin zu einer Netzwerkwolke, in der jeder mit jedem
direkt Verbindung aufnehmen kann, wenn er möchte.&lt;/p&gt;
&lt;p&gt;Eine andere Idee ist beim Internet ebenfalls neu: Bisher waren
Rechnernetze immer so aufgebaut, daß man ein durchgehendes Kabel von
einem Startrechner zum Zielrechner haben mußte. Internet führt in der
Rechnerwelt das Prinzip des Individualverkehrs ein: Zwar existieren
zwischen vielen Orten Netzwerkverbindungen wie Straßen in der
wirklichen Welt, aber genau wie in der wirklichen Welt ist nicht
jeder Ort mit jedem anderen direkt verbunden.&lt;/p&gt;
&lt;p&gt;Daten werden jetzt nicht als ein durchgehender Datenstrom auf die
Reise geschickt, sondern in kleinen Paketen, die dann wie Autos auf
richtigen Straßen ihren Weg zum Ziel finden müssen. Und so wie jedes
Auto seinen Weg unabhängig von den anderen Fahrzeugen vor und hinter
ihm findet, so läuft auch jedes Datenpaket im Internet auf seinem
eigenen Weg unabhängig von den anderen Datenpaketen. Eine bestimmte
Datenverbindung kann dabei, wenn sie im Netz günstig liegt, von
Datenpaketen mit den unterschiedlichsten Zielen gemeinsam genutzt
werden. Das Bild von der Datenautobahn trägt hier viel weiter, als
man auf den ersten Blick vermuten würde.&lt;/p&gt;
&lt;h2 id=&#34;vom-verhalten-im-datenverkehr&#34;&gt;
    &lt;a href=&#34;#vom-verhalten-im-datenverkehr&#34;&gt;
	Vom Verhalten im Datenverkehr
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das Internet ist ein Netzwerk mit Geschichte. Es ist - von den
allerersten Anfängen an gerechnet - über 25 Jahre alt. Im Verständnis
von Informatikern wird ein solcher Zeitraum ähnlich betrachtet, wie
bei normalen Menschen die frühe Kreidezeit. Den größten Teil dieser
Zeit haben dabei Menschen mit akademischem Hintergrund das Netz und
die Umgangsformen im Netz geprägt.&lt;/p&gt;
&lt;p&gt;Die ursprünglichen Nutzer des Internet waren die Forscher, die das
Netz gebaut haben. Sie haben es gebaut, um besser verstehen zu
können, wie große Netzwerke von Computern funktionieren, die aus
vielen Komponenten sehr unterschiedlicher Hersteller funktionieren.
Man wollte untersuchen, wie sich Rechnernetze verhalten, wenn ihnen
Überlastung, Störungen und die anderen, täglichen kleinen Problemchen
den Betrieb beeinflussen. Doch aus dem reinen Forschungsgegenstand
wurde für diese Menschen und die anderen in ihrem Umfeld schon bald
ein unverzichtbares Mittel für ihre Arbeit und auch eine Methode,
ihre Arbeit zu publizieren.&lt;/p&gt;
&lt;p&gt;Vor diesem Hintergrund sind auch die Gebräuche und Kulturen im
Internet entstanden. Ein wichtiger Gedanke ist zum Beispiel der
Gedanke der Gegenseitigkeit: Für viele Benutzer sind die Dienste des
Netzes und die Menschen, die ihnen dort draußen geholfen haben, ohne
daß sie sich jemals begegnet sind, ein wichtiger Bestandteil ihrer
Arbeit oder sogar ihrer Freizeit gewesen. Es ist üblich, sich bei
&amp;ldquo;dem Netz&amp;rdquo; für die erhaltene Hilfe zu bedanken. Dieses Dankeschön
besteht normalerweise darin, daß man irgendetwas für das Netz tut,
zum Beispiel ein eigenes Programm zum Kopieren freigibt, einen
Hilfetext schreibt oder ein anderes Angebot macht, das das Netz zu
einem besseren und interessanteren Platz macht. Es kommt nicht darauf
an, daß erhaltene Hilfe und Dankeschön in irgendeinem Verhältnis
stehen oder etwas miteinander zu tun haben, sondern es kommt nur
darauf an, irgendetwas zu tun. Dadurch, daß dies jeder tut, der
Nutzen von der Gemeinschaft des Netzes hat, wird das Netz einfach
wertvoller für alle.&lt;/p&gt;
&lt;p&gt;Dieser Gedanke der Gegenseitigkeit und der Gemeinsamkeit zieht sich
durch alle Ebenen des Netzes: Auf den unteren Ebenen des Netzes hilft
man sich, indem man gegenseitig IP-Päckchen oder E-Mail weiterleitet,
auf den höheren Ebenen der Interaktion stellt man die Ergebnisse
seiner Arbeit zur Verfügung oder macht Hilfsprogramme und Werkzeuge
verfügbar, die man im Laufe der Zeit entwickelt hat.&lt;/p&gt;
&lt;p&gt;Ebenso tief verwurzelt ist die Idee der Rücksichtnahme: Jemand, der
sich mit der Entwicklung von Netzwerktechniken beschäftigt, hat eine
gute Vorstellung von dem Aufwand, den das Senden einer Mail oder das
Laden eines großen Programmpaketes für alle beteiligten Komponenten
des Netzes bedeutet. Er wird versuchen, durch sein Verhalten die
Netzlast zu verringern: Er wird versuchen, ein benötigtes
Programmpaket erst auf einem deutschen Server bekommen, bevor er
einen aufwendigen USA-Transfer anstößt oder er wird fragen, ob der
Empfänger eine bestimmtes größeres Dokument haben möchte (und in
welchem Datenformat), anstatt es unaufgefordert zu versenden.&lt;/p&gt;
&lt;p&gt;Und der dritte grundlegende Gedanke ist der der Freiheit von
Information: Jeder darf im Netz alles anbieten. Diese Idee schlägt
sich schon im Design der Diskussionsforen oder gar des Netzes selber
nieder. Es gibt im Internet keine zentrale Netzwerkkoordination, die
regulierend eingreifen kann und es gibt in den Diskussionsforen des
USENET keinen Redakteur, der Veröffentlichungen in irgendeiner Form
bewerten oder selektieren würde. Trotzdem herrschen im Netz keine
chaotischen Zustände: Probleme werden durch die Erzeugung von
sozialem Druck und durch die Vermittlung von Wissen um die
Konsequenzen des eigenen Handelns gelöst, anstatt eine übergeordnete
Kontrollinstanz zu bemühen.&lt;/p&gt;
&lt;p&gt;Jemand, der zum Beispiel im Netz wiederholt defekte oder themenfremde
Artikel in bestimmten Diskussionsgruppen im USENET veröffentlicht und
dadurch den normalen Betrieb stört, wird von den anderen
Diskussionsteilnehmern normalerweise durch eine private Nachricht
darauf hingewiesen und ihm wird korrektes Verhalten erklärt oder ihm
werden passendere Diskussionsgruppen empfohlen. Das ist einerseits
konstruktives Verhalten, indem Alternativen vorgeschlagen werden,
andererseits aber auch eine Strafe. Denn in einer Diskussionsgruppe,
in der man vielen tausend Teilnehmern auf die Nerven fallen kann,
kann schon die Verarbeitung der entsprechend vielen Ermahnung, die
man bekommt, ein technisches Problem darstellen. Wer aufgrund seines
unerwünschten Verhaltens auffällt, bekommt bald so viele hunderte
oder tausende Nachrichten, daß er kaum noch Netzkapazität übrig hat,
um zu stören.&lt;/p&gt;
&lt;p&gt;Natürlich ist es nicht praktikabel, die akzeptablen Normen des
Verhaltens jedesmal neu auszuhandeln. Daher hat man sich im Netz
schon bald auf einen kleinsten gemeinsamen Nenner guten Verhaltens
geeinigt und diesen in einem Text niedergelegt. Dieser Text, die
&amp;ldquo;Network Etiquette&amp;rdquo; oder &amp;ldquo;Netiquette&amp;rdquo;, sagt eigentlich nichts
besonderes aus: Jeder mit einem Funken gesundem Menschenverstand und
ein wenig Wissen um die technischen Möglichkeiten und Zusammenhänge
kann diese Regeln als vernünftig einsehen. Oder doch wenigstens
einsehen, daß man für gewisse Dinge einfach irgendeine einheitliche
Regel haben muß und daß man sich nun eben auf genau diese geeinigt
hat. Insofern ist das USENET ein wunderbares Beispiel für die
hypothetische Urgesellschaft, die die Philosophen immer so gerne
bemühen, wenn sie den &amp;ldquo;Gesellschaftsvertrag&amp;rdquo; erklären wollen: Im Netz
hat man sich in genau dieser Situation befunden und dieses Modell
einmal durchgezogen.&lt;/p&gt;
&lt;p&gt;Es gibt keine Exekutive im Netz, die die Einhaltung der Netiquette in
irgendeiner Form überwachen würde und es gibt auch keine Legislative,
die genau bemessene Strafen für Verstöße festsetzt. Jeder kann sich
nach Belieben danebenbenehmen und ohne Strafe davonkommen, wenn er
sein Verhalten vor dem Rest der Meute rechtfertigen kann und sein
Verhalten in diesem speziellen Fall als tolerierbar angesehen wird.
Auf der anderen Seite kann man aber auch schon für geringe
Auffälligkeiten böse Briefe oder Massenmails bekommen, wenn man im
Umgang mit seinem Publikum ungeschickt ist oder einfach seinen bösen
Willen demonstriert. Trotzdem funktioniert dieses System im großen
und ganzen nicht wesentlich besser oder schlechter, als das was
offiziell in der Wirklichen Welt in Betrieb.&lt;/p&gt;
&lt;h2 id=&#34;was-kann-das-internet&#34;&gt;
    &lt;a href=&#34;#was-kann-das-internet&#34;&gt;
	Was kann das Internet?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Als das Internet vornehmlich als Medium für akademische Kommunikation
genutzt wurde, kam es nicht sehr darauf an, daß die Dienste mit einer
hübschen oder leicht erlernbaren Oberfläche zur Verfügung gestellt
wurden. Aus dieser Zeit stammen die meistens per Kommandozeile
bedienbaren Programme, die die Basisdienste des Internet liefern.
Diese Basisdienste sind Mail, das Versenden von elektronischen
Briefen, News, das Versenden von öffentlichen Artikeln und FTP, die
Übertragung und Veröffentlichung von Programmen und anderen Dateien.&lt;/p&gt;
&lt;p&gt;Mittels elektronischer Post ist es möglich, Briefe oder längere Texte
an einen Gesprächspartner zu versenden, der irgendwo anders im Netz
angeschlossen ist. Die Zustellung der Mail erfolgt dabei, soweit
technisch möglich, sofort. Ursprünglich war es dabei nur möglich,
reine ASCII-Texte ohne besondere Formatierungen, Zeichensätze oder
Bilder zu versenden - sogar das Verschicken von Nachrichten mit
Umlauten funktionierte in der Regel nicht. Deswegen mußte man
Programmdateien oder Dokumente aus Textverarbeitungen oder anderen
Programmen vor dem Versand erst in eine spezielle Textform
umcodieren. In dieser Form nimmt eine solche Datei zwar mehr Platz
ein als vorher, enthält aber lediglich Zeichen, die auch in normalen
Texte vorkommen. Auf diese Weise konnte die Datei auch per Mail
verschickt werden. Der Empfänger mußte die empfangene Nachricht dann
abspeichern und mit einem passenden Decodierprogramm wieder in eine
Datei verwandeln.&lt;/p&gt;
&lt;p&gt;Moderne Programme zur Handhabung von elektronic mail verwenden ein
erweitertes Verfahren zum Verschicken von Nachrichten - MIME. Die
Abkürzung steht für Multipurpose (oder Multimedia) Internet Mail
Enhancements, also für multimediale Nachrichten. Wenn sowohl der
Absender der Nachricht als auch der Empfänger Programme verwenden,
die den MIME-Standard beherrschen, lassen sich aus unterschiedlichen
Zeichensätzen, Bildern und Dateien zusammengesetzte Nachrichten
verschicken, ohne daß man den umständlichen Weg der Codierung gehen
muß. Zwar werden die Nachrichten noch immer für die Übermittlung in
ein spezielles Format umgewandelt, aber dies geschicht automatisch
und ohne daß Sender oder Empfänger etwas davon merken. Die folgende
Abbildung zeigt eine solche Nachricht.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1996/01/mailwindow.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;MIME-fähiges Mailprogramm unter Nextstep. Die gezeigte Nachricht enthält beigefügt das dritte Kapitel eines Buches und eine Sounddatei, die beide als Icon dargestellt werden können. Die Dateien können durch Mausklick geöffnet werden oder mit der Maus in einen Ordner auf der Festplatte fallengelassen werden.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Viele Personen erreichen: Listen und Diskussionsgruppen&lt;/h2&gt;
&lt;p&gt;Mails müssen nicht an einen einzelnen Empfänger zugestellt werden. Es
ist möglich, Verteiler einzurichten und so eine Mail an einen
ganzen Empfängerkreis zuzustellen. Oft kommt es vor, daß jemand auf
seinem Rechner einen Verteiler von Personen mit gemeinsamen
Interessen einrichtet und diesen dann für die allgemeine Benutzung
freigibt. Eine Nachricht an einen solchen Verteiler geht dann an alle
auf dem Verteiler eingeschriebenen Personen - die auf diese Nachricht
dann wiederum mit einer Kopie an den Verteiler antworten.&lt;/p&gt;
&lt;p&gt;Im Internet nennt man so einen Verteiler eine Mailing-List. Oft wird
er gar nicht von einer Person manuell gewartet, sondern von einem
Roboter gewartet, der natürlich ebenfalls per Mail erreichbar
ist. Wenn man auf eine solche Mailing-List gesetzt werden möchte,
sendet man eine Mail mit einem speziellen Kommando im Nachrichtentext
(&amp;ldquo;subscribe&amp;rdquo; für &amp;ldquo;bestellen&amp;rdquo;) an diesen Roboter, woraufhin dieser
einen in den Listenverteiler aufnimmt und einem auch gleich die
Anleitungen und Hilfstexte für diese spezielle Liste zustellt. Solche
Roboter haben meistens noch weitere Funktionen. Immer vorhanden ist
ein Kommando zum Abbestellen der Liste und zum Anfordern von
Hilfstexten. Weitere Kommandos, die bei fast allen automatischen
Listen vorhanden sind, dienen zur Abfrage eines Archivs
vorangegangener Nachrichten und um festzustellen, welche anderen
Teilnehmer auf der Liste eingeschrieben sind. Einige sehr hoch
entwickelte Listenroboter bieten zudem die Möglichkeit, sich die
Nachrichten der Liste nicht sofort einzeln zusenden zu lassen,
sondern einmal pro Tag eine Zusammenfassung (&amp;ldquo;Digest&amp;rdquo; genannt) zu
bekommen. Für jemanden, der die Diskussionen dort eher lesend
verfolgen möchte, ist dies die bequemere Möglichkeit.&lt;/p&gt;
&lt;p&gt;Um an einer Mailing-List teilzunehmen, muß man selbst aktiv werden,
d.h. eine Bestellung an den richtigen Wartungsroboter senden. Die
Themen einer Liste sind meistens sehr genau definiert und relativ
speziell. Außerdem fungiert derjenige Mensch, der die Liste ins Leben
gerufen hat, meistens auch als Moderator der Diskussion. Das führt
dazu, daß das Niveau der Diskussion auf einer solchen Liste in der
Regel sehr hoch ist, während der Verkehr auf der Liste sich
einigermaßen im Rahmen hält. Die Größe des Leserkreises einer
Mailing-List kann sehr unterschiedlich sein: Manche Listen haben nur
ein knappes halbes Dutzend Leser, andere haben weit über tausend
eingeschriebene Empfänger. Ebenso variabel ist die Anzahl der
Nachrichten, die man auf der Liste erwarten kann: Manche Listen sind
über Monate hinweg tot und man hat schon vergessen, daß man sich dort
auf den Verteiler hat setzen lassen. Andere Listen dagegen
produzieren so viele Nachrichten, daß man sich ein spezielles
Filterwerkzeug für den Posteingang wünscht, um diese Nachrichten
automatisch in ein gesondertes Eingangsfach umsortieren zu lassen
(Selbstverständlich gibt es solche Werkzeuge in Massen).&lt;/p&gt;
&lt;p&gt;Die logische Weiterentwicklung von Mailing-Lists sind die USENET
News. Die News sind ein System von vielen tausend, thematisch
gegliederten und öffentlichen Diskussionsforen, in denen jeder
Benutzer Nachrichten veröffentlichen kann, wenn er möchte. Anders als
bei Mailinglisten sind Nachrichten in den News nicht an einen
bestimmten Empfänger oder Verteiler gerichtet, sondern werden wie ein
Leserbrief in einer Zeitung ungerichtet verteilt. Jeder, der die
entsprechende Diskussionsgruppe anbestellt hat, kann die Nachricht
lesen und darauf antworten. Die Antwort erfolgt entweder privat in
einer Mail an den ursprünglichen Ersteller der Nachricht oder
öffentlich in der Diskussionsgruppe, damit weitere Leser dazu
Stellung nehmen können, wenn sie es wünschen. Tatsächlich kann man
sich USENET News vorstellen wie eine Zeitung, die nur aus
Leserbriefen besteht und die keinen Redakteur hat, der daraus eine
Auswahl trifft - alles wird veröffentlicht.&lt;/p&gt;
&lt;h2 id=&#34;die-informationsflut-kampf-gegen-das-rauschen-des-netzes&#34;&gt;
    &lt;a href=&#34;#die-informationsflut-kampf-gegen-das-rauschen-des-netzes&#34;&gt;
	Die Informationsflut: Kampf gegen das &amp;ldquo;Rauschen&amp;rdquo; des Netzes
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Alles wird veröffentlicht - das bedeutet auch, daß man in den News in
jeder Diskussionsgruppe mit einem gewissen &amp;ldquo;Rauschen&amp;rdquo; leben muß kann.
Zwar sind die Gruppen thematisch untergliedert und der Name der
Gruppe gibt auch Hinweise, worum es in dieser Diskussionsgruppe geht,
aber trotzdem wird man in jeder Gruppe Texte finden, die dort nicht
hingehören oder die einfach nicht interessant sind. Die Programme,
die zum Lesen der News verwendet werden, müssen darauf Rücksicht
nehmen: Sie müssen dem Leser Möglichkeiten geben, schnell und
zielsicher diejenigen Artikel aus der Masse des Angebotes zu fischen,
die ihn interessieren, ohne daß er mit für ihn nicht weiter
interessanten Nachrichten Zeit verschwendet.&lt;/p&gt;
&lt;p&gt;News sind wesentlich öffentlicher als Mailing-Lists: Die Leserschaft
großer Gruppen rechnet sich nicht in Hunderten oder Tausenden,
sondern bei den populären Gruppen bis knapp in den Millionenbereich.
Ebenso ist in beliebten Gruppen das Nachrichtenaufkommen viel höher
als in Mailing-Listen: Die am stärksten benutzte Gruppe des USENET
hat im Juli 1995 23601 Artikel an ihre Leser befördert. Das sind 760
Nachrichten pro Tag! Nun ist besagte Gruppe, eine Tauschbörse für
Sammelkarten und -bildchen, ein Extremfall und nicht einmal für
andere belebte Gruppen repräsentativ. In normalen Diskussionsgruppen
kann man mit 30 bis 150 Artikeln am Tag rechnen.&lt;/p&gt;
&lt;p&gt;Trotzdem zeigt sich hier: Im Internet ist es nicht das Problem, an
die gewünschten Informationen zu kommen, sondern ungewünschte
Informationen nicht zu bekommen. Mit der Kommerzialisierung des
Internet und der extremen Zunahme der Benutzerzahlen wird dies mehr
als deutlich: In allen 8000 Gruppen des USENET beobachtet man seit
einiger Zeit eine deutliche Zunahme von Artikeln, die parallel in
sehr vielen Diskussionsforen veröffentlich werden und die in keinem
dieser Foren eigentlich einen Platz haben. Eine solche
Massenveröffentlichung hat im englischen USENET den passenden Namen
&amp;ldquo;Spam&amp;rdquo; (&amp;ldquo;Sülze&amp;rdquo; wie in &amp;ldquo;jemanden zusülzen&amp;rdquo;) bekommen. Die Leserschaft
im Netz beginnt erst jetzt damit, darauf zu reagieren und eine Art
Bürgerwehr einzurichten (&amp;ldquo;public spam control&amp;rdquo;), deren Aufgabe es
ist, solche Artikel zu löschen und die Gruppen so benutzbar zu
halten.&lt;/p&gt;
&lt;p&gt;Aber &amp;ldquo;spam&amp;rdquo; ist nur eines der Probleme von News und noch dazu eines,
das technisch halbwegs in den Griff zu bekommen ist. Eine andere Art
von typischen Artikeln erschwert das Lesen der News zusätzlich: Das
Netz wächst zur Zeit so stark, daß täglich viele tausende Benutzer
neu in das Netz kommen. Sie kennen die technischen Möglichkeiten des
Netzes nicht und sie kennen die Regeln des Zusammenlebens im Netz
nicht, die einen bestimmten Einsatz dieser Technik vorschreiben.
Besonders auffällig in diesem Zusammenhang sind Online-Dienste wie
America Online (AOL), Prodigy und Compuserve, die zum Teil Millionen
Benutzer auf einmal mit unzureichender Ausbildung auf das Internet
und die USENET-Diskussionsgruppen losgelassen haben.&lt;/p&gt;
&lt;p&gt;So scheint den AOL-Mitgliedern zum Beispiel der Unterschied zwischen
öffentlicher Antwort und privater Mail nicht geläufig zu sein: Wann
immer jemand im Netz Daten zur Abholung anbietet, zieht sich hinter
dieser Ankündigung ein Ratten-, nein Lemmingschwanz von zwei oder
drei Dutzend Artikeln hinterher. Alle tragen die Absenderadresse von
America Online und bestehen aus einer kompletten Wiederholung des
Originaltextes, unter den fein saeuberlich die Worte &amp;ldquo;ME TOO&amp;rdquo; gesetzt
worden sind. Eine derartige Reaktion ist inzwischen so typisch fuer
AOL-Benutzer, daß ganze Witzsammlungen darüber existieren.&lt;/p&gt;
&lt;p&gt;Das alles sind typische Probleme für ein Medium, dessen
Teilnehmerzahl sich regulär in den letzten sechs Jahren alle neun
Monate verdoppelt hat und das in Schüben (nämlich immer dann, wenn
ein weiterer Online-Dienst mit einer knappen Million Benutzern und
mehr sich auf das Internet schaltet) noch wesentlich schneller
wächst. Wie kann man es schaffen, solche Massen von neuen Anwendern
im Netz auszubilden und ihnen die Besonderheiten und Umgangsformen
des Netzes beizubringen? Und das möglichst noch, ohne den normalen,
produktiven Betrieb zu stören?&lt;/p&gt;
&lt;h2 id=&#34;häufig-gestellte-fragen&#34;&gt;
    &lt;a href=&#34;#h%c3%a4ufig-gestellte-fragen&#34;&gt;
	Häufig gestellte Fragen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ein Mittel zur Ausbildung sind die Listen mit häufig gestellten
Fragen. Die Teilnehmer an einer Newsgroup - egal welcher - beobachten
im Laufe der Zeit unweigerlich, daß gewisse Fragen zu einem Thema
immer wieder erneut auftauchen. Meisten sind dies auch noch Fragen,
bei denen bei vielen Diskussionsteilnehmern ein gesundes Halbwissen
besteht, sodaß dieselbe Diskussion alle halbe Jahr erneut losbricht.
Um diese Wiederholungen zu vermeiden und wenigstens für einen etwas
geregelten Diskussionsablauf in einer Newsgroup zu sorgen, erarbeiten
sich die Teilnehmer der Newsgroup aus Notwehr meistens einen Katalog
der &amp;ldquo;frequently asked questions&amp;rdquo; (abgekürzt: FAQ), der häufig
gestellten Fragen und der Antworten dazu.&lt;/p&gt;
&lt;p&gt;Dieser Text kann sehr unterschiedlich in der Länge und im Gehalt
sein, aber meistens kommen durch die versammelte Wissensmenge einer
Diskussionsgruppe und die anhaltende Verbesserung dieses Textes
wirklich unentbehrliche Sammlungen zustande. Eine solche FAQ
beschäftigt sich vor allen Dingen mit den praktischen Aspekten eines
Themas und enthält meistens auch noch sehr komplette Sammlungen von
Verweisen auf weitere Quellen. Wenn in der Diskussionsgruppe
besondere Regeln gelten oder sich gar eine besondere Subkultur oder
ein Slang entwickelt haben, wird dies in der FAQ ebenfalls
dokumentiert. Solche Texte werden dann periodisch, meistens einmal im
Monat, überarbeitet und dann in der entsprechenden Diskussionsgruppe
veröffentlicht, um Neulinge auf den aktuellen Wissensstand der Gruppe
zu bringen und sie mit den Besonderheiten der Gruppe vertraut zu
machen.&lt;/p&gt;
&lt;p&gt;Außerdem geht von jedem dieser Texte eine Kopie in die Gruppe mit dem
Namen news.answers. In dieser Gruppe findet keine Diskussion statt.
Stattdessen handelt es sich um einen Kanal, der alle FAQ-Texte, die
im USENET veröffentlicht werden, bündelt und zur Archivierung
bereitstellt. Wie man sich leicht vorstellen kann, kommen dabei
gewaltige Datenmengen zusammen. Diese werden zum einen in öffentlich
zugänglichen Archiven verfügbar gemacht (wie man da herankommt, steht
selbstverständlich in einer FAQ&amp;hellip;) oder auf vielen Internet CD-ROMs
zusammen mit den Programmen zum Internet-Zugriff verbreitet.&lt;/p&gt;
&lt;p&gt;Leider hilft das Bereitstellen von Lesestoff im Zeitalter des
Fernsehens und der graphischen Benutzeroberflächen nur noch begrenzt.
Und so kommt es, daß man im USENET immer häufiger Dialoge der Form
&amp;ldquo;Wie kann ich &amp;hellip;?&amp;rdquo; &amp;ldquo;RTFM! RTFFAQ!&amp;rdquo; beobachten kann.&lt;/p&gt;
&lt;p&gt;Zwar sind News und Mail die optisch weniger ansprechenden Dienste des
Internet, aber sie sind für den erfahrenen Netzanwender immer noch
das primäre Mittel der Kommunikation, denn hier findet er nicht
vorgefertigte Texte und Seiten zum Anklicken, sondern wirkliche
Gesprächpartner mit ähnlichen Interessen und Problemen wie er selbst.
Diese können ihm helfen, die Fragen und Probleme zu klären, die er
bei seiner täglichen Arbeit hat - und das müssen beileibe keine
Probleme sein, die mit Computern oder Technik zu tun haben.&lt;/p&gt;
&lt;h2 id=&#34;polydirektionalität-verschwörung-der-verbraucher&#34;&gt;
    &lt;a href=&#34;#polydirektionalit%c3%a4t-verschw%c3%b6rung-der-verbraucher&#34;&gt;
	Polydirektionalität: Verschwörung der Verbraucher?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Aber News und Mail als textbasierte Anwendungen sind nicht das
Mittel, mit dem man kommerzielles Interesse am Netz weckt. Etwas, das
das teuer von einer Werbeagentur eingekaufte Firmenlogo nicht
darstellen kann und keine Hochglanzprospektabbildungen von
Firmenprodukten zum Kunden schaffen kann, ist für eine Firma nicht
brauchbar. Dazu kommt noch ein anderer Nachteil von News und Mail,
der Firmen abschreckt: Firmen haben ein Interesse daran, mit ihren
Kunden zu reden. Gute Firmen haben auch ein Interesse daran, daß
Kunden mit ihnen reden können. Aber kaum eine Firma hat Interesse
daran, daß Kunden ein Medium haben, untereinander über die Firma zu
reden. Aber genau das ist in den Newsgroups oder Mailinglisten der
Fall. Hier bildet sich eine Öffentlichkeit über eine Firma und deren
Produkte, die sehr zahlreich und überregional ausgedehnt sein kann,
die die Firma aber nicht direkt kontrollieren kann. Ein solches
Medium nennt man polydirektional, weil hier eine Kommunikation
zwischen vielen stattfinden kann. Der Umgang mit solchen
polydirektionalen Medien ist für jemanden, der hier bestimmte
Interessen verfolgt, sehr viel schwieriger als ein einer stärker
kontrollierten Umgebung.&lt;/p&gt;
&lt;p&gt;Ein sehr schönes Beispiel für die Probleme, die sich aus der
Polydirektionalität für eine Firma ergeben können, stellt der
sogenannte Pentium-FDIV-Fehler dar: Hier hatte sich eine solche
unerwünschte Öffentlichkeit gebildet, als der berühmte
Divisionsfehler im FDIV-Befehl des Pentium-Chips der Firma Intel
entdeckt wurde. Die Mathematiker und Informatiker, die neue
Erkenntnisse über den Fehler und seine Auswirkungen herausfanden,
veröffentlichten Ihre Entdeckungen in den USENET News. Dort kam es
auch sofort zu Diskussionen von besorgten Anwendern, die ihren
defekten Pentium-Prozessor von Intel kostenlos getauscht haben
wollten. Intel selbst weigerte sich und behauptete, der Fehler sei
für die Mehrzahl der Anwender überhaupt nicht spürbar und ein
Austausch sei deswegen nicht notwendig. Die Anwender schlossen sich
aufgrund dieser Firmenpolitik im Netz zu einer Interessengemeinschaft
zusammen und forderten gemeinschaftlich kostenlosen Austausch. Intel
wurde letztendlich durch den im USENET erzeugten Druck dazu
gezwungen, eine solche kostenlose Umtauschaktion einzuleiten. Die
Pentium-Affäre hat aber noch andere, weiter reichende Auswirkungen
auf die Firmenpolitik gehabt: Intel verfolgt inzwischen eine viel
offenere Politik im Umgang mit Fehlern in ihren Prozessoren, in der
Hoffnung, daß ein Kunde, der schon vorher weiß, welche Fehler das
Produkt hat, sich nicht mehr beschweren kann. Im Nachhinein
betrachtet fahren Firma und Kunden mit der neuen Politik viel besser
als mit der alten, aber diese Lektion zu lernen war für die Firma
Intel ein sehr schmerzhafter und nicht ganz billiger Prozeß.&lt;/p&gt;
&lt;h2 id=&#34;www-weltweite-werbung&#34;&gt;
    &lt;a href=&#34;#www-weltweite-werbung&#34;&gt;
	WWW: WeltWeite Werbung?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Für das durchschnittliche Managment einer Firma ist ein
polydirektionales Medium also nicht das, was wirklich gewünscht wird.
Man möchte stattdessen lieber eine bidirektionale Kommunikation
haben: Der Kunde soll jederzeit Produktinformationen über die Firma
bekommen können und der Kunde soll sich Rat und Hilfe suchend an den
Support der Firma wenden, anstatt sich in irgendwelchen
Interessengruppen herumzutreiben. News und Mail leisten dies nicht.
Etwas Neues mußte her und dieses Neue wurde mehr aus Zufall
geschaffen. Physiker wollten eine Methode haben, ihre
Forschungsinformationen im Netz der Netzgemeinde zu präsentieren. Da
Zahlenreihen von Meßdaten aber von den meisten Leuten als ästhetisch
unbefriedigend angesehen werden, muße eine Methode gefunden werden,
Text und Graphik zu integrieren und mit einer ansprechenden
Benutzungsoberfläche zu versehen. Es entstand das World Wide Web.&lt;/p&gt;
&lt;p&gt;Wie alle genialen Ideen besteht auch WWW im Prinzip sehr einfachen
Zutaten: Da ist zum einen eine einfache Seitenbeschreibungssprache,
die es mit einem Mal erlaubt, nicht nur einfachen ASCII-Text zu
übertragen, sondern auch die optisch ansprechende Gestaltung von
Texten und sogar die Einbindung von Bildern, Tönen und Animationen
zuläßt. Statt durch trockene und gleichförmige Zeichenströme
eingeengt zu sein, hat der Autor eines Dokumentes nun auf einmal die
Möglichkeit, seine Aussage mit allen Mitteln modernen Designs
aufzubereiten. Dazu hat man einen Mechanismus geschaffen, der es
erlaubt auf andere Texte, Dateien und Bilder zu verweisen. Ein
Dokument steht nicht mehr alleine, sondern ist in einen Kontext
eingebunden, der noch dazu mit einem einfachen Mausklick abgefragt
werden. kann. Auf diese Weise werden alle diese Dokumente zu einem
großen Netz, eben dem Web, zusammengebunden. Der Schlüssel zum Netz
war für den Anwender aber schließlich die Idee, die Nutzung des World
Wide Web und der klassischen Internet-Dienste in einem einzigen
Programm, dem Browser, zusammenzufassen und diesen mit einer
graphischen Benutzungsoberfläche auszustatten. Statt einer ganzen
Horde kommandozeilengeprägter Werkzeuge aus der Computer-Steinzeit
ist nur noch ein einziges Programm zu erlernen, das noch dazu über
eine zeitgemäße graphische Benutzerführung und Onlinehilfe verfügt.&lt;/p&gt;
&lt;p&gt;Die folgende Abbildung
zeigt, wie der Abruf einer Informationsseite im Web abläuft: Das
Browserprogramm läuft auf dem Rechner des Internet-Benutzers. Dieser
äußert durch Mausklicks oder mit der Tastatur seine Wünsche, die vom
Browser in eine Serveranfrage übersetzt werden. Über das Internet
erreicht die Anfrage einen von vielen Servern im Netz. Der Server
liefert auf Grund der Anfrage entweder einen vorbereiteten Text oder
er reicht die Anfrage an ein Datenbankprogramm weiter, das auf Grund
dieser Anfrage dynamisch ein Antwortdokument erzeugt. In jedem Fall
wird die Anwort über das Internet wieder zum Browser zurückgesendet,
der sie dem Benutzer graphisch aufbereitet darstellt. In der
Abbildung erkennt man, wie aus der ungelenken Seitenbeschreibung, die
der Server verwaltet, durch den Browser eine ansprechend aussehende
Seite erzeugt wird.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1996/01/webworks.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Der Serverrechner stellt mit dem Programm httpd Daten im Netz bereit. Diese Daten liegen entweder als vorbereitete Dateien auf der Festplatte oder werden als Antwort auf eine Anfrage aus einer Datenbank berechnet. Die Darstellung der Daten übernimmt das Clientprogramm netscape. Es wandelt die Steueranweisungen der Seitenbeschreibungssprache HTML (links) in graphische Attribute und Querverbindungen (rechts) um.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Das WWW ist ein bidirektionales Medium: Der Abrufer einer Seite hat
die Möglichkeit, sich die Seite anzusehen und - falls der
Seitendesigner das vorgesehen hat - an jemanden privat zu antworten.
Es ist möglich von einer eigenen Seite aus auf eine fremde Seite zu
verweisen, aber es ist nicht möglich, eine fremde Seite um eigene
Anmerkungen zu erweitern. Diese letzte Eigenschaft, die aus dem Web
ein polydirektionales Medium machen würde, wenn sie vorhanden wäre,
ist entscheidend für die kommerzielle Akzeptanz des Mediums:
&amp;ldquo;Polydirektionaltät macht keinen Umsatz&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Wer sich mit Netzwerken beschäftigt, dem wird dieses Konzept nicht
ganz neu vorkommen. Immerhin versucht die Telekom, vormals
Bundespost, schon seit Jahren etwas ganz ähnliches mit BTX zu
etablieren. Während BTX aber trotz ähnlich bunter Oberflächen nicht
so recht aus den Startlöchern kommen wollte, hat das Internet keine
Schwierigkeiten damit, seine Teilnehmerzahlen wieder und wieder zu
verdoppeln.&lt;/p&gt;
&lt;p&gt;Warum ist das World Wide Web für Anwender und Anbieter ein
interessanterer Dienst?&lt;/p&gt;
&lt;p&gt;Ein sehr wichtiger Unterschied zwischen BTX und dem Internet ist, daß
das Internet ein weltweites Netz ist, während BTX ein rein deutsches
Netz darstellt, das nur wenige Übergänge zu anderen, ebenfalls
nationalen Netzen hat. Ein Problem aller Computernetze ist besonders
in der Anfangsphase, daß man bereits Nutzer haben muß, um neue
Anbieter werben zu können und daß man bereits interessante Anbieter
haben muß, um neue Nutzer für den Dienst interessieren zu können. Im
Gegensatz zu BTX hat das Internet dieses Problem von vornherein
nicht gehabt, weil die akademische Nutzerschicht einen Basispool von
Nutzern als auch eine reiche von experimentellen, interessanten
Anwendungen zur Verfügung gestellt hat.&lt;/p&gt;
&lt;p&gt;Hinzukommt, daß es für jemanden, der Information bereitstellen
möchte, in BTX ein sehr großer Schritt vom Anwender zum Anbieter ist.
Seitenerstellung benötigt spezielle Werkzeuge, die gesondert gekauft
werden müssen, wenn man seine Seiten nicht bei einer Agentur
kommerziell erstellen lassen möchte. Im Internet dagegen genügt es im
einfachsten Fall, einen simplen Texteditor zu verwenden, um
ansprechende Seiten für das WWW erstellen zu können. Solches Arbeiten
ist vielleicht unkomfortabel, aber immerhin kann man so ohne den
geringsten Investitionsaufwand ausprobieren, ob und wie man Daten
anbieten kann. Die Leichtigkeit des Einstiegs setzt sich später fort:
Wenn man in BTX Seiten erstellt hat, muß man in BTX Anbieter werden.
Wegen der starken Reglementierung von BTX ist dies administrativ und
finanziell ein ziemlich aufwendiger Schritt. Im Internet dagegen
bekommt man bei fast allen Internet-Anbietern mit seinem Zugang zum
Internet auch einen gewissen Speicherplatz zur Verfügung gestellt,
den man nutzen kann, wenn man eigene Daten anbieten möchte. Der
Übergang vom reinen Nutzer zum Anbieter von Informationen ist im
Internet als quasi nahtlos und damit viel leichter zu vollziehen.&lt;/p&gt;
&lt;p&gt;Das Internet ist von je her ein Netz gewesen, dessen Werkzeuge und
Programme sich nahtlos die Welt der PCs und deren Anwendungen
integrieren. Werkzeuge für die Entwicklung von Seiten im World Wide
Web, für den Datentransfer und für den Zugriff auf Information sind
in Preis, Bedienung und Ressourcenverbrauch einer solchen Umgebung
angemessen. Im Unterschied dazu hat die (damals noch) Bundespost mit
BTX zunächst auf einen zentralen Großrechner und einen Haufen dummer
Endgeräte gesetzt. Gerade diese Endgeräte, die ihre Abstammung aus
dem Bereich der Telefonentwicklung nicht verleugnen konnten, waren
ein Hindernis für BTX: Damals übliche Heim-PCs konnten die recht
hohen graphischen Anforderungen von BTX nicht vollständig und schon
gar nicht schnell realisieren und die klobigen Bundespost-Terminals
waren für den Privatgebrauch zu teuer und integrierten sich zum
Ausgleich dafür überhaupt nicht in die PC-Umgebung eines Büros.&lt;/p&gt;
&lt;p&gt;Der Vergleich der deutschen Entwicklung BTX mit dessen scharfer
Trennung zwischen Anwender/Konsument und Anbieter/Produzent und dem
amerikanischen Internet mit dem fließenden Übergang zwischen beiden
Formen der Netzteilnahme ist das Ergebnis stark unterschiedlicher
Vorstellungen davon, wie die Netze von Morgen aussehen sollen: Das
amerikanische Modell geht davon aus, daß eine günstige Infrastruktur
von Datentransportwegen schon vorhanden ist oder wenigstens für wenig
Geld schnell verfügbar gemacht werden kann. Das Schwergewicht der
amerikanischen Netzdesigner liegt auf den Anwendungen, die geschaffen
werden. Der Unterbau, schnelle Kabel und benötigte Eigenschaften der
Netzwerkprotokolle, wird sich dann schon anpassen, wenn es notwendig
ist. Auch lassen sich immer mehr Firmen in den USA auf das Abenteuer
Polydirektionalität ein. Eine Firmenrepräsentation außerhalb der
abgeschirmten Anzeigenwelt des WWW in einer wirklichen Diskussion mit
den Kunden und der Kunden untereinander ist sicherlich nicht leicht
zu kalkulieren, aber wenn sie gelingt, wird sie sicher positive
Rückwirkungen auf die Struktur der Firma haben.&lt;/p&gt;
&lt;p&gt;In Deutschland kommt die Debatte nicht so weit. Sie stoppt schon an
der Diskussion um die nicht vorhandene Infrastruktur, den fehlenden,
günstigen Datentransferdiensten. Zwar wäre die Technolgie zum Aufbau
schneller Datennetze auch in Deutschland vorhanden, aber die
vollkommen ungesunde Struktur des Telekommunikationswesens in
Deutschland mit seinen künstlich hohen Preisen für
Telekommunikationsdienstleistungen jeder Art schreckt vor allen
Dingen die experimentierfreudigen, aber kapitalschwachen kleinen und
mittleren Firmen ab. Diskutiert werden hauptsächlich medienwirksame
Großprojekte, die sich um so aufregende Dinge wir interaktives
Fernsehen oder Videoshopping drehen und die hauptsächlich als Ausrede
für Beschaffung von Übertragungskapazität dienen. Kundeninteresse,
das zeigen die bereits angelaufenen Pilotprojekte, ist bei diesen
Dingen auf dem Markt der Heimanwender praktisch nicht vorhanden:
Video on Demand gibt es bei Video Peter um die Ecke und interaktive
TV-Romane kann man schon jetzt bei Nintendo kaufen. Und als
kommerzielle Anwendung wird in jedem einzelnen Bericht über diese
Pilotprojekte die vielbeschworene Telemedizin bemüht - andere
Anwendungen scheinen auch den bemühtesten Werbetextern für diese
Zukunft nicht einzufallen. Polydirektionalität, diese ganz entscheidende
Eigenschaft des Internet, ist für ein deutsches Managment viel zu
aufregend und unter allen Umständen zu vermeiden.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wer beherrscht das Internet?</title>
      <link>https://blog.koehntopp.info/1996/01/01/wer-beherrscht-das-internet.html</link>
      <pubDate>Fri, 01 Mar 1996 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1996/01/01/wer-beherrscht-das-internet.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;aus &amp;ldquo;Die Netzrevolution - auf dem Weg in die Weltgesellschaft&amp;rdquo;, Rost (Hrsg.), 1996, Frankfurt/ Main: Eichborn-Verlag, 230 Seiten&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;wer-beherrscht-das-internet&#34;&gt;
    &lt;a href=&#34;#wer-beherrscht-das-internet&#34;&gt;
	Wer beherrscht das Internet?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;Es gibt keine zentrale Koordination des Internet, die einzelnen
Teilnehmern oder Teilnehmerorganisationen Weisungen erteilen kann
oder bei der man sich über Fehlverhalten anderer beschweren
kann.&amp;rdquo; So oder so ähnlich liest man es wahrscheinlich in jeder
Einführung in die Besonderheiten des Internet an irgendeiner
Stelle. Gibt es wirklich niemanden, der das Internet beherrscht? Ist
das Internet eine totale Anarchie?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Die Antwort lautet &amp;ldquo;Nein&amp;rdquo;. Die Begründung für das &amp;ldquo;Nein&amp;rdquo;
ist ziemlich lang.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;betrachtungsebenen&#34;&gt;
    &lt;a href=&#34;#betrachtungsebenen&#34;&gt;
	Betrachtungsebenen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das Internet ist kein homogenes Netz. Stattdessen handelt es sich um
ein Sammelsurium von anderen Netzwerken, auf denen Internet-Pakete
verschickt werden. Diese einzelnen Trägernetze, auf denen das
Internet aufsetzt, können natürlich stark unterschiedliche
technische und administrative Bedingungen aufweisen. Und
selbstverständlich können einzelne Teilnetze im Internet
sehr wohl eine zentrale Koordination haben. Ein Beispiel macht das
sehr gut deutlich:&lt;/p&gt;
&lt;p&gt;Ich sitze daheim an meiner Next-Workstation, die über ein
lokales Ethernet und einen ISDN-Router Verbindung zum deutschen EuNet
hat. Wenn ich von Zuhause aus auf den WWW-Server
&lt;code&gt;http://www.pz-oekosys.uni-kiel.de&lt;/code&gt; zugreife, dauert es nur wenige
Sekunden und die Startseite des Projektzentrums
Ökosystemforschung wird auf meinem Bildschirm aufgebaut. Aber
welcher Aufwand an technischer und administrativer Kooperation war
dazu notwendig?&lt;/p&gt;
&lt;p&gt;Nun, die erste Station für meine Internet-Datenpakete ist mein
lokales Ethernet, das die verschiedenen Computer in meinem Haushalt
miteinander verbindet. Selbstverständlich ist dies mein Netz und
ich bestimme, welche Rechner dort angeschlossen werden und was auf
diesen Netz gemacht wird. Meine IP-Pakete für das Projektzentrum
werden dann von einem kleinen PC mit einer Ethernet- und einer
ISDN-Steckkarte über Leitungen der Telekom zum Kieler Point of
Presence des EuNet weitergeleitet. Die Telekom kann durch den Preis
und die Verfügbarkeit dieser Leitungen die Dauer meiner
Präsenz im Internet ziemlich regulieren. Auf den Inhalt der
übertragenen Daten hat sie nach deutschem Recht zum Glück
keinen Einfluß.&lt;/p&gt;
&lt;p&gt;Meine Datenpakete, die inzwischen beim EuNet-POP Kiel angekommen
sind, werden nun über verschiedene Standleitungen innerhalb des
EuNet, die auch alle bei der Telekom gemietet worden sind, bis zu
einem Übergangspunkt ins deutsche Wissenschaftsnetz weitergegeben.
Das Wissenschaftsnetz ist ein Datennetz, das vom &amp;ldquo;Verein zur
Förderung eines deutschen Forschungsnetzes e.V.&amp;rdquo; (DFN-Verein)
ins Leben gerufen worden ist und das praktisch alle
größeren deutschen Forschungseinrichtungen verbindet. Zwar
basiert es auf dem Datex-P Dienst der Telekom, aber es wird
hauptsächlich verwendet, um Internet-Daten zu verschicken. Der
DFN-Verein unterhält dazu eine ganze Reihe von Übergangspunkten
aus dem Wissenschaftsnetz in andere Teilnetze des Internet.&lt;/p&gt;
&lt;p&gt;Teilnahme und Nutzung des Wissenschaftsnetzes werden vom DFN-Verein
reglementiert: Kommerzieller Datentransfer auf dem Wissenschaftsnetz
ist nicht gestattet. Transitverkehr ist ebenso untersagt, dabei
versteht der DFN unter Transit den Transport von Daten aus einem
Drittnetz durch das Wissenschaftsnetz in ein anderes Drittnetz. Das
Wissenschaftsnetz soll nicht als Trägernetz für andere
Netzwerke mißbraucht werden.&lt;/p&gt;
&lt;p&gt;Über das Wissenschaftsnetz gelangen meine Datenpakete
schließlich in das lokale Ethernet der Universität Kiel
und letztendlich zum WWW-Server des Projektzentrums
Ökosystemforschung. Dieses lokale Netzwerk der Universität
wird durch das Rechenzentrum der Universität beziehungsweise
durch die einzelnen Institute selbst betrieben. Auch diese Parteien
stellen möglicherweise noch gewisse Ansprüche an die Art
der Nutzung.&lt;/p&gt;
&lt;p&gt;Wie man sehen kann, sind sogar an einem einfachen Datentransfer
zwischen zwei Netzteilnehmern innerhalb derselben Stadt eine Vielzahl
von Parteien beteiligt. Alle diese Leute haben unter Umständen
sehr unterschiedliche Vorstellungen davon, was das Netz ist und wie
es genutzt werden sollte.&lt;/p&gt;
&lt;p&gt;Man kann versuchen, das Problem zu vereinfachen, indem man die an
einer solchen Datenübertragung beteiligten Gruppen ein wenig
klassifiziert:&lt;/p&gt;
&lt;p&gt;Als erstes wäre dort derjenige zu nennen, der die Kabel für
die Kommunikation bereitstellt. Abgesehen von lokalen Netzen, die
Grundstücksgrenzen nicht überschreiten dürfen, ist
dies in Deutschland aufgrund des Telekommunikationsmonopols immer die
Telekom. Sie diktiert die durch Verfügbarkeit und Preise von
Diensten die Rahmenbedingungen, mit denen sich alle, die
kommunizieren möchten, abfinden müssen.&lt;/p&gt;
&lt;p&gt;Zweite beteiligte Gruppe sind die Internet-Provider. Ein Provider ist
jemand, der Kabel von der lokalen Telekommunikationsgesellschaft
erwirbt und darauf den Dienst &amp;ldquo;Verschicken von IP-Paketen&amp;rdquo; anbietet.
Neben dem schon genannten DFN-Verein, der seine Dienste
hauptsächlich im akademischen Bereich anbietet, und dem
deutschen EuNet gibt es in Deutschland als &amp;ldquo;klassische Provider&amp;rdquo; noch
den Karlsruher Anbieter XLink und die Hamburger MAZ. Daneben haben
sich in den letzten Jahren noch andere Firmen etabliert, die
ebenfalls Zugang zum Internet anbieten, aber eigentlich andere
Produkte verkaufen möchten: Da ist einmal die Telekom, die mit
Telekom Online Internetzugang verkauft, aber eigentlich BTX anbieten
möchte. Dann gibt es IBMs Advantis, das eigentlich helfen soll,
IBMs OS/2 Warp zu verkaufen. Compuserve, denen es viel lieber
wäre, wenn ihre Kunden das eigene Compuserve Network nutzen
würden. Und - in Europa noch ohne Internet-Zugang - Microsoft,
bei denen Internet-Zugang ein Abfallprodukt ihres hauseigenen
Microsoft Network ist.&lt;/p&gt;
&lt;p&gt;Einige dieser Provider nehmen ziemlich starken Einfluß darauf,
was ihre Kunden mit dem Internet machen können und dürfen.
Manchmal ist die Einflussnahme technisch bedingt, zum Beispiel ist
der Internet-Zugang der Telekom nicht transparent: Bei
TELNET-Verbindungen werden Steuerzeichen nicht übertragen und
damit ist der TELNET-Dienst praktisch wertlos. Bei anderen ist die
Einflussnahme inhaltlicher Art. So hatte zum Beispiel zu der Zeit,
als dieser Artikel geschrieben wurde, die Universität Frankfurt
vorübergehend die WWW-Seiten eines Studenten gesperrt, der
Informationen über Kurden im Netz zur Verfügung stellt. Ein
anderes Beispiel ist die Firma Microsoft, die Anbietern von
Konkurrenzprodukten den Zugang zu Microsoft Network zu verwehren
versucht.&lt;/p&gt;
&lt;p&gt;Solange Informationen im Internet zur Verfügung gestellt werden
und es eine ausreichend große Anzahl von Internet-Anbietern
gibt, sind solche Beschränkungen kein Problem. Der betroffene
Kunde begibt sich dann einfach zu einem anderen Anbieter und wird
dort glücklich. Da das Internet ein offenes Netz aus Netzen ist,
macht weder für den Anbieter noch für den Benutzer einen
Unterschied, wo man angeschlossen ist. So hat sich zum Beispiel schon
kurz nach der Sperrung der Seiten des oben erwähnten Studenten
an der Uni Frankfurt ein private betriebener Internet-Zugang in Jena
bereit erklärt, die betreffenden Seiten im Netz bereitzuhalten.
Damit ist das Internet bei einer gesunden Anbieterstruktur effektiv
resistent gegen jede Form der inhaltlichen Kontrolle.&lt;/p&gt;
&lt;p&gt;Natürlich macht so etwas auch Probleme, jedenfalls aus der Sicht
einer Person, die das Internet nicht gewohnt ist: So ist es zum
Beispiel nicht möglich, gegen die Anbieter
nationalsozialistischer Propaganda auf ausländischen
Serverrechnern vorzugehen oder auch nur zu verhindern, daß
solche Seiten in Deutschland abrufbar sind. Erfahrene
Internet-Benutzer haben mit solchen Dingen weniger Probleme: Sie
wissen, daß ein Verbot solcher Seiten sowieso nur die Symptome
bekämpfen würde, aber am eigentlichen Problem, der
Überzeugung der Anbieter, nichts ändern würde. Entscheidend
ist nicht, daß man solche Seiten unterdrücken kann,
sondern daß man die Freiheit hat, Gegenmeinungen im gleichen
Forum an gleicher Stelle zu präsentieren.&lt;/p&gt;
&lt;h2 id=&#34;die-dritte-macht&#34;&gt;
    &lt;a href=&#34;#die-dritte-macht&#34;&gt;
	Die Dritte Macht
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Neben den beiden bereits benannten Parteien gibt es noch eine dritte,
große Kraft, die das Internet bestimmt. Im Vergleich zu den
bereits benannten Gruppen ist sie relativ unauffällig und bleibt
dem normalen Benutzer in der Regel verborgen: Es sind die Gremien, in
denen die technischen Grundlagen des Netzes genormt und beschlossen
werden. Hier hat das Internet eine im Vergleich zu anderen
Normungsgremien einmalige Struktur.&lt;/p&gt;
&lt;p&gt;Grundlage der technischen Verfahren im Internet sind die Internet
Standards. Diese Standards sind besondere Papiere in einer Reihe von
Dokumenten, in denen die technischen Hintergründe des Internet
diskutiert werden: die Requests for Comments (RFC). Ursprünglich
war die Entwicklung des Internet vollständig informal: Im Rahmen
einer akademischen Diskussion unter gleichen wurden Papiere
veröffentlicht, in denen Ideen diskutiert wurden oder Notizen
von Treffen verbreitet wurden. Diese Papiere bekamen zum Zwecke der
Archivierung fortlaufende Nummern. Da RFCs Dokumente zum Zwecke der
Archivierung sind, wird ein bestimmter RFC nach seiner
Veröffentlichung niemals mehr verändert. Eine neue Version
bekommt also eine neue Nummer und verweist auf seinen Vorgänger
als veraltetes Dokument.&lt;/p&gt;
&lt;p&gt;Im Laufe der Entwicklung wurden einige dieser RFCs, die
Übertragungsverfahren oder andere technische Details beschrieben,
immer wieder überarbeitet und weiter und weiter ausgefeilt. Da
diese Dokumente praktisch die seit Jahren gängige
Verfahrensweise im Internet beschrieben, hat man diese Dokumente zu
offiziellen Standards im Internet erklärt.&lt;/p&gt;
&lt;p&gt;Das heutige Verfahren der Verabschiedung neuer Standards im Internet
ist nicht mehr ganz so frei von Formalien, aber der Geist des
ursprünglichen Vorgehens ist weitgehend erhalten geblieben. Ein
zukünftiger Internetstandard beginnt sein Leben meistens als
ein Request for Comment. Im Prinzip kann er von jedermann auf der
Welt eingereicht werden, aber in der Praxis wird er meistens von
einer Arbeitsgruppe der Internet Engineering Task Force (IETF)
erarbeitet. Wenn ein solches Papier eingereicht wird, entscheidet die
Internet Engineering Steering Group, ob das Thema es wert ist,
dafür den Standardisierungsprozeß in Gang zu setzen und ob
ausreichend Bedarf nach einer Regelung besteht. Wenn dies der Fall
ist, beginnt der neue Internet Standard sein Leben als &amp;ldquo;proposed
standard&amp;rdquo;, als Standardisierungsvorschlag.&lt;/p&gt;
&lt;p&gt;Der Vorschlag kann nach Ablauf einer gewissen Wartezeit auf der
Leiter der Internet Standardhierarchie weiter vorrücken, wenn
mindestens zwei unabhängige Implementationen des Standards
existieren, die in der Lage sind, zusammenzuarbeiten. Dies stellt
sicher, daß erstens Interesse innerhalb der Gemeinschaft der
Entwickler vorhanden ist und daß zweitens der Standard
detailliert genug ist, um ihn als Basis für eine Entwicklung zu
nehmen. Die bei der Arbeit mit dem Standard gewonnen Erfahrungen
fließen in der Regel in dieser Phase in eine Überarbeitung des
Papieres ein. Das Resultat wird ein neues Papier sein, das zum &amp;ldquo;draft
standard&amp;rdquo; (Standardentwurf) wird. Nach einer weiteren Wartezeit kann
dieser Entwurf dann endlich zu einem vollwertigen Internet Standard
erklärt werden.&lt;/p&gt;
&lt;p&gt;Dieses Vorgehen stellt die Arbeitsweise vieler anderer
Normungsgremien auf den Kopf: Statt eine neue Norm zu spezifizieren
und nach der Festlegung der Norm anhand der vorhandenen Texte zu
arbeiten, dokumentiert ein Internet Standard meistens nur schon
jahrelang gebräuchliche, existierende Praxis. Das hat nicht nur
zur Folge, daß es relativ wenige &amp;ldquo;tote&amp;rdquo; Standards gibt, sondern
auch, daß Internet Standards in der Regel wesentlich leichter
zu lesen und zu verstehen sind als andere Normen.&lt;/p&gt;
&lt;p&gt;Gleichzeitig ist dieses Standardisierungsverfahren auch wesentlich
offener als andere. Zum einen sind RFCs im Internet frei
verfügbar. Sie können bis auf die Transferkosten kostenlos
abgerufen werden und unterliegen keinen
Weitergabebeschränkungen. Zum anderen kann der Anstoß zur
Ingangsetzung des Normungsverfahrens von einer beliebigen Institution
oder sogar Einzelperson kommen.&lt;/p&gt;
&lt;p&gt;Sogar die oben erwähnte IETF ist keine formale Organisation,
sondern zum größten Teil ein Verband Arbeitsgruppen. Diese
Arbeitsgruppen existieren die meiste Zeit in Form von Mailinglisten,
die im Zugang nicht beschränkt sind und auf denen jede
interessierte Person mitdiskutieren kann. Gelegentlich kommt es zu
IETF Meetings, auf denen sich dann die beteiligten Personen und
Arbeitsgruppen treffen und wo man persönlich miteinander
diskutieren kann. Es gibt keine formale IETF-Mitgliedschaft, sondern
man wird durch Mitarbeit in einer IETF Arbeitsgruppe IETF-Mitglied.&lt;/p&gt;
&lt;p&gt;Computerprotokolle verwenden meistens einen Satz von magischen
Nummern und Namen, die in irgendeiner Art und Weise die korrekte
Funktion des Netzes gewährleisten. Solche Nummern sind zum
Beispiel die Empfänger- und Absenderadressen von Datenpaketen,
ohne die keine einzige Nachricht ihr Ziel finden würde. Von
gleicher Bedeutung sind die Namen von Rechnern und Teilnetzwerken,
die ebenfalls eindeutig sein müssen. Damit das Netz
funktioniert, müssen solche Namen und Nummern eindeutig vergeben
werden. Das Internet hat zu diesem Zweck die Internet Assigned
Numbers Authority (IANA), eine zentrale Registratur, die über
alle Zahlen und Namen wacht, die dieser Einschränkung der
Eindeutigkeit unterliegen. Wer am Netz teilnehmen möchte,
muß sich eine solche Netznummer und einen Namen zuteilen lassen.&lt;/p&gt;
&lt;p&gt;Die IANA gibt im keine einzelnen Namen oder Nummern heraus und
arbeitet auch nicht mit Einzelpersonen oder -institutionen zusammen.
Stattdessen existiert normalerweise ein nationales Network
Information Center (NIC), das einen Block von Internetadressen
zugeteilt bekommt und dem die Verwaltung des nationalen Namensraumes
unterliegt. In Deutschland ist dies etwa das DE-NIC, das Namen
vergeben kann, die auf &amp;ldquo;.de&amp;rdquo; enden und das Internet-Nummern für
deutsche Internet-Teilnehmer vergibt. Aber selbst mit dem DE-NIC wird
man als deutscher Netzteilnehmer nicht persönlich reden, sondern
über seinen Internet-Provider, der die Beschaffung von Nummern
und Namen in der Regel übernimmt.&lt;/p&gt;
&lt;p&gt;Die Vergabe von Namen ist für die NICs in letztere Zeit zu einem
echten Problem geworden. Mit dem explosionsartigen Wachstum des
Internet drängen immer mehr Firmen in das Netz und
selbstverständlich ist für eine Firma eine Adresse wie
&lt;a href=&#34;http://www.firma.namedesproviders.land&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.firma.namedesproviders.land&lt;/a&gt;

 vollkommen unakzeptabel. Das
bedeutet, daß beim zuständigen NIC hunderte, wenn nicht
tausende von Anträgen auf Namen wie &amp;ldquo;firma.de&amp;rdquo; oder gar
&amp;ldquo;produkt.de&amp;rdquo; eingehen. Einige dieser Namen sind von vorneherein als
kurzfristige Werbegags gedacht und es ist bei der Vergabe des Namens
schon das Verfallsdatum absehbar. Für ein NIC ist das eine
schwierige Situation: Auf der einen Seite darf das NIC bei der
Vergabe von Namen nicht zu restriktiv sein, denn es sitzt auf einer
Monopolressource, auf der anderen Seite ist das NIC für die
Struktur und Ordnung des ihm zugeteilten Abschnittes des Namensraumes
verantwortlich und hat eine &amp;ldquo;Verschmutzung&amp;rdquo; des Namensraumes zu
vermeiden und nebenbei noch Konflikte zwischen zwei Bewerbern um
denselben Namen zu schlichten.&lt;/p&gt;
&lt;h2 id=&#34;teilnehmer-auch-mächtig&#34;&gt;
    &lt;a href=&#34;#teilnehmer-auch-m%c3%a4chtig&#34;&gt;
	Teilnehmer: Auch mächtig?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In der obigen Aufzählung von &amp;ldquo;Mächtigen&amp;rdquo; im Internet fehlt
eine Gruppe: Die Netzteilnehmer. Welchen Einfluß haben sie auf
die Entwicklung des Internet oder die Gestaltung von Netzlandschaften?&lt;/p&gt;
&lt;p&gt;Nun, zum einen steht es ihnen jederzeit frei, die Lager zu wechseln
und etwa Informationsanbieter zu werden oder aktiv an der Gestaltung
von Standard im Internet teilzunehmen. Aber welchen Einfluß
haben Anwender in ihrer Rolle als Anwender? Nun, aktiv werden kann
ein Anwender nur als Abrufer von Information und als solcher ist er
bei der Nutzung fast aller Internet-Dienste gegenüber den
anderen Nutzern fast unsichtbar. Er bestimmt sicherlich, welche
Informationsangebote durch hohe Nutzerzahlen populär werden,
aber das ist nur eine sehr indirekte Art der Einflußnahme.&lt;/p&gt;
&lt;p&gt;Ein einziger Dienst des Internet fällt hier aus der Rolle, weil
in ihm die Nutzer den entscheidenden Einfluß haben und das sind
die USENET News. Die USENET News sind ein Diskussionsforum, in dem
sich jeder Nutzer zu Wort melden und seine eigenen Beiträge
einbringen kann. Die Verwaltung dieser Diskussionsforen findet
vollständig durch die Nutzer statt.&lt;/p&gt;
&lt;p&gt;Da ist einmal der Prozeß der Einrichtung neuer
Diskussionsgruppen: Technisch ist es sehr leicht, neue
Diskussionsgruppen einzurichten oder wieder zu entfernen. Damit eine
solche Gruppe jedoch weit verbreitet wird und vom Netz angenommen
wird, ist es notwendig, vorher einen Konsenz über die Namen und
die Zweckbestimmung solcher Gruppen zu erzielen. Also hat die
Netzgemeinschaft im Laufe ihrer Entwicklung ein Dokument erarbeitet,
das einen formalen Weg zur Einrichtung solcher Gruppen vorsieht. Eine
neue Gruppe muß formal vorgeschlagen werden und dabei muß
außer dem Namen auch eine kurze Erläuterung zum Zweck der
Gruppe gegeben werden. Außerdem muß klar werden, wie sich
diese Gruppe von anderen Gruppen thematisch unterscheidet. Dieser
formale Vorschlag wird dann einige Zeit in den News diskutiert und
unter Umständen einige Male verändert, bevor es zu einer
Abstimmung kommt.&lt;/p&gt;
&lt;p&gt;Die &amp;ldquo;Abstimmung&amp;rdquo; ist an und für sich keine, da am Ende ja nichts
beschlossen werden kann: Jeder Betreiber eines Netzknotens kann immer
noch für sich und alleine entscheiden, ob er eine bestimmte
Gruppe auf seinem eigenen Rechner führen möchte. Es handelt
also mehr um eine Meinungsumfrage als um eine Abstimmung. Aber wenn
das Ergebnis einer solchen Abstimmung nach den Regeln positiv
ausfällt, kann man einigermaßen sicher sein, daß die
neue Gruppe von der überwiegenden Anzahl der Systeme akzeptiert
und eingerichtet wird.&lt;/p&gt;
&lt;p&gt;Obwohl in den USENET News wie im eigentlichen Internet also jede Form
der Exekutive zur Durchsetzung von Beschlüssen der
Netzgemeinschaft fehlt, gelingt es trotzdem, stabile Formen der
Kooperation zu finden und diese Umzusetzen. Und obwohl niemand da
war, um dem Netz am Anfang eine Satzung oder einen Staatsvertrag zu
geben, haben sich formale Regeln für den Netzbetrieb entwickelt,
die weitgehend akzeptiert und eingehalten werden.&lt;/p&gt;
&lt;p&gt;Oft unterscheidet sich dieses Regelwerk stark von der jeweiligen
lokalen Gesetzgebung, gerade im Bereich Urheberrecht oder
Weiterverbreitung von &amp;ldquo;verboteten&amp;rdquo; Informationen ist man im Netz
meistens wesentlich liberaler als in der Wirklichen Welt. Aber
meistens ist das netzeigene Regelwerk inklusive seiner nicht formal
notierten Traditionen sehr viel besser geeignet, mit Netzproblemen
fertig zu werden als das juristische Handwerkszeug der Wirklichen
Welt.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>init - Starten und Beenden von Linux</title>
      <link>https://blog.koehntopp.info/1995/12/01/init-starten-und-beenden-von-linux.html</link>
      <pubDate>Fri, 01 Dec 1995 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1995/12/01/init-starten-und-beenden-von-linux.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;Linux Magazin, Heft 12/1995&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;init---starten-und-beenden-von-linux&#34;&gt;
    &lt;a href=&#34;#init---starten-und-beenden-von-linux&#34;&gt;
	init - Starten und Beenden von Linux
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Der Prozeß mit der Prozeßnummer 1 ist init. init wird beim Starten des Systems geladen und läuft bis zum Abschalten durch. Er ist der direkte oder indirekte Urahn aller anderen Prozesse eines Linux-Systems. Ein genaues Verständnis der Vorgänge vom Starten von init bis zum Erscheinen des ersten Shellprompts nach dem Login ist notwendig, um fehlerhaft konfigurierte Linuxsysteme wiederzubeleben, ohne neu installieren zu müssen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die meisten Linux-Distributionen haben heutzutage den sysvinit 2.4 von Miquel van Smoorenburg (Miquel van Smoorenburg) installiert. Diese init-Version entspricht im Großen und Ganzen den von regulären System V Systemen bekannten inits, ist aber auf PC-Verhältnisse besonders angepaßt. sysvinit kennt zum Beispiel spezielle Optionen betreffend das Verhalten bei einem Stromausfall mit einer USV und weiß mit einem Control-Alt-Delete umzugehen. Mit Smoorenburgs init-Paket kommen außer init auch noch die Programme &lt;code&gt;halt&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;mesg&lt;/code&gt;, &lt;code&gt;shutdown&lt;/code&gt; und &lt;code&gt;wall&lt;/code&gt; sowie der Quelltext für den &lt;code&gt;powerd&lt;/code&gt;, ein Auswertedämon für die Statusleitungen von USVs. Eine Version von &lt;code&gt;who&lt;/code&gt;, die auf den init abgestimmt wäre, fehlt.&lt;/p&gt;
&lt;p&gt;Zu dem Zeitpunkt, zu dem init gestartet wird, ist das System soeben gebootet worden. Außer dem Root-Dateisystem, das wahrscheinlich nur read-only gemountet ist und möglicherweise beschädigt ist und der Systemkonsole &lt;code&gt;/dev/console&lt;/code&gt; existieren keine weiteren Ressourcen. Außer init laufen keine anderen Prozesse. Swapspace ist noch nicht angemeldet, was zur Folge hat, daß auf Systemen mit nur 4 MB RAM der Speicher schnell knapp werden könnte. Die Aufgabe von init beim Systemstart ist zunächst einmal, die Dateisysteme zu prüfen, gegebenenfalls zu reparieren und sie sowie eventuell vorhandenen Swapspace anzumelden. Durch die zusätzlichen Dateisysteme und den zusätzlichen Speicher versetzt sich das System in die Lage, die zahlreichen Hintergrundprozesse zu starten, die ein vollständig betriebsbereites Linux auszeichnen. Welche Dämonen gestartet sind, wird durch die Konfigurationsdatei von init, die &lt;code&gt;/etc/inittab&lt;/code&gt; festgelegt. Je nach Run-Level des Systems können dies unterschiedliche Prozesse sein.&lt;/p&gt;
&lt;h2 id=&#34;run-levels&#34;&gt;
    &lt;a href=&#34;#run-levels&#34;&gt;
	Run-Levels
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ein Run-Level ist dabei einfach nur die numerische Bezeichnung (Okay, es gibt auch noch einen Run-Level S) für eine bestimmte Systemkonfiguration. Abhängig vom aktuellen Run-Level werden bestimmte Zeilen der &lt;code&gt;/etc/inittab&lt;/code&gt; gültig oder ungültig und init stoppt oder startet dementsprechend die zugehörigen Prozesse. Die &lt;code&gt;/etc/inittab&lt;/code&gt; definiert gewissermaßen den Soll-Zustand des Systems in einem bestimmten Run-Level: Fehlende Dämon-Prozesse werden von init nachgestartet, überzählige Dämon-Prozesse werden von init gestoppt.&lt;/p&gt;
&lt;p&gt;Über den Ist-Zustand des Systems führt init parallel dazu in der utmp-Datei Buch. Für jede Zeile der &lt;code&gt;/etc/inittab&lt;/code&gt; steht in der utmp-Datei ein &lt;code&gt;struct utmp&lt;/code&gt;-Eintrag, der über den Verbleib des zugehörigen Prozesses Aufschluß gibt. Außerdem führt init über seine Aktionen noch in der wtmp-Datei ein Logbuch. Auch diese Datei besteht aus &lt;code&gt;struct utmp&lt;/code&gt;-Einträgen, aber im Gegensatz zu utmp, die eine feste Länge hat, wird wtmp als Logbuch fortgeschrieben (und muß regelmäßig gekürzt werden). Programme wie &lt;code&gt;who&lt;/code&gt;, &lt;code&gt;w&lt;/code&gt;, &lt;code&gt;finger&lt;/code&gt; oder der &lt;code&gt;rwhod&lt;/code&gt; können die utmp-Datei auswerten und anzeigen, welche Benutzer gerade im System eingeloggt sind oder welche Schnittstellen gerade unbelegt sind. Programme wie &lt;code&gt;last&lt;/code&gt; oder Accountingtools werten dagegen die wtmp-Datei aus und können so ein Logbuch über die vergangenen Logins erzeugen.&lt;/p&gt;
&lt;p&gt;Auf einem richtigen System V kann who nicht nur eine Liste der eingeloggten Benutzer erzeugen, sondern die komplette utmp-Datei analysieren und auch mit der Option -r den aktuellen Run-Level des Systems anzeigen. Im Umfeld der Slackware-Distributionen paßt der &lt;code&gt;who&lt;/code&gt;-Befehl nicht zum init und ihm fehlen diese Optionen, sodaß man auf selbstgeschriebene Programme angewiesen ist.&lt;/p&gt;
&lt;p&gt;init erzwingt nicht, daß bestimmte Run-Level (ausgenommen S) bestimmte Bedeutungen haben. Das Verhalten des Systems richtet sich ausschließlich nach der Konfiguration in der &lt;code&gt;/etc/inittab&lt;/code&gt;. Per Konvention hat diese auf den meisten Distributionen, die von Slackware abstammen, ein bestimmtes Aussehen. &amp;ldquo;Slackware inittab&amp;rdquo; weiter unten zeigt die &lt;code&gt;/etc/inittab&lt;/code&gt; einer Slackware-Installation.&lt;/p&gt;
&lt;p&gt;Eine Zeile der &lt;code&gt;inittab&lt;/code&gt; hat dabei das folgende Format:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;	id:runlevels:action:process
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Die &lt;strong&gt;id&lt;/strong&gt; stellt dabei einen eindeutigen Identifikator für die Zeile der inittab dar. Er muß genau zwei Buchstaben lang sein und taucht später als &lt;code&gt;ut_id&lt;/code&gt;-Feld in demjenigen Eintrag in der utmp-Datei auf, der zu dieser Zeile der inittab gehört. Das, was &lt;code&gt;finger&lt;/code&gt; in der Spalte Tty ausdruckt, ist der Inhalt dieses &lt;code&gt;ut_id&lt;/code&gt;-Feldes aus der utmp-Datei.&lt;/p&gt;
&lt;p&gt;Das Feld &lt;strong&gt;runlevels&lt;/strong&gt; definiert einen oder mehrere Run-Levels, in denen diese Zeile aktiviert sein soll.Wenn der aktuelle Run-Level des Systems hier nicht aufgeführt ist, ist diese Zeile unwirksam: Ein Eintrag im Feld runlevels mit den Ziffern 123 wäre nur in den Run-Levels 1, 2 und 3 gültig.&lt;/p&gt;
&lt;p&gt;Das Feld &lt;strong&gt;process&lt;/strong&gt; definiert dann den Aufruf eines Prozesses mit allen Parametern, wie er von init gestartet werden soll, wenn das System sich in einem der in runlevels genannten Run-Level befindet. Diese Prozesse sind entweder Dämon-Prozesse wie &lt;code&gt;xdm&lt;/code&gt; oder &lt;code&gt;nnmaster&lt;/code&gt;, Login-Prompts wie &lt;code&gt;getty&lt;/code&gt; oder Scripte und Anweisungen, die beim Wechsel des Run-Levels aktiv werden. init überwacht diese Prozesse. Wenn sich einer von ihnen beendet, bemerkt init dies und entscheidet anhand der &lt;strong&gt;action&lt;/strong&gt; darüber, ob der Dämon neu gestartet werden soll oder was sonst zu tun ist.&lt;/p&gt;
&lt;p&gt;Der Abschnitt &amp;ldquo;Das action Feld in der inittab&amp;rdquo; erklärt die Bedeutung der verschiedenen Schlüsselworte.&lt;/p&gt;
&lt;h2 id=&#34;die-rc-scripte&#34;&gt;
    &lt;a href=&#34;#die-rc-scripte&#34;&gt;
	Die rc-Scripte
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Bei der Slackware startet die inittab einige rc-Scripte, genau wie bei den meisten anderen Unices auch. Die Bezeichnung &lt;code&gt;rc&lt;/code&gt; steht dabei für &amp;ldquo;run command&amp;rdquo;. Sie stammt noch aus der Urzeit der Computerentwicklung und wurde von einem der vergessenen Vorläufer von UNIX übernommen. Heute würde man wohl stattdessen das Kürzel &amp;ldquo;BAT&amp;rdquo; verwenden.&lt;/p&gt;
&lt;p&gt;Die Struktur dieser Scripte orientiert sich bei Linux mehr an der wesentlich primitiveren Konfiguration eines BSD-Systems als an einem normalen System V. Mit unserem Wissen über init können wir inzwischen erkennen, daß Linux nach dem Booten wegen des &lt;code&gt;initdefault&lt;/code&gt;-Schlüsselwortes in der inittab den Run-Level 5 ansteuert. Der &lt;code&gt;sysinit&lt;/code&gt;-Eintrag sorgt dann für die Abarbeitung von &lt;code&gt;/etc/rc.d/rc.S&lt;/code&gt;, gefolgt von &lt;code&gt;/etc/rc.d/rc.M&lt;/code&gt;, da der &lt;code&gt;wait&lt;/code&gt;-Eintrag &amp;ldquo;rc&amp;rdquo; den Run-Level 5 enthält. Nachdem init auf das Ende von &lt;code&gt;rc.M&lt;/code&gt; gewartet hat, startet er die &lt;code&gt;getty&lt;/code&gt;-Einträge &lt;code&gt;c2&lt;/code&gt; bis &lt;code&gt;c6&lt;/code&gt; (&lt;code&gt;c1&lt;/code&gt; ist hier auskommentiert) und den &lt;code&gt;nnmaster&lt;/code&gt;. Der Eintrag &lt;code&gt;x1&lt;/code&gt; wird ignoriert, da er nur für den Run-Level 6 gilt.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/rc.d/rc.S&lt;/code&gt; ist das Script, das als erstes nach dem Systemstart abgearbeitet wird. Es findet den eingangs erwähnten Rechner ohne Dateisysteme und Ressourcen vor und macht sich daran, diesen Zustand zu ändern. Die ersten Handgriffe nach der Definition eines Suchpfades dienen dazu, den Swapspace zu aktivieren: Dazu muß &lt;code&gt;swapon -a&lt;/code&gt; eine gültige &lt;code&gt;/etc/fstab&lt;/code&gt; vorfinden und dort die Swap-Partitionen benannt bekommen. Der &lt;code&gt;update&lt;/code&gt;-Dämon sorgt dann dafür, daß der Speicherinhalt auch gelegentlich auf die Festplatte geschrieben werden. Jetzt ist auch auf Maschinen mit 4 MB RAM genügend Speicher bereitgestellt, um größere Prozesse ablaufen lassen zu können.&lt;/p&gt;
&lt;p&gt;Die folgenden Anweisungen dienen dazu, die Dateisysteme zu prüfen und - falls möglich - das Root-Dateisystem read-write anzumelden. Wenn der &lt;code&gt;fsck&lt;/code&gt; oder der Remount fehlschlagen, druckt das Script Handlungsanweisungen und versucht noch so etwas wie ein Login hinzubekommen. Die folgenden Anweisungen ab Zeile 92 dienen dann dazu, die üblichen Konfigurations- und Statusdateien zu erzeugen, die beim Systemstart aufgefrischt werden müssen und die Systemzeit zu stellen.&lt;/p&gt;
&lt;p&gt;Startet man Linux im &lt;i&gt;single user mode&lt;/i&gt; oder gerät man auf andere Weise auf ein System mit einer read-only angemeldeten Root-Platte, kann man sich behelfen, indem man &lt;code&gt;/etc/rc.d/rc.S&lt;/code&gt; von Hand ausführt. Mit ein wenig Glück bekommt man so ein halbwegs vernünftig konfiguriertes System, bei dem man immerhin soviele Eingriffsmöglichkeiten hat, daß man die verbleibenden Fehler von Hand korrigieren kann. Auch normale UNIX-Versionen haben ähnliche Scripte. Da das Checken und Anmelden der Platten nach dem Systemstart mit die dringlichste Aufgabe ist, findet man den Namen des Scriptes am einfachsten heraus, indem man sich den sysinit-Eintrag der betreffenden &lt;code&gt;/etc/inittab&lt;/code&gt; ansieht. Ein häufige Name für dieses Script ist zum Beispiel &lt;code&gt;bcheckrc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/rc.d/rc.M&lt;/code&gt; kümmert sich dann um die Vorbereitung des Systems auf den Mehrbenutzerbetrieb. Dieses Script kann davon ausgehen, daß alle lokalen Platten schon verfügbar sind und daß ausreichend Swapspace zur Verfügung steht. Hostnamen und andere das Netzwerk betreffende Dinge sind aber noch undefiniert. &lt;code&gt;rc.M&lt;/code&gt; konfiguriert einen Screenblanker, startet den &lt;code&gt;cron&lt;/code&gt;, setzt den Hostnamen und verzweigt dann vorübergehend in die Scripte &lt;code&gt;rc.inet1&lt;/code&gt; und &lt;code&gt;rc.inet2&lt;/code&gt;. Ersteres dient dazu, den Kernelteil des Netzwerkes zu konfigurieren: Die Interfaces erhalten ihre IP-Nummern und werden gestartet, danach setzt sich der Kernel Routingtabellen. Das gesamte Script besteht im Prinzip nur aus glorifizierten Aufrufen von &lt;code&gt;ifconfig&lt;/code&gt; und &lt;code&gt;route&lt;/code&gt;. Die zweite Datei konfiguriert dann den Anwendungsteil des Netzes, indem dort die entsprechenden Serverprozesse gestartet werden. Die folgenden Arbeiten in &lt;code&gt;rc.M&lt;/code&gt; erledigen dann einige Aufräumarbeiten, die zu verschiedenen Subsystemen gehören. Wichtig ist hier vor allen Dingen der Aufruf von &lt;code&gt;ldconfig&lt;/code&gt;, der Links auf die aktuellen Versionen der shared libraries auf den neuesten Stand bringt. Am Ende von &lt;code&gt;rc.M&lt;/code&gt; wird dann noch auf &lt;code&gt;rc.local&lt;/code&gt; verzweigt, in der der Systemverwalter lokale Modifikationen des Systemstarts unterbringen kann. Einige Versionen der Slackware verzweigen bei Bedarf noch in andere, spezialisierte rc-Dateien zum Verstellen des Zeichensatzes oder der Tastaturbelegung.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1995/12/init-files.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;h2 id=&#34;erweiterungen-der-rc-dateien&#34;&gt;
    &lt;a href=&#34;#erweiterungen-der-rc-dateien&#34;&gt;
	Erweiterungen der rc-Dateien
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Bei der Konstruktion der rc-Dateien, wie sie im Abschnitt &amp;ldquo;Slackware inittab&amp;rdquo; gezeigt wird, ist einzig die Datei &lt;code&gt;rc.local&lt;/code&gt; für lokale Erweiterungen des Bootvorganges vorgesehen. Der Systemverwalter kann hier neben lokalen Anpassungen für Zeichensatz und Tastatur eigene Dämon-Prozesse starten oder den Weg für den Start solcher Prozesse bereiten (indem zum Beispiel alte Lockdateien abgeräumt werden).&lt;/p&gt;
&lt;p&gt;Dabei sollte man auf jeden Fall darauf achten, daß die &lt;code&gt;rc.local&lt;/code&gt;-Datei beendet wird! &lt;code&gt;rc.S&lt;/code&gt; wird als sysinit-Eintrag ausgeführt und &lt;code&gt;rc.local&lt;/code&gt; ist Bestandteil von &lt;code&gt;rc.M&lt;/code&gt; und wird als wait-Eintrag ausgeführt. In beiden Fällen können die folgenden Einträge der inittab erst dann ausgeführt werden, wenn &lt;code&gt;rc.S&lt;/code&gt; bzw. &lt;code&gt;rc.M&lt;/code&gt; beendet sind. Die folgenden Einträge sind aber die &lt;code&gt;getty&lt;/code&gt;-Prozesse für die Systemkonsole (c1-c6), die das Login überhaupt ermöglichen. Wenn ein Fehler in &lt;code&gt;rc.M&lt;/code&gt; also dazu führt, daß sich das Script niemals beendet, kommen niemals Loginprompts und man kann sich nicht anmelden, um den Fehler zu korrigieren.&lt;/p&gt;
&lt;p&gt;Der Fehler tritt zum Beispiel gerne dann auf, wenn man in &lt;code&gt;rc.local&lt;/code&gt; einen Dämon startet (es ist ein Characteristikum von Dämonen, daß sie sich nach Möglichkeit nicht beenden), der sich nicht automatisch selbst in den Hintergrund schiebt. Zum Beispiel schiebt sich der &lt;code&gt;nnmaster&lt;/code&gt;-Aufruf&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;	/usr/lib/nn/nnmaster -l -r -C
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;automatisch in den Hintergrund, während&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;	/usr/lib/nn/nnmaster -f -l -r -C
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;keinen Hintergrundprozeß erzeugt, sondern ausdrücklich im Vordergrund bleibt. In der &lt;code&gt;rc.local&lt;/code&gt; würde nur der erste Aufruf korrekt funktionieren, der zweite würde das System blockieren.&lt;/p&gt;
&lt;p&gt;In der &lt;code&gt;/etc/inittab&lt;/code&gt; im Abschnitt &amp;ldquo;Slackware inittab&amp;rdquo; ist &lt;code&gt;nnmaster&lt;/code&gt; jedoch in der zweiten Variante eingetragen. Wieso ist das hier notwendig? Nun, in der inittab ist &lt;code&gt;nnmaster&lt;/code&gt; als respawn-Eintrag eingetragen: init bewacht den &lt;code&gt;nnmaster&lt;/code&gt; hier und startet ihn neu, falls notwendig. Wäre &lt;code&gt;nnmaster&lt;/code&gt; hier ohne -f eingetragen, würde der Dämon sich in den Hintergrund schieben und der Vordergrundprozeß würde sich gleich wieder beenden. init bemerkt, daß sich der von ihm gestartete Prozeß beendet hat und würde sogleich einen zweiten &lt;code&gt;nnmaster&lt;/code&gt; starten, wie der respawn-Eintrag es befiehlt. Solche Einträge erzeugen dann die Meldung &amp;ldquo;respawning to rapidly&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;rc-dateien-im-stile-von-system-v&#34;&gt;
    &lt;a href=&#34;#rc-dateien-im-stile-von-system-v&#34;&gt;
	rc-Dateien im Stile von System V
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das Konzept der &lt;code&gt;rc.local&lt;/code&gt;-Datei ist zwar schön einfach zu verstehen, aber für die automatische Wartung des Systems ist es nicht besonders elegant. In einer kommerziellen Umgebung würde man davon ausgehen, daß die Benutzer des Systems reine Anwender sind und kaum genug Ausbildung haben, um mit der Anwendung selbst klarzukommen. Auch von der Systemverwaltung kann man nicht in jedem Fall verlangen, daß sie zu selbstständigen Änderungen an rc-Dateien in der Lage ist. Das gilt insbesondere dann, wenn diese Änderung den fehlerfreien Wiederanlauf des Systems gefährden kann. Für Anwendungen, die durch schlecht ausgebildete Personen aus vorgefertigen Packages installiert werden sollen, wäre es wünschenswert, wenn ein Mechanismus besteht, durch den sie sich automatisch und weitgehend fehlerfrei in die Programmfolge beim Systemstart einhängen können.&lt;/p&gt;
&lt;p&gt;Ein ähnliches Problem besteht schon seit Jahren im Bereich MS-DOS, wo Installationsprozeduren von Anwendungspaketen Änderungen an der AUTOEXEC.BAT und der CONFIG.SYS vornehmen müssen. Im Bereich MS-DOS löst man dies, indem jede Anwendung einen großen Installator mit sich herumschleppt, der in der Lage ist, solche Konfigurationsdateien zu parsen und zu korrekt verändern (oder auch nicht). Das so etwas schon bei MS-DOS nicht richtig funktioniert, bemerkt der Autor jedesmal an seiner eigenen Konfiguration, die leider nicht linear ist, sondern mehrere Verzweigungen und Aufrufe von Unterbatches enthält. Praktisch alle DOS-Installationsprogramme führen ihre Änderungen an der falschen Stelle oder nur für eine Konfiguration (meistens nicht die aktive) ein. UNIX Shellscripte sind allerdings noch mächtiger als DOS Batchdateien und für ein Installationsprogramm entsprechend schwieriger zu handhaben. Die Wahrscheinlichkeit, daß ein rc-Modifikator eine etwas komplexere &lt;code&gt;rc.local&lt;/code&gt; durch seine Änderungen zerstört sind viel größer als für ein DOS Installationsprogramm.&lt;/p&gt;
&lt;p&gt;In System V UNIX verwendet man deswegen ein etwas anderes Konzept, daß ohne aufwendige Parser auskommt und trotzdem viel sicherer funktioniert. Statt alle Anweisungen in eine einzige Datei zu quetschen, hat man die rc-Datei dort in viele kleine Module zerlegt, von denen sich jedes um einen Aspekt des Systemstartes kümmert. Man hat für jeden Run-Level ein Unterverzeichnis &lt;code&gt;/etc/rcn.d&lt;/code&gt; (wobei n die Nummer des Run-Levels ist). Dort befinden sich die Startdateien für diesen Run-Level. Das Script &lt;code&gt;/etc/rcn&lt;/code&gt; (wieder ist n der Run-Level) ist für jeden Run-Level gleich und führt nacheinander alle Dateien im zum Run-Level gehörenden Unterverzeichnis aus.&lt;/p&gt;
&lt;p&gt;Per Konvention haben alle Dateien im Unterverzeichnis entweder den Namen KxyNAME oder SxyNAME. Eine K-Datei dient dazu, irgendeinen Dienst beim Betreten des Run-Levels zu stoppen, eine S-Datei dient dazu, einen Dienst zu starten. Die Ziffern xy laufen von 00 bis 99 durch und dienen dazu, eine alphabethische Reihenfolge der Script zu definieren: Das Script führt die einzelnen Module in der Reihenfolge K00 bis K99 und dann S00 bis S99 aus. Es ruft K-Scripte mit dem Parameter &lt;code&gt;stop&lt;/code&gt; auf, S-Scripte werden mit dem Parameter &lt;code&gt;start&lt;/code&gt; aufgerufen. Der Bestandteil NAME dient zur Identifikation des Scriptes und bezeichnet das Subsystem, das durch das Script gestartet oder gestoppt wird.&lt;/p&gt;
&lt;p&gt;Ein Programmpaket kann bei dieser Konstruktion ganz leicht eingefügt werden. Nehmen wir an, ein hypothetischer FAX-Server &lt;code&gt;kfax&lt;/code&gt; braucht beim Systemstart einige Anweisungen, um einen Dämon-Prozeß zu starten und ein wenig aufzuräumen. Das Installationspaket könnte eine Datei mit den benötigten Anweisungen erzeugen und sie als &lt;code&gt;/etc/init.d/kfax&lt;/code&gt; in einem Sammelverzeichnis für alle Startscripte installieren. Das Modul soll beim Betreten von Run-Level 5 getstartet werden. Also erzeugt die Installationsprozedur ein Symlink von &lt;code&gt;/etc/rc5.d/S99kfax&lt;/code&gt; nach &lt;code&gt;/etc/init.d/kfax&lt;/code&gt;. Die Installation braucht also nur eine Datei zu erzeugen und ein Link zu legen, um ihr Modul in die rc-Scripte zu integrieren. Soll das Script in mehr als einem Run-Level aktiviert werden, wird es auch von den anderen &lt;code&gt;/etc/rcn.d&lt;/code&gt;-Verzeichnissen nach &lt;code&gt;/etc/init.d&lt;/code&gt; gelinkt. Lesen und Verstehen von &lt;code&gt;rc.local&lt;/code&gt; oder anderen Scripten ist nicht notwendig. Die Deinstallationsanweisung ist genauso simpel: &amp;ldquo;Löschen Sie die Datei &lt;code&gt;/etc/rc5.d/S99kfax&lt;/code&gt; und starten Sie das System neu.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Beim Wechsel in den Run-Level 5 wird unser Beispielsystem das Script &lt;code&gt;/etc/rc5&lt;/code&gt; durch einen once-Eintrag aktivieren. Das Script geht alle Dateien in &lt;code&gt;/etc/rc5.d&lt;/code&gt; durch und führt sie der Reihe nach aus. Es wird zunächst alle &lt;code&gt;/etc/rc.d/K*&lt;/code&gt;-Dateien mit dem Parameter &lt;code&gt;stop&lt;/code&gt; aufrufen, danach wird es alle &lt;code&gt;/etc/rc.d/S*&lt;/code&gt;-Dateien mit dem Parameter &lt;code&gt;start&lt;/code&gt; aufrufen. Ganz am Schluss wird &lt;code&gt;S99kfax start&lt;/code&gt; ausgeführt.&lt;/p&gt;
&lt;p&gt;Das folgende Listing zeigt den inittab-Eintrag und ein Listing von &lt;code&gt;/etc/rc5&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;system-v-startscript-etcrc5&#34;&gt;
    &lt;a href=&#34;#system-v-startscript-etcrc5&#34;&gt;
	System V Startscript &lt;code&gt;/etc/rc5&lt;/code&gt;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Der Eintrag in der &lt;code&gt;/etc/inittab&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;r5:5:once:/etc/rc5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Das zugehörige Script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# /bin/sh --&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#	Das Script wird ausgefuehrt, wenn das System in den &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#	Run-Level 5 wechselt.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#	Fuer die anderen Run-Levels sollten &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#   analoge Eintraege und Scripte existieren.&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/bin:/sbin:/usr/sbin:/usr/bin
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -d /etc/rc5.d &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
	&lt;span class=&#34;c1&#34;&gt;# Ausfuehren der Stopscripte&lt;/span&gt;
	&lt;span class=&#34;nv&#34;&gt;MODE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;stop
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; f in /etc/rc5.d/K*
	&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -x &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
			/sbin/sh &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; stop
		&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
			. &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
	
	&lt;span class=&#34;c1&#34;&gt;# Ausfuehren der Startscripte&lt;/span&gt;
	&lt;span class=&#34;nv&#34;&gt;MODE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;start
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; f in /etc/rc3.d/S*
	&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -x &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
			/sbin/sh &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; start
		&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
			. &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;slackware-inittab&#34;&gt;
    &lt;a href=&#34;#slackware-inittab&#34;&gt;
	Slackware inittab
    &lt;/a&gt;
&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# inittab       This file describes how the INIT process should set up
#               the system in a certain Run-Level.
#
# Version:      @(#)inittab             2.04    17/05/93        MvS
#
# Author:       Miquel van Smoorenburg, &amp;lt;miquels@drinkel.nl.mugnet.org&amp;gt;
#
# Default runlevel.
id:5:initdefault:

# System initialization (runs when system boots).
si:S:sysinit:/etc/rc.d/rc.S

# Script to run when going single user.
su:S:wait:/etc/rc.d/rc.K

# Script to run when going multi user.
rc:123456:wait:/etc/rc.d/rc.M

# What to do at the &amp;quot;Three Finger Salute&amp;quot;.
ca::ctrlaltdel:/sbin/shutdown -t3 -rf now

# What to do when power fails (shutdown to single user).
pf::powerfail:/sbin/shutdown -f +5 &amp;quot;THE POWER IS FAILING&amp;quot;

# If power is back before shutdown, cancel the running shutdown.
pg:0123456:powerokwait:/sbin/shutdown -c &amp;quot;THE POWER IS BACK&amp;quot;

# If power comes back in single user mode, return to multi user mode.
ps:S:powerokwait:/sbin/init 5

# The getties in multi user mode on consoles an serial lines.
#
# NOTE NOTE NOTE adjust this to your getty or you will not be
#                able to login !!
#
# Note: for &#39;agetty&#39; you use linespeed, line.
# for &#39;getty_ps&#39; you use line, linespeed and also use &#39;gettydefs&#39;
#c1:12345:respawn:/sbin/agetty 38400 tty1
c2:12345:respawn:/sbin/agetty 38400 tty2
c3:12345:respawn:/sbin/agetty 38400 tty3
c4:45:respawn:/sbin/agetty 38400 tty4
c5:45:respawn:/sbin/agetty 38400 tty5
c6:456:respawn:/sbin/agetty 38400 tty6

# nn
nn:23456:respawn:/usr/lib/nn/nnmaster -f -l -r -C

# Serial lines
#s1:45:respawn:/sbin/agetty 19200 ttyS0
#s2:45:respawn:/sbin/agetty 19200 ttyS1

# Dialup lines
#d1:45:respawn:/sbin/agetty -mt60 38400,19200,9600,2400,1200 ttyS0
#d2:45:respawn:/sbin/agetty -mt60 38400,19200,9600,2400,1200 ttyS1

# Runlevel 6 used to be for an X-window only system, until we discovered
# that it throws init into a loop that keeps your load avg at least 1 all 
# the time. Thus, there is now one getty opened on tty6. Hopefully no one
# will notice. ;^)
# It might not be bad to have one text console anyway, in case something 
# happens to X.
x1:6:wait:/etc/rc.d/rc.6

# End of /etc/inittab
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;das-action-feld-in-der-etcinittab&#34;&gt;
    &lt;a href=&#34;#das-action-feld-in-der-etcinittab&#34;&gt;
	Das Action Feld in der &lt;code&gt;/etc/inittab&lt;/code&gt;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das Feld &lt;code&gt;action&lt;/code&gt; in der &lt;code&gt;inittab&lt;/code&gt; bestimmt, wie &lt;code&gt;init&lt;/code&gt; mit dem im Feld &lt;strong&gt;process&lt;/strong&gt; genannten Prozeß verfährt. &lt;code&gt;sysvinit&lt;/code&gt; kennt dieselben Schlüsselworte wie ein richtiger &lt;code&gt;init&lt;/code&gt; eines originalen System V UNIX plus einige eigene Schlüsselworte, die spezifisch für Linux sind.&lt;/p&gt;
&lt;h3 id=&#34;start-und-restart-von-prozessen&#34;&gt;
    &lt;a href=&#34;#start-und-restart-von-prozessen&#34;&gt;
	Start und Restart von Prozessen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;off:&lt;/dt&gt;
&lt;dd&gt;Zeilen, die als &lt;code&gt;off&lt;/code&gt; gekennzeichnet sind, sind inaktiv. Dies stellt eine gute Methode dar, um Einträge in der &lt;code&gt;inittab&lt;/code&gt; vorübergehend außer Betrieb zu nehmen. Natürlich könnte man sie auch in Kommentarzeilen verwandeln, indem man an den Anfang der Zeile ein &amp;ldquo;#&amp;rdquo; setzt.&lt;/dd&gt;
&lt;dt&gt;respawn:&lt;/dt&gt;
&lt;dd&gt;Dies ist der häufigste Eintrag, wie er für &lt;code&gt;getty&lt;/code&gt;s und für Dämon-Prozesse verwendet wird, die automatisch neu gestartet werden sollen. Wenn sich ein so gekennzeichneter Eintrag beendet, versucht &lt;code&gt;init&lt;/code&gt; den Prozeß erneut zu starten. Kommt es dabei zu einer Endlosschleife (der Prozeß beendet sich aufgrund eines Fehlers sofort wieder, &lt;code&gt;init&lt;/code&gt; startet ihn sofort wieder neu&amp;hellip;), erkennt &lt;code&gt;init&lt;/code&gt; dies und legt den Eintrag für einige Minuten mit der Meldung &amp;ldquo;process respawning too rapidly&amp;rdquo; still.&lt;/dd&gt;
&lt;dt&gt;initdefault:&lt;/dt&gt;
&lt;dd&gt;Der &lt;code&gt;initdefault&lt;/code&gt;-Eintrag hat in gewisser Weise eine Sonderrolle: Er spezifiziert keinen Prozeß, sondern sein &lt;code&gt;runlevel&lt;/code&gt;-Feld gibt an, in welchen Run-Level sich das System beim Systemstart begeben soll. Fehlt dieser Eintrag, wird der gewünschte Run-Level beim Booten an der Console erfragt.&lt;/dd&gt;
&lt;dt&gt;wait:&lt;/dt&gt;
&lt;dd&gt;Mit wait gekennzeichnete Prozesse werden von &lt;code&gt;init&lt;/code&gt; einmal beim Betreten des Run-Levels gestartet. &lt;code&gt;init&lt;/code&gt; wartet dann darauf, daß der entsprechende Prozeß sich wieder beendet, bevor der nächste Eintrag abgearbeitet wird. Da &lt;code&gt;init&lt;/code&gt; die Einträge einer &lt;code&gt;inittab&lt;/code&gt; von oben nach unten abarbeitet, kann man so eine kontrollierte Folge von Scripten beim Erreichen eines Run-Levels starten.&lt;/dd&gt;
&lt;dt&gt;once:&lt;/dt&gt;
&lt;dd&gt;Mit &lt;code&gt;once&lt;/code&gt; gekennzeichnete Prozesse werden von &lt;code&gt;init&lt;/code&gt; einmal beim Betreten des Run-Levels gestartet. Im Gegensatz zur Aktion &lt;code&gt;wait&lt;/code&gt; wartet &lt;code&gt;init&lt;/code&gt; hier aber nicht auf das Ende des Prozesses, bevor der nächste Eintrag der &lt;code&gt;inittab&lt;/code&gt; abgearbeitet wird. &lt;code&gt;once&lt;/code&gt; wird normalerweise verwendet, um einen Dämon zu starten ohne in wie bei &lt;code&gt;respawn&lt;/code&gt; bewachen zu lassen. Sollte der Dämon sich beenden, wird eben kein neuer Prozeß gestartet. In System V UNIX wird &lt;code&gt;once&lt;/code&gt; verwendet, um die &lt;code&gt;/etc/rcn&lt;/code&gt;-Scripte zu starten.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;boot&#34;&gt;
    &lt;a href=&#34;#boot&#34;&gt;
	Boot
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Weil &lt;code&gt;init&lt;/code&gt; als allererster Prozeß im System gestartet wird, muß es Einträge gegeben, die spezifizieren, wie das System ans Laufen gebracht wird. Bei diesen Einträgen wird das Feld &lt;strong&gt;runlevels&lt;/strong&gt; ignoriert. Sie werden beim Start des Systems schlicht von oben nach unten abgearbeitet.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;sysinit:&lt;/dt&gt;
&lt;dd&gt;Die ersten Prozesse der Bootphase werden durch die &lt;code&gt;sysinit&lt;/code&gt;-Einträge bestimmt. Es handelt sich meistens um Scripte, deren Aufgabe es ist, die Platten zu checken und sie read-write anzumelden.&lt;/dd&gt;
&lt;dt&gt;boot:&lt;/dt&gt;
&lt;dd&gt;Nach den &lt;code&gt;sysinit&lt;/code&gt;-Scripten folgen dann die anderen Scripte der Bootphase.&lt;/dd&gt;
&lt;dt&gt;bootwait:&lt;/dt&gt;
&lt;dd&gt;Bei &lt;code&gt;bootwait&lt;/code&gt;-Einträgen wartet das System mit dem Starten des Folgeeintrags solange, bis der aktuelle Eintrag abgearbeitet ist. Bei &lt;code&gt;boot&lt;/code&gt;-Einträgen wird dagegen nicht gewartet.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;speziell-für-linux&#34;&gt;
    &lt;a href=&#34;#speziell-f%c3%bcr-linux&#34;&gt;
	Speziell für Linux
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sysvinit&lt;/code&gt; von Linux hat außerdem noch einige Nichtstandard-Aktionen. Sie dienen hauptsächlich der Unterstützung von USVs und zumAbfangen der Tastenkombination Control-Alt-Delete.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;ctrlaltdel:&lt;/dt&gt;
&lt;dd&gt;Bei diesem Eintrag wird das Feld &lt;strong&gt;runlevels&lt;/strong&gt; ebenfalls ignoriert. Er wird aktiviert, wenn jemand an der Console die Tastenkombination Control-Alt-Delete gedrückt hat. Normalerweise wird man hier entweder das System herunterfahren oder in den single user mode wechseln.&lt;/dd&gt;
&lt;dt&gt;powerwait:&lt;/dt&gt;
&lt;dt&gt;powerfail:&lt;/dt&gt;
&lt;dd&gt;Einträge mit der Aktion &lt;code&gt;powerwait&lt;/code&gt; oder &lt;code&gt;powerfail&lt;/code&gt; werden aktiviert, wenn das System ein SIGPWR Signal erhält. Dies ist typischerweise ein Signal, das vom Kernel generiert wird, wenn die Stromversorgung des Systems zusammenbricht und die USV übernimmt. Bei &lt;code&gt;powerwait&lt;/code&gt;-Einträgen wartet &lt;code&gt;init&lt;/code&gt; wieder auf das Ende eines Eintrages, bevor der nächste abgearbeitet wird, während dies bei &lt;code&gt;powerfail&lt;/code&gt;-Einträgen nicht geschieht.&lt;/dd&gt;
&lt;dt&gt;powerokwait:&lt;/dt&gt;
&lt;dd&gt;Dieser Eintrag wird aktiviert, wenn ein SIGPWR auftritt und die Datei &lt;code&gt;/etc/powerstatus&lt;/code&gt; das Wort OK enthält. Sollte die Stromversorgung wieder funktionieren, bevor das System sich auf Grund des ersten SIGPWR abgeschaltet hat, kann durch einen Eintrag hier die Abschaltung verhindert werden.&lt;/dd&gt;
&lt;dt&gt;ondemand:&lt;/dt&gt;
&lt;dd&gt;Ein Eintrag mit der Bezeichnung ondemand funktioniert ähnlich wie ein Eintrag &lt;code&gt;once&lt;/code&gt;. Während ein &lt;code&gt;once&lt;/code&gt;-Eintrag jedoch nur beim Betreten eines Run-Levels aktiviert wird, wird ein &lt;code&gt;ondemand&lt;/code&gt;-Eintrag auch dann aktiviert, wenn das System in den Run-Level wechseln soll, in dem es sich sowieso schon befindet.&lt;/dd&gt;
&lt;/dl&gt;
</description>
    </item>
    
    <item>
      <title>Cnews in Betrieb nehmen</title>
      <link>https://blog.koehntopp.info/1995/11/01/cnews-in-betrieb-nehmen.html</link>
      <pubDate>Wed, 01 Nov 1995 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1995/11/01/cnews-in-betrieb-nehmen.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;Linux Magazin, Heft 11/1995&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;cnews-in-betrieb-nehmen&#34;&gt;
    &lt;a href=&#34;#cnews-in-betrieb-nehmen&#34;&gt;
	Cnews in Betrieb nehmen
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Ein Cnews in Betrieb zu nehmen ist schon nicht ganz einfach, wenn man die
originalen Quelltexte hat und den Installationsanweisungen des Autors, Henry
Spencer von der Universität Toronto, folgt. Aber in der Slackware, die
mit der Infomagic Developers Ressource vom März 1995 geliefert wird,
sind noch einige zusätzliche Haken und Ösen eingebaut. Dieser Text
beschreibt, wie ich mein Cnews von dieser CD zum Laufen bekommen
habe.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Eigentlich bin ich ja kein Dosen-Benutzer, aber durch eine Verkettung
unglücklicher Umstände und fehlende Treiber war ich gezwungen,
etwas über ein Jahr mit MS-DOS und Crosspoint zuzubringen. Irgendwann
Mitte des Jahres hatte ich dann die Zusammenbrüche der Messagebase und
das Warten beim Einsortieren der Artikel satt. Ich beschloß, mir
wieder ein Linux und ein Cnews zu installieren, damit ich meine News endlich
wieder mit Gottes eigenem Newsreader lesen kann.
Eine Infomagic Developers Ressource ist günstig zu bekommen und die
Slackware darauf sollte eine gut getestete Standarddistribution sein.&lt;/p&gt;
&lt;p&gt;Soweit die Theorie. In der Praxis bin ich bei der Installation des
Cnews-Paketes von dieser CD in eine ganze Reihe kleine Fallen gelaufen, die
offenbar nicht nur mich Nerven gekostet haben. Ich habe keine Ahnung, warum
das Cnews auf dieser Distribution so bissig ist (Nehmt Ihr alle INN?), aber
man kann es in den Griff bekommen.&lt;/p&gt;
&lt;p&gt;Gleich der erste Fehler, der mir bei der Slackware in die Arme lief, waren
die Zugriffsrechte auf den Temporärverzeichnissen: Mein
&lt;code&gt;/var/tmp&lt;/code&gt; hatte die Zugriffsrechte &lt;code&gt;755&lt;/code&gt; und gehörte
&lt;code&gt;root.root&lt;/code&gt;. Mit diesen Rechten muß nicht nur Cnews
Fehlermeldungen ausspucken, sondern jedes andere Programm, das ebenfalls mit
diesem Verzeichnis arbeitet, funktioniert nur für den Systemverwalter.&lt;/p&gt;
&lt;p&gt;Hier sind die korrekten Zugriffsrechte für diese Verzeichnisse:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@white:~# ls -ld /tmp /var/tmp /usr/tmp
drwxrwxrwt   3 root     root         1024 Jul 20 16:43 /tmp
lrwxrwxrwx   1 root     root            8 Jul  8 14:55 /usr/tmp -&amp;gt; /var/tmp
drwxrwxrwt   2 root     root         1024 Jul 20 08:37 /var/tmp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Cnews setzt voraus, daß ein User &lt;code&gt;news&lt;/code&gt; existiert. Man sollte
später die Wartung des Newssystems, also das Anlegen und Löschen
von Gruppen und Artikeln, keinesfalls als Systemverwalter machen. &lt;em&gt;Alle
Wartung an Cnews muß immer als news erfolgen!&lt;/em&gt; Ich habe dem
&lt;code&gt;news&lt;/code&gt;-User der Slackware daher ein Homeverzeichnis und ein
Paßwort gegeben:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@white:~# grep news /etc/passwd
news:deletedforsafety:9:13:white.schulung.netuse.de news:/var/lib/news:

root@white:~# ls -ld /usr/lib/news
lrwxrwxrwx   1 root     root           13 Jul  9 22:27 /usr/lib/news -&amp;gt;; /var/lib/news
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Die Paßwortdatei sollte man vor der Änderung sichern, danach kann
man die betreffende Zeile dann leicht mit einem Editor anpassen und die
Änderungen mit einem &lt;code&gt;diff&lt;/code&gt; zwischen der gesicherten und der
geänderten Version prüfen. Das Homeverzeichnis von &lt;code&gt;news&lt;/code&gt;
ist bei mir das Verzeichnis mit den Konfigurationsdateien des Newspaketes,
&lt;code&gt;/var/lib/news&lt;/code&gt;. Als ich mit UNIX angefangen habe, gab es noch keine
&lt;code&gt;/var&lt;/code&gt;-Verzeichnisse und so bin ich &lt;code&gt;/usr/lib/news&lt;/code&gt; als
Verzeichnis gewohnt. Also habe ich mir ein Symlink von
&lt;code&gt;/usr/lib/news&lt;/code&gt; nach &lt;code&gt;/var/lib/news&lt;/code&gt; installiert - die Macht
der Gewohnheit.&lt;/p&gt;
&lt;p&gt;Außer diesem Konfigurationsverzeichnis hat Cnews auch noch
verschiedene Hilfsprogramme. Diese verstecken sich in den
Unterverzeichnissen von &lt;code&gt;/usr/lib/news/bin&lt;/code&gt; (in &lt;code&gt;/usr&lt;/code&gt;, weil
dies statische Dateien sind, im Gegensatz zu den veränderlichen
Konfigurationsdateien). Diese Dateien gehören alle &lt;code&gt;root&lt;/code&gt;, damit
sie per NFS und mit &lt;code&gt;root_squash&lt;/code&gt; exportiert werden können.
Leider macht die einzig notwendige Ausnahme, &lt;code&gt;relaynews&lt;/code&gt;, diesen
Sicherheitsgewinn bei einem NFS-Export wieder zunichte&amp;hellip;&lt;/p&gt;
&lt;p&gt;An einigen der Programme unterhalb von &lt;code&gt;/usr/lib/newsbin&lt;/code&gt; habe ich
mich vergriffen, damit das Newssystem so funktioniert, wie ich mir das
vorgestellt habe. Im Einzelnen waren die Änderungen:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:/usr/lib/newsbin$ find . -type f -mtime -100 -print
./ctl/newgroup
./maint/newsdaily
./maint/junkgroups
./inject/pnews
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Die Änderungen waren folgendermaßen:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;ctl/newgroup&lt;/code&gt;:&lt;/dt&gt;
&lt;dd&gt;Automatische Erzeugung neuer Newsgroups komplett abgeschaltet. Das ist am Anfang nicht weiter wichtig.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;maint/newsdaily&lt;/code&gt;:&lt;/dt&gt;
&lt;dd&gt;Dieses Programm soll einmal am Tag ablaufen, um Cnews Statusreports zu erzeugen. Wegen eines Problems mit der &lt;code&gt;bash&lt;/code&gt; hat das Programm aber leider den Report vor dem Versenden gelöscht. Am Anfang des Scriptes ist eine Zeile mit &amp;ldquo;&lt;code&gt;trap&lt;/code&gt;&amp;rdquo;. Ich habe sie brutal auskommentiert.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;maint/junkgroups&lt;/code&gt;:&lt;/dt&gt;
&lt;dd&gt;Das ist ein kleines Script, das ich mir geschrieben habe, um das Logbuch von Cnews nach nichtexistierenden Gruppen zu durchsuchen. Es erzeugt eine Liste der fehlenden Gruppen, damit ich sie dann anlegen kann.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;inject/pnews&lt;/code&gt;:&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;pnews&lt;/code&gt; ist das Programm, mit dem neue Artikel in das Newssystem eingespielt werden können. Es erzeugt keine &amp;ldquo;&lt;code&gt;Lines:&lt;/code&gt;&amp;quot;-Headerzeile für neue Artikel. Der &lt;code&gt;Lines&lt;/code&gt;-Header ist zwar optional und Cnews entscheidet sich zu Recht dazu, nur minimale Header zu erzeugen, aber &lt;code&gt;nn&lt;/code&gt; funktioniert besser, wenn der &lt;code&gt;Lines&lt;/code&gt;-Header vorhanden ist.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Es genügt, &lt;code&gt;pnews&lt;/code&gt; in den Editor zu laden und nach dem Text &amp;ldquo;&lt;code&gt;Lines&lt;/code&gt;&amp;rdquo; zu suchen. Dort befinden sich Anweisungen, wie man die Erzeugung von&lt;code&gt; Lines&lt;/code&gt;-Zeilen aktivieren kann.&lt;/p&gt;
&lt;p&gt;Keine dieser Änderungen war kritisch. Es sind mehr Schönheitskorrekturen. Wichtiger sind stattdessen die Steuerdateien von Cnews. Sie befinden sich wie gesagt in &lt;code&gt;/var/lib/news&lt;/code&gt;. Im Unterverzeichnis &lt;code&gt;bin&lt;/code&gt; steht dort eine Datei &lt;code&gt;config&lt;/code&gt;. Sie enthält einen Haufen Informationen, die die Shellscripte von Cnews benötigen. Diese Informationen müssen genau mit den Steuerinformationen des restlichen Newssystems übereinstimmen oder Cnews stellt die Arbeit kommentarlos ein. Daher darf diese Datei niemals verändert werden. Leider hatte sie jemand verändert, jedenfalls war sie schon auf der CD falsch. Hier ist die korrekte &lt;code&gt;/usr/lib/news/bin/config&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# configuration -- all the shell files pick this up using &amp;quot;.&amp;quot;
# this makes it possible to add new variables here and have them
#  available everywhere immediately
#
# This is not, repeat NOT, a master control file for all of C News.
# This is the shell equivalent of libcnews/config.c, a &amp;quot;subroutine
# library&amp;quot; that gives shell files access to the default settings and
# lets environment variables override the defaults.  Changing the
# defaults here will *NOT* change them throughout C News.
#
# =()&amp;lt;NEWSCTL=${NEWSCTL-@&amp;lt;NEWSCTL&amp;gt;@}&amp;gt;()=
NEWSCTL=${NEWSCTL-/var/lib/news}
# =()&amp;lt;NEWSBIN=${NEWSBIN-@&amp;lt;NEWSBIN&amp;gt;@}&amp;gt;()=
NEWSBIN=${NEWSBIN-/usr/lib/newsbin}
# =()&amp;lt;NEWSARTS=${NEWSARTS-@&amp;lt;NEWSARTS&amp;gt;@}&amp;gt;()=
NEWSARTS=${NEWSARTS-/var/spool/news}
# =()&amp;lt;NEWSPATH=${NEWSPATH-@&amp;lt;NEWSPATH&amp;gt;@}&amp;gt;()=
NEWSPATH=${NEWSPATH-/bin:/usr/bin:/usr/sbin:/sbin}
# =()&amp;lt;NEWSUMASK=${NEWSUMASK-@&amp;lt;NEWSUMASK&amp;gt;@}&amp;gt;()=
NEWSUMASK=${NEWSUMASK-002}
# =()&amp;lt;NEWSMASTER=${NEWSMASTER-@&amp;lt;NEWSMASTER&amp;gt;@}&amp;gt;()=
NEWSMASTER=${NEWSMASTER-news}
# =()&amp;lt;NEWSCONFIG=${NEWSCONFIG-@&amp;lt;NEWSCONFIG&amp;gt;@}&amp;gt;()=
NEWSCONFIG=${NEWSCONFIG-/var/lib/news/bin/config}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Jetzt kann man daran gehen, den Rest des Newssystems zu konfigurieren. Als erstes muß die Identität des Systems korrekt eingestellt werden: In den Dateien &lt;code&gt;whoami&lt;/code&gt; und &lt;code&gt;mailname&lt;/code&gt; muß der komplette Name des eigenen Systems inklusive Domain eingetragen werden. Da mein System den Namen &lt;code&gt;white.schulung.netuse.de&lt;/code&gt; trägt, habe ich also diese Namen eingesetzt:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ cat whoami
white.schulung.netuse.de
news@white:~$ cat mailname
white.schulung.netuse.de
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Leider steht hier im &lt;code&gt;NEWS-HOWTO&lt;/code&gt; und in der Anleitung von Cnews, daß man in &lt;code&gt;whoami&lt;/code&gt; den kurzen UUCP-Namen des Systems ohne Domain eintragen sollte. Das darf man nur dann, wenn dieser Name auch in der weltweiten USENET/UUCP Map für einen selbst reserviert ist und garantiert weltweit eindeutig ist. Das ist in der Regel nicht der Fall und daher sollte man &lt;em&gt;unbedingt&lt;/em&gt; den Domainnamen einsetzen.&lt;/p&gt;
&lt;p&gt;Der nächste Handgriff gilt der Datei &lt;code&gt;organization&lt;/code&gt;, die den Inhalt der gleichnamigen Headerzeile darstellt. In dieser einzeiligen Datei soll die eigene Organisation möglichst kurz und prägnant beschrieben werden.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ cat organization
My personal Linux in Kiel, Germany.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Die dritte, relativ statische Konfigurationsdatei betrifft moderierte Newsgroups: In eine moderierte Gruppe kann man nicht direkt schreiben. Stattdessen wird der eigene Artikel an einen Moderator gesendet, der wie ein Redakteur bei einer Zeitung den Artikel begutachtet. Der Moderator gibt den Artikel dann entweder zur Veröffentlichung in seiner Newsgroup frei (er erscheint mit dem Namen des Originalautors) oder bittet den originalen Autor um Korrekturen. Die Datei &lt;code&gt;mailpaths&lt;/code&gt; enthält eine Liste von moderierten Newsgroups und Moderatoren. Für den Anfang genügt es, alle Gruppen von einem zentralen Knoten abhandeln zu lassen. Dieser wird die Artikel dann nach Bedarf weiterleiten.&lt;/p&gt;
&lt;p&gt;Das genaue Format der Datei mailpaths ist in einem Artikel beschrieben, der von David C. Lawrence regelmäßig in den internationalen Gruppen &lt;code&gt;news.lists&lt;/code&gt;,&lt;code&gt;news.admin.misc&lt;/code&gt; und &lt;code&gt;news.answers &lt;/code&gt;unter dem Titel &amp;ldquo;How to Construct the Mailpaths File&amp;rdquo; veröffentlicht wird.  Aber für den Anfang genügt es, dort den Text&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ cat mailpaths
backbone     uunet.uu.net!%s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;einzutragen. Nachdem diese vier kleinen Konfigurationsdateien einmal aufgesetzt worden sind, kann man sie erst einmal vergessen. Die folgenden Steuerdateien sind wichtiger. Sie benötigen im Laufe der Existenz eines Newssystems wahrscheinlich gelegentlich Anpassungen, wenn weitere Gruppen eingerichtet werden oder wenn die Festplatte volläuft. Die erste dieser zentralen Konfigurationsdateien ist die Datei &lt;code&gt;sys&lt;/code&gt;. Sie legt fest, welche Newsgroups wir überhaupt akzeptieren und an wen wir Newsgroups weiterleiten.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ cat sys
# Diese Zeile zeigt an, welche Newsgroups wir überhaupt akzeptieren:
# Wir nehmen jeden Müll an. Warum Streß machen...
ME:all,all.all

# Artikel, die wir auf unserem System neu erzeugen, werden an den
# Rechner weitergeleitet, der uns mit News versorgt. Im Beispiel heißt
# dieser Rechner nuki. nuki verewigt sich im Pfad als nuki.netuse.de.
#
# Also senden wir nur diejenigen Artikel an nuki, die noch nicht
# nuki.netuse.de in der Path-Zeile stehen haben:
#	nuki/nuki.netuse.de:
#
# Wir möchten, daß alle Artikel in allen Gruppen an nuki weitergeleitet
# werden mit Ausnahme der lokalen Gruppen, die den Namen white.irgendwas
# haben:
#    all,all.all,!white.all
#
# Artikel können eine Zeile Distribution enthalten, die die Verbreitung
# räumlich einschränkt. Wir leiten alle Distributionen an nuki weiter, aber
# nicht local und auch nicht white.
#    all,!white,!local
#
# Tja und dann wollen wir noch Standardbatching haben:
# 	:f:
#
# Es ergibt sich diese Zeile in der Konfigurationdatei:
#
nuki/nuki.NetUSE.de:all,all.all,!white.all/all,!white,!local:f:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Alle Zeilen mit &amp;ldquo;#&amp;rdquo; in dieser Datei sind selbstverständlich Kommentare. Sie können gerne weggelassen werden. Neu erzeugte Artikel müssen natürlich irgendwann einmal verpackt und an &lt;code&gt;nuki.netuse.de&lt;/code&gt; weitergeleitet werden. Wie das geschieht, steuert die Datei &lt;code&gt;batchparms&lt;/code&gt;. Sie muß für jedes System, an das wir senden wollen, einen Eintrag enthalten:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ cat batchparms
# big batches for fast modem (ISDN!), simple compression
# site          size    queue   builder muncher sender
# ----          ----    -----   ------- ------- ------
nuki            500000  20      batcher compcun viauux
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So, jetzt können wir daran gehen, einen Spoolbereich für News einzurichten und danach können dann Gruppen erzeugt werden. Standardmäßig sieht es bei der Slackware so aus:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ cd /usr/spool/news
news@white:/usr/spool/news$ ls
news@white:/usr/spool/news$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Nichts da. Für jede Gruppe in der Datei &lt;code&gt;~news/active&lt;/code&gt; muß hier ein passendes Unterverzeichnis angelegt werden. Außerdem brauchen wir noch einige Spezialverzeichnisse.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:/usr/spool/news$ cat ~news/active
junk 000000001 00001 y
control 000000001 00001 y
news.announce.newusers 000000001 00001 y
news@white:/usr/spool/news$ mkdir -p news/announce/newusers junk control
news@white:/usr/spool/news$ mkdir in.coming in.coming/bad out.going out.going/nuki out.master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Statt nuki und nuki.netuse.de müssen natürlich die Namen des eigenen Feeds als Verzeichnisnamen eingesetzt werden. Aber zurück in das Verzeichnis &lt;code&gt;~news&lt;/code&gt;: Im Laufe des Lebens des Newssystems wird man sich öfter als User &lt;code&gt;news&lt;/code&gt; einloggen müssen. Also sollte man diesem Benutzer in seinem Home eine vernünftige &lt;code&gt;.profile&lt;/code&gt; verpassen. Hier ist eine:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ cat .profile
echo &amp;quot;.profile&amp;quot;
PATH=/bin:/usr/bin:/usr/local/bin:/usr/sbin:/sbin:/usr/lib/newsbin/maint:/usr/lib/newsbin/expire:/usr/lib/newsbin/input:/usr/lib/newsbin/batch
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Diese Pathangabe ist ziemlich lang, aber sie vereinfacht die Wartung des Newssystems. Nach dem Einlesen der &lt;code&gt;.profile&lt;/code&gt;-Datei kann man sich dann daran machen, Newsgroups anzulegen:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ . .profile
news@white:~$ echo $PATH
/bin:/usr/bin:/usr/local/bin:/usr/sbin:/sbin:/usr/lib/newsbin/maint:/usr/lib/newsbin/expire:/usr/lib/newsbin/input:/usr/lib/newsbin/batch
news@white:~$ addgroup gewuenschte.name.fuer.die.gruppe y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Mit dem Kommando &lt;code&gt;addgroup&lt;/code&gt; kann man neue Newsgroups anlegen. Auf jeden Fall sollte man sich eine lokale Gruppe zum Testen anlegen. Diese Gruppe sollte &lt;em&gt;nicht&lt;/em&gt; nach draußen exportiert werden. Im Beispiel oben ist die Gruppenhierarchie &lt;code&gt;white.all&lt;/code&gt; schon dafür vorbereitet worden. Also kann man gefahrlos eine Gruppe &lt;code&gt;white.test&lt;/code&gt; anlegen:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ addgroup white.test y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Weiterhin möchte man natürlich Newsgroups anlegen, die man von seinem Feed bestellt hat. Am einfachsten geht das, indem man eine Datei anlegt, in der diese Gruppen aufgezählt sind, jeweils ein Name pro Zeile. Im Beispiel enthält die Datei &lt;code&gt;x&lt;/code&gt; eine solche Liste. Wir zeigen nur den Kopf dieser Liste, um Platz zu sparen:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ head x
alt.fan.pratchett
alt.tv.babylon-5
cau.ifi.apply.eulisp
cau.ifi.archive
cau.ifi.fragen
cau.ifi.general
cau.ifi.inf
cau.ifi.statistic
cau.ifi.termine
cau.inf
news@white:~$ cat x | xargs -i addgroup {} y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Das Kommando &lt;code&gt;xargs&lt;/code&gt; sorgt dafür, daß sein Parameter &lt;code&gt;addgroup&lt;/code&gt; für jede Zeile der Standardeingabe einmal ausgeführt wird. Es wird also für jede Zeile der Datei &lt;code&gt;x&lt;/code&gt; ein &lt;code&gt;addgroup&lt;/code&gt;-Kommando gestartet. Nachdem dies abgeschlossen ist (es dauert eine gewisse Zeit), könnten im Prinzip schon News eingespielt werden. Wir möchten jedoch auch, daß diese Artikel nach einer gewissen Zeit wieder verschwinden. Daher muß auch noch konfiguriert werden, in welcher Gruppe die Artikel wieviele Tage verbleiben sollen. Die Steuerdatei, die dies regelt, ist die Datei &lt;code&gt;explist&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ cat explist
# Die Reihenfolge der Zeilen in dieser Datei ist wichtig!

# Die History bleibt 14 Tage erhalten. Kein Artikel bleibt länger
# als 90 Tage
/expired/                       x       14      -
/bounds/                        x       0-1-90  -

# Artikel in control bleiben 7 Tage, junk geht nach 1 Tag weg
control                         x       3       -
junk                            x       1       -
# Alle anderen Artikel verschwinden nach 7 Tagen
all                             x       7       -
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Wenn man auch damit durch ist, kann das System endlich auf Autopiloten gestellt werden. Daztu muß eine Datei &lt;code&gt;crontab.news&lt;/code&gt; im Homeverzeichnis von news erzeugt werden. Sie sollte so aussehen:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Auspacken von neu eingegangenen News
0,10,20,30,40,50 *  * * * /usr/lib/newsbin/input/newsrun

# Einpacken von lokal erstellten News
25 * * * * /usr/lib/newsbin/batch/sendbatches

# Wegschmeissen von ueberalterten Artikeln
59 0  * * * /usr/lib/newsbin/expire/doexpire
# Nur fuer NN-Benutzer: nnmaster wecken!
# 59 2  * * * /usr/bin/nnadmin =eyw

# Systemüberwachung
10 5  * * * /usr/lib/newsbin/maint/newsdaily
00 5  * * * /usr/lib/newsbin/maint/newswatch

# Nur fuer NN-Benutzer: Sichern der Active-Dateien und erstellen
# der Subject-Datenbank
#59 3  * * * /usr/lib/nn/nnspew
#29 3  * * * /usr/lib/nn/back_act
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Die auskommentierten Zeilen sind nur wichtig, wenn der Newsreader nn verwendet wird. In diesem Fall müssen sie aktiviert werden, d.h. die Kommentarzeichen müssen gelöscht werden. Die Crontab-Datei wird mit dem Kommando¯&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ crontab crontab.sample
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;installiert und kann mit dem Kommando&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ crontab -l
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;geprüft werden. Die Crontab regelt, wann am Tag das Programm cron bestimmte Tätigkeiten ausführt. So bedeutet die Zeile&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;59 0  * * * /usr/lib/newsbin/expire/doexpire
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;aus der Crontab oben zum Beispiel, daß jeden Tag um 0 Uhr 59 das Programm &lt;code&gt;doexpire&lt;/code&gt; gestartet werden soll, um alte Artikel zu löschen. Das funktioniert natürlich nur dann, wenn der Rechner um diese Zeit auch sicher angeschaltet ist. UNIX-Rechner haben in der Regel viele solche Cronjobs, die des Nachts alle wichtigen, aber unangenehmen Aufgaben erledigen. Daher sollte man den Rechner ruhig rund um die Uhr durchlaufen lassen und ihn um diese Zeit News und Mail holen lassen. Wenn man dies nicht machen kann, etwa weil der Rechner zu laut ist, dann muß man die Zeiten in der Crontab auf passende Zeiten anpassen.&lt;/p&gt;
&lt;p&gt;Jetzt können wir daran gehen, das System zu testen:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ inews -n white.test -t &amp;quot;Testing&amp;quot; -d local
Yummy Yummy Yummy
^D
news@white:~$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Dies sollte eine Datei in in.coming erzeugen:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ cd /usr/spool/news/in.coming/
news@white:/usr/spool/news/in.coming$ ls
0.1435483580.t  bad
news@white:/usr/spool/news/in.coming$ cat 0.1435483580.t
Newsgroups: white.test
Path: news
From: news@white.schulung.netuse.de (Kristian Koehntopp)
Subject: Testing
Distribution: local
Organization: My personal Linux in Kiel, Germany.
Message-ID: &amp;lt;DC0tuC.70H@white.schulung.netuse.de&amp;gt;
Date: Thu, 20 Jul 1995 15:32:34 GMT
Lines: 1

Yummy Yummy Yummy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Dabei sind folgende Dinge zu beachten:&lt;/p&gt;
&lt;p&gt;Die &lt;code&gt;Path:&lt;/code&gt;-Zeile sollte nur den Namen des Absender enthalten. Die Absenderadresse sollte korrekt sein, also in der &lt;code&gt;From:&lt;/code&gt;-Zeile den User &lt;code&gt;news&lt;/code&gt; mit einem vollständigen Domainnamen zeigen. Die Zeilen &lt;code&gt;Newsgroups:&lt;/code&gt; und &lt;code&gt;Distribution:&lt;/code&gt; müssen so aussehen, wie mit den Optionen &lt;code&gt;-n&lt;/code&gt; und &lt;code&gt;-d&lt;/code&gt; gefordert. Das &lt;code&gt;Subject:&lt;/code&gt; sollte so aussehen, wie mit &lt;code&gt;-t&lt;/code&gt; vorgegeben. Das Datum sollte stimmen und in GMT angezeigt werden (Stimmt die Zeitzonenanpassung?). Und schließlich sollte auch eine &lt;code&gt;Lines:&lt;/code&gt;-Headerzeile angezeigt werden und die korrekte Zeilenzahl angeben.&lt;/p&gt;
&lt;p&gt;Wenn das alles stimmt, kann der Benutzer &lt;code&gt;news&lt;/code&gt; (und nur &lt;code&gt;news&lt;/code&gt;, &lt;em&gt;niemals&lt;/em&gt; ein anderer!) das Kommando &lt;code&gt;newsrun&lt;/code&gt; aufrufen. Das dauert in etwa eine Minute, weil in &lt;code&gt;newsrun&lt;/code&gt; ein &amp;ldquo;&lt;code&gt;sleep 45&lt;/code&gt;&amp;rdquo; enthalten ist.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:/usr/spool/news/in.coming$ which newsrun
/usr/lib/newsbin/input/newsrun
news@white:/usr/spool/news/in.coming$ newsrun
^Z
[1]+  Stopped                 newsrun
news@white:/usr/spool/news/in.coming$ bg
[1]+ newsrun &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Im Logbuch muß jetzt ein Eintrag zu finden sein:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:/usr/spool/news/in.coming$ cd
news@white:~$ tail -2 log
Jul 20 16:39:50.000 nuki.NetUSE.de + &amp;lt;3uljtj$fb4@picard.toppoint.de&amp;gt;
Jul 20 17:35:52.000 white.schulung.netuse.de + &amp;lt;DC0tuC.70H@white.schulung.netuse.de&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Der letzte Eintrag zeigt an, daß der Artikel erfaßt und akzeptiert worden ist. Wir sehen ihn uns an:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ ls -l /usr/spool/news/white/test/
total 1
-rw-r--r--   1 news     news          237 Jul  9 23:10 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Das ist er. Durch das Einspielen in das Newssystem haben sich einige Headerzeilen (zum Beispiel der &lt;code&gt;Path:&lt;/code&gt;) etwas verändert. Das ist normal. Der nächste Schritt im Test ist es, einen Artikel zu erzeugen, der den unseren Feed weitergegeben wird:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ inews -n nuki.test -t &amp;quot;Testing&amp;quot;
Yummy Yummy Yummy
^D
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Dies ist kein Artikel mit der Distribution &amp;ldquo;&lt;code&gt;local&lt;/code&gt;&amp;rdquo; und er ist nicht in einer lokalen Gruppe. Also sollte er an &lt;code&gt;nuki&lt;/code&gt; weitergegeben werden:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:~$ newsrun &amp;amp;
[1] 9177
news@white:~$ cd /usr/spool/news/out.going/nuki/
news@white:/usr/spool/news/out.going/nuki$ ls -l
total 1
-rw-rw-r--   1 news     news           15 Jul 20 17:38 togo
news@white:/usr/spool/news/out.going/nuki$ cat togo
nuki/test/1 264
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Das &lt;code&gt;newsrun&lt;/code&gt; hat den Artikel wieder in das Newssystem übernommen. Außer der Installation der Artikeldatei in &lt;code&gt;/usr/spool/news/nuki/test&lt;/code&gt; ist aber noch etwas anderes passiert: In &lt;code&gt;.../out.going/nuki&lt;/code&gt; ist eine Datei &lt;code&gt;togo&lt;/code&gt; angelegt worden. Sie enthält ein Logbuch der noch zu packenden Artikel für das System &lt;code&gt;nuki&lt;/code&gt;. Die Zahl hinter dem Artikelnamen ist die Länge des Artikels in Byte. Das Programm &lt;code&gt;sendbatches&lt;/code&gt; wird die Datei togo einlesen und einen UUCP-Job für nuki erzeugen:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;news@white:/usr/spool/news/out.going/nuki$ sendbatches
^Z
[2]+  Stopped                 sendbatches
news@white:/usr/spool/news/out.going/nuki$ ls -l
total 3
-rw-rw-r--   2 news     news            5 Jul 20 17:40 L.9215
-rw-rw-r--   2 news     news            5 Jul 20 17:40 LOCKbatch
-rw-rw-r--   1 news     news            0 Jul 20 17:40 togo
-rw-rw-r--   1 news     news           15 Jul 20 17:40 togo.1
news@white:/usr/spool/news/out.going/nuki$ bg
[2]+ sendbatches &amp;amp;
news@white:/usr/spool/news/out.going/nuki$ ls -l
total 0
-rw-rw-r--   1 news     news            0 Jul 20 17:40 togo
[2]+  Done                    sendbatches
news@white:/usr/spool/news/out.going/nuki$ uustat -s nuki
nukid0294 nuki news 07-20 17:40 Executing rnews (sending 246 bytes)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Im Beispiel ist &lt;code&gt;sendbatches&lt;/code&gt; schon sehr kurz nach dem Aufruf mit &lt;code&gt;^Z&lt;/code&gt; gestoppt worden. Man kann deutlich sehen, wie das Newssystem während der Erzeugung der Batches Lockdateien erzeugt, um den Zugriff auf die Daten zu regulieren. Wird die Ausführung von &lt;code&gt;sendbatches&lt;/code&gt; mit &lt;code&gt;bg&lt;/code&gt; im Hintergrund freigegeben, verschwinden die Locks und die &lt;code&gt;togo&lt;/code&gt;-Datei leert sich. Stattdessen entsteht ein UUCP-Job für das System &lt;code&gt;nuki&lt;/code&gt;. Mit dem nächsten Start von UUCP verschwindet dieser Job in Richtung Feed.&lt;/p&gt;
&lt;p&gt;Damit sollte das Newssystem jetzt sicher laufen.&lt;/p&gt;
&lt;p&gt;Cnews kommt mit einer umfangreichen englischen Dokumentation. Bei der Slackware steht sie in &lt;code&gt;/usr/doc/cnews&lt;/code&gt; bereit, ist allerdings nicht formatiert. Um die Dokumentation zubereiten zu können, benötigt man bei der Slackware das Paket &lt;code&gt;pmake&lt;/code&gt; (GNU make tut es nicht) und das Paket &lt;code&gt;groff&lt;/code&gt; inklusive der zugehörigen Zeichensätze.&lt;/p&gt;
&lt;p&gt;Wenn beide Pakete installiert sind, sollte es genügen, im entsprechenden Verzeichnis &amp;ldquo;&lt;code&gt;pmake&lt;/code&gt;&amp;rdquo; aufzurufen. Dabei sollte &lt;code&gt;root&lt;/code&gt; für die Dauer des &lt;code&gt;pmake&lt;/code&gt;-Aufrufes (und nur für die Dauer des &lt;code&gt;pmake&lt;/code&gt;-Aufrufes!) das Verzeichnis &amp;ldquo;&lt;code&gt;.&lt;/code&gt;&amp;rdquo; im Suchpfad haben. Sollte es dabei zu Fehlermeldungen kommen, die besagen, daß das &amp;ldquo;&lt;code&gt;ms&lt;/code&gt;&amp;rdquo; Makropaket nicht gefunden werden kann, kann man stattdessen &lt;code&gt;tmac.cn&lt;/code&gt; verwenden. Dazu ist die Datei tmac.cn nach &lt;code&gt;/usr/lib/groff/tmac/tmac.s&lt;/code&gt; zu kopieren. &lt;code&gt;tmac.cn&lt;/code&gt; ist kein richtiger Ersatz für &lt;code&gt;tmac.s&lt;/code&gt;, aber es ist kompatibel genug, um die Dokumentation zu übersetzen. Während der Übersetzung der Dokumentation hagelt es einige Warnmeldungen, aber diese sind unkritisch.&lt;/p&gt;
&lt;p&gt;Die resultierenden Postscript-Dateien können ausgedruckt werden oder mit &lt;code&gt;ghostview&lt;/code&gt; oder Ghostscript angesehen werden. Die wichtigen Informationen stehen in der Datei &lt;code&gt;guide.ps&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@white:/usr/doc/cnews/docs# ls -l *ps
-rw-r--r--   1 root     root       310197 Jul 21 11:42 guide.ps
-rw-r--r--   1 root     root        29305 Jul 21 11:43 index.ps
-rw-r--r--   1 root     root         5312 Jul 21 11:43 toc.ps
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Es ist auch möglich, eine ASCII-Version der &lt;code&gt;guide&lt;/code&gt;-Datei zu erzeugen. Dazu ist das Kommando&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@white:/usr/doc/cnews/docs# pmake guide.out
root@white:/usr/doc/cnews/docs# ls -l guide.out
-rw-r--r--   1 root     root       223706 Jul 21 11:47 guide.out
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;aufzurufen. Dabei entsteht eine ganze Menge Schrott auf dem Bildschirm, der
aber ignoriert werden kann. Das Resultat wird eine Datei guide.out sein, die
im aktuellen Verzeichnis steht und eine lesbare ASCII-Version des Guides
enthält.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Robots Dictionary</title>
      <link>https://blog.koehntopp.info/1995/03/01/datenuebertragung-glossar.html</link>
      <pubDate>Wed, 01 Mar 1995 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1995/03/01/datenuebertragung-glossar.html</guid>
      <description>&lt;h4 id=&#34;dieser-text-ist-eine-verkürzte-form-des-textes-a-robots-dictionary-von-megrmblsaarde-martin-emmerich-er-erschien-zusammen-mit-anderen-artikeln-im-sonderheft-dfü-der-dos-international-dmv-verlag&#34;&gt;
    &lt;a href=&#34;#dieser-text-ist-eine-verk%c3%bcrzte-form-des-textes-a-robots-dictionary-von-megrmblsaarde-martin-emmerich-er-erschien-zusammen-mit-anderen-artikeln-im-sonderheft-df%c3%bc-der-dos-international-dmv-verlag&#34;&gt;
	Dieser Text ist eine verkürzte Form des Textes »A Robots Dictionary« von &lt;a href=&#34;mailto:me@grmbl.saar.de&#34;&gt;me@grmbl.saar.de&lt;/a&gt;

 (Martin Emmerich). Er erschien zusammen mit anderen Artikeln im Sonderheft DFÜ der DOS International (DMV Verlag).
    &lt;/a&gt;
&lt;/h4&gt;
&lt;h1 id=&#34;a&#34;&gt;
    &lt;a href=&#34;#a&#34;&gt;
	A
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Akustikkoppler:&lt;/dt&gt;
&lt;dd&gt;eine besondere Bauform des Modems, die über Muffen an
den Hörer und Mikrofon des Telefonapparates gekoppelt wird.&lt;/dd&gt;
&lt;dt&gt;ANSI:&lt;/dt&gt;
&lt;dd&gt;American National Standards Institute, Amerikanisches
Normungsinstitut, ähnlich dem DIN-Institut.&lt;/dd&gt;
&lt;dt&gt;Answer-Modus:&lt;/dt&gt;
&lt;dd&gt;Modem-Betriebsart. Gegenstück zum Originate-Modus.&lt;/dd&gt;
&lt;dt&gt;ASCII:&lt;/dt&gt;
&lt;dd&gt;American Standard Code for Information Interchange, amerikanischer
Zeichencode zum Informationsaustausch. Der meistverwendete Code in der
Datenkommunikation.&lt;/dd&gt;
&lt;dt&gt;asynchrone Verbindung:&lt;/dt&gt;
&lt;dd&gt;Verbindung ohne Übertragung eines Datentaktes.
Anfang und Ende eines Datenworts muessen durch Start- und Stopbits
markiert werden.&lt;/dd&gt;
&lt;dt&gt;AT-Befehlssatz:&lt;/dt&gt;
&lt;dd&gt;Kommandosprache zur Modemansteuerung,&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;b&#34;&gt;
    &lt;a href=&#34;#b&#34;&gt;
	B
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Bandbreite:&lt;/dt&gt;
&lt;dd&gt;hier Frequenzbandbreite des Telefons: Die Größe des
Frequenzbereiches, der über Telefon übertragen werden kann. Bei einem
Frequenzbereich von typisch 300 bis 3400Hz ist die Bandbreite 3100Hz. Da
die Grenzbereiche teilweise abgeschwächt werden (Dämpfung), sind etwa
3000Hz nutzbar.&lt;/dd&gt;
&lt;dt&gt;Baudrate:&lt;/dt&gt;
&lt;dd&gt;gibt die Anzahl der Zustandswechsel des übertragenen Signals pro
Sekunde an. Die Baudrate (auch Schrittgeschwindigkeit) wird in der
Einheit Baud gemessen. Multipliziert man die Anzahl der Bits pro Zustand
mit der Baudrate, so erhält man die Bitrate.
Nur wenn die Anzahl der Zustaende genau zwei ist (d.h. mit einem
Zustand genau ein Bit codiert wird) ist die Baudrate gleich der Bitrate.&lt;/dd&gt;
&lt;dt&gt;Bimodem:&lt;/dt&gt;
&lt;dd&gt;bidirektionales Übertragungsprotokoll. Arbeitet im Gegensatz zu
den üblichen Protokollen wie Kermit, Xmodem, Zmodem in beide
Richtungen gleichzeitig.
Nur auf IBM-Kompatiblen verfuegbar. Maximale Blockgroesse 4KB. Sehr
hoher Datendurchsatz (fast 100%).&lt;/dd&gt;
&lt;dt&gt;Bitrate:&lt;/dt&gt;
&lt;dd&gt;Anzahl der uebertragenen Bits pro Sekunde (Übertragungsgeschwindigkeit).
Gemessen wird in bit/s oder bps. Die Bitrate ist nur in
Sonderfaellen mit der Baudrate identisch!&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;c&#34;&gt;
    &lt;a href=&#34;#c&#34;&gt;
	C
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;CCITT:&lt;/dt&gt;
&lt;dd&gt;Comite Consultatif International Telephonique et Telegraphique, ein
Internationales Gremium für Normen zu Telefon und Telegraphie, an dem
Vertreter von Post, Industrie und Wissenschaft aus 159 Ländern
teilnehmen. Das CCITT ist ein Organ der International Telecommunications
Union (ITU) der Vereinten Nationen.
Normen zur Datenübertragung sind beispielsweise die über
Telefon (V-Normen), ueber Datennetze (X-Normen) und über ISDN
(I-Normen).&lt;/dd&gt;
&lt;dt&gt;CRC:&lt;/dt&gt;
&lt;dd&gt;Cyclic Redundancy Check, Prüfsumme, in Übertragungsprotokollen
verwendet. Üblich sind 16 oder 32 Bit lange Varianten, kurz: CRC-16
und CRC-32. Eine CRC stellt den Rest aus einer Polynomdivision dar.
Implementationen sind allgemein als Quelltext erhältlich.&lt;/dd&gt;
&lt;dt&gt;CTS:&lt;/dt&gt;
&lt;dd&gt;Clear To Send, Sendebereitschaft, Signal der V.24-Schnittstelle.
Auch RTR, Ready To Receive genannt.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;d&#34;&gt;
    &lt;a href=&#34;#d&#34;&gt;
	D
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;DCD:&lt;/dt&gt;
&lt;dd&gt;Data Carrier Detect, Trägersignalerkennung, Signal der
V.24-Schnittstelle.&lt;/dd&gt;
&lt;dt&gt;DCE:&lt;/dt&gt;
&lt;dd&gt;Data Communications Equipment, eine von zwei moeglichen
Konfigurationen einer V.24-Schnittstelle. Eine DCE kann immer nur
direkt mit einer DTE verbunden werden. Für eine Vermindung DCE-DCE
oder DTE-DTE muss ein Kabeladapter oder Spezialkabel (Nullmodem)
verwendet werden.&lt;/dd&gt;
&lt;dt&gt;DEE:&lt;/dt&gt;
&lt;dd&gt;Datenendeinrichtung, Deutsch fuer DTE.&lt;/dd&gt;
&lt;dt&gt;DFÜ:&lt;/dt&gt;
&lt;dd&gt;Datenfernübertragung.&lt;/dd&gt;
&lt;dt&gt;DIN:&lt;/dt&gt;
&lt;dd&gt;Deutsches Institut fuer Normung e.V. seit 1975, davor Deutsche
Industrie-Norm.
Der Verein ist aus dem 1917 gegruendeten &amp;ldquo;Normalienausschuss für den
allg. Maschinenbau&amp;rdquo; hervorgegangen und hat den Sitz in Berlin.&lt;/dd&gt;
&lt;dt&gt;Download:&lt;/dt&gt;
&lt;dd&gt;Das &amp;ldquo;Herunterladen&amp;rdquo; einer Datei vom fernen Rechner auf den
eigenen mit Hilfe eines Übertragungsprotokolles.&lt;/dd&gt;
&lt;dt&gt;DSR:&lt;/dt&gt;
&lt;dd&gt;Data Set Ready, Betriebsbereitschaft, Signal der V.24-Schnittstelle.&lt;/dd&gt;
&lt;dt&gt;DTE:&lt;/dt&gt;
&lt;dd&gt;Data Terminal Equipment, eine von zwei Konfigurationen einer V.24-
Schnittstelle. Das Gegenstück zur DCE.&lt;/dd&gt;
&lt;dt&gt;DTR:&lt;/dt&gt;
&lt;dd&gt;Data Terminal Ready, Endgerät betriebsbereit, Signal der
V.24-Schnittstelle.&lt;/dd&gt;
&lt;dt&gt;DÜE:&lt;/dt&gt;
&lt;dd&gt;Datenübertragungseinrichtung, Deutsch fuer DCE.&lt;/dd&gt;
&lt;dt&gt;Echo-Cancelling:&lt;/dt&gt;
&lt;dd&gt;beide Modems senden gleichzeitig auf derselben Frequenz.
Da aber jedes Modem weiss, was es gerade gesendet hat, kann es aus
dem Frequenzgemisch seine Signale unterdrücken und so die Daten der
Gegenstelle herausfiltern. Wird z.B. bei V.32 verwendet.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;e&#34;&gt;
    &lt;a href=&#34;#e&#34;&gt;
	E
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;EIA:&lt;/dt&gt;
&lt;dd&gt;Electronic Industries Association. Amerikanische Vereinigung der
Elektronikindustrie, die u.A. auch Standards fuer Datenkommunikation
herausgibt (z.B. RS-232-C).&lt;/dd&gt;
&lt;dt&gt;Escapen:&lt;/dt&gt;
&lt;dd&gt;Codieren von unerlaubten Zeichen mittels eines reservierten
Steuerzeichens (Escape-Zeichen). Solche Verfahren werden z.B. von
Übertragunsprotokollen zur Übertragung von Zeichen verwendet,
die in der darunterliegenden Übertragungsebene nicht zulässig sind.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;f&#34;&gt;
    &lt;a href=&#34;#f&#34;&gt;
	F
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Fallback:&lt;/dt&gt;
&lt;dd&gt;Zurückschalten auf langsamere Geschwindigkeit bei schlechter
Leitungsqualität.&lt;/dd&gt;
&lt;dt&gt;FSK:&lt;/dt&gt;
&lt;dd&gt;Frequency Shift Keying = Frequenzumtastung (Frequenzmodulation).&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;h&#34;&gt;
    &lt;a href=&#34;#h&#34;&gt;
	H
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;halbduplex:&lt;/dt&gt;
&lt;dd&gt;Datenübertragung in nur eine Richtung mit Umschaltung der
Übertragungsrichtung.&lt;/dd&gt;
&lt;dt&gt;Handshake:&lt;/dt&gt;
&lt;dd&gt;Synchronisationsverfahren bei der Datenübertragung. Der
Sender signalisiert, wenn er neue Daten senden möchte oder kann und der
Empfänger, wenn er neue verarbeiten kann bzw. möchte. Erst wenn beide
sich auf eine Übertragung geeinigt haben, kann diese beginnen.&lt;/dd&gt;
&lt;dt&gt;Hardware-Handshake:&lt;/dt&gt;
&lt;dd&gt;Handshake ueber Signalleitungen. Üblicherweise
wird bei V.24 mit CTS/RTS signalisiert.&lt;/dd&gt;
&lt;dt&gt;Hayes-Befehlssatz:&lt;/dt&gt;
&lt;dd&gt;Kommandosprache zur Modemansteuerung. Ursprünglich
Entwicklung der Firma Hayes. Inzwischen der De-Facto-Standard, von dem
aber nahezu jeder Modemhersteller mehr oder weniger abweicht.
Alle Befehle beginnen mit AT, daher heisst er auch AT-Befehlssatz.
Ist so weit verbreitet, dass sich der genormte V.25-Standard kaum
durchsetzt.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;i&#34;&gt;
    &lt;a href=&#34;#i&#34;&gt;
	I
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;ISDN:&lt;/dt&gt;
&lt;dd&gt;Integrated Services Digital Network, &amp;ldquo;Dienstintegrierendes
Digitales Netz&amp;rdquo;, ein öffentliches Digitalnetz sowohl zur Daten- als
auch zur Sprach- und Bildübertragung.&lt;/dd&gt;
&lt;dt&gt;ISO:&lt;/dt&gt;
&lt;dd&gt;International Standardisation Organisation, Internationale
Normungsorganisation. Internationales Gegenstueck zur staatlichen
Normungsinstituten wie ANSI oder DIN.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;k&#34;&gt;
    &lt;a href=&#34;#k&#34;&gt;
	K
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Kermit:&lt;/dt&gt;
&lt;dd&gt;eines der ältesten Üebertragungsprotokolle. Tatsächlich nach
Kermit dem Frosch benannt. Da die Blockgrösse in der ursprünglichen
Form maximal 94 Bytes beträgt, ist die Geschwindigkeit relativ gering
(hoher Aufwand fuer das Protokoll).&lt;/dd&gt;
&lt;dt&gt;Kompression:&lt;/dt&gt;
&lt;dd&gt;verringert das Datenvolumen bei gleichem Informationsgehalt,
indem Redundanzen eliminiert werden.
Bei den meisten Verfahren (z.B. V.42bis, MNP 5) werden die
häufigsten Zeichen und Zeichenfolgen mit kurzen Bitfolgen codiert,
während die selteneren länger codiert werden.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;l&#34;&gt;
    &lt;a href=&#34;#l&#34;&gt;
	L
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Leitungsvermittlung:&lt;/dt&gt;
&lt;dd&gt;Eine Leitung wird zwischen den beiden
Kommunikationspartnern für die Dauer der Verbindung fest geschaltet.
Das Gegenstück zu Paketvermittlung.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;m&#34;&gt;
    &lt;a href=&#34;#m&#34;&gt;
	M
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;MNP:&lt;/dt&gt;
&lt;dd&gt;Microcom Networking Protocol, Übertragungsverfahren der Firma
Microcom.  Es gibt zehn Klassen, die zum Teil aufwärtskompatibel
sind. Die Klassen 1-4 sind reine Datenübertragungsprotokolle. Diese
wurden in die V.42-Norm aufgenommen. Ab MNP Klasse 5 kommt dann
Kompression ins Spiel.&lt;/dd&gt;
&lt;dt&gt;Modem:&lt;/dt&gt;
&lt;dd&gt;Abkürzung fuer &amp;ldquo;MOdulator und DEModulator&amp;rdquo;, d.h. ein Gerät, das
den Bitstrom des Computers in analoge Signale umwandelt, die dann
auch über das Telefonnetz übertragen werden koennen (Modulation).
Das Partner-Modem macht die Umwandlung dann wieder rückgaengig
(Demodulation).
Deshalb ist auch der Akustikkoppler ein Modem, auch wenn er i.d.R.
nicht so genannt wird.&lt;/dd&gt;
&lt;dt&gt;Modulation:&lt;/dt&gt;
&lt;dd&gt;Verfahren, um einer Trägerfrequenz ein Nutzsignal
&amp;ldquo;aufzubürden&amp;rdquo;, so dass das Nutzsignal gut übertragen werden kann.
Üblich sind z.B.
&lt;p&gt;Amplitudenmodulation (AM):&lt;/p&gt;
  &lt;DD&gt;das Nutzsignal wird in die Amplitude (=Lautstärke) 
      codiert (z.B. laut=1, leise=0).
  Frequenzmodulation (FM, FSK):
  &lt;DD&gt;die Abweichung von der Trägerfrequenz ergibt das Nutzsignal. 
      Da bei der Datenübertragung das Nutzsignal nur
    	    zwei Zustände hat, ergeben sich zwei Frequenzen, die symmetrisch
      oberhalb und unterhalb der Trägerfrequenz liegen. Letztere heißt
      dann auch Mittenfrequenz.
  Phasenmodulation (PM, PSK):
  &lt;DD&gt;das (diskrete) Nutzsignal wird durch einen Sprung in der Phase 
      des (im Gegensatz zur FSK festen) Trägers codiert, d.h. der 
      normalerweise sinusförmige Signalverlauf wird
          unterbrochen und ein Stück weiter fortgesetzt. Oft werden mehrere
          Bits gleichzeitig in einen Zustand codiert.
  	Quadratur-Amplitudenmodulation (QAM):
  &lt;DD&gt;eine Kombination aus AM und PM,
    	    wobei ein Teil der Zustände in AM und der Rest in PM codiert 
      werden.
&lt;/dd&gt;
&lt;dt&gt;Multiplexer:&lt;/dt&gt;
&lt;dd&gt;Einrichtung, die einen schnelleren Datenkanal in mehrere
langsamere Kanäle aufteilt.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;o&#34;&gt;
    &lt;a href=&#34;#o&#34;&gt;
	O
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Originate-Modus:&lt;/dt&gt;
&lt;dd&gt;eine von zwei Betriebsarten bei manchen Vollduplex-Modems.&lt;/dd&gt;
&lt;dt&gt;OSI:&lt;/dt&gt;
&lt;dd&gt;Open Systems Interconnection, Sammlung von Standards der ISO zur
Kommunikation zwischen Computersystemen.&lt;/dd&gt;
&lt;dt&gt;OSI-ISO-Modell:&lt;/dt&gt;
&lt;dd&gt;Modell zur Datenübertragung zwischen Computersystemen.
Es beschreibt sieben aufeinander aufbauende Schichten mit definierten
Aufgaben und Schnittstellen.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;p&#34;&gt;
    &lt;a href=&#34;#p&#34;&gt;
	P
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Paketvermittlung:&lt;/dt&gt;
&lt;dd&gt;Eine Technik zum Weiterleiten von Daten in einem Netz.
Hierbei werden die Daten in Blöcken (&amp;ldquo;Paketen&amp;rdquo;) einer bestimmten Länge
übertragen. Spezielle Steuerpakete dienen dem Aufbau der Verbindung.
Im Gegensatz zur Leitungsvermittlung wird zwischen den Partnern keine
feste Leitung geschaltet, vielmehr werden die Daten je nach Auslastung
des Netzes ueber verschiedene Wege übertragen. Dabei können durchaus
Pakete des gleichen Datenstromes verschiedene Wege nehmen.&lt;/dd&gt;
&lt;dt&gt;Parität:&lt;/dt&gt;
&lt;dd&gt;Bit bei asynchroner Datenübertragung, das der Fehlererkennung
dient. Bestandteil des Übertragungsformats.&lt;/dd&gt;
&lt;dt&gt;Protokoll:&lt;/dt&gt;
&lt;dd&gt;Ein Satz von Regeln und Vereinbarungen, der den
Informationsfluss in einem Kommunikationssystem steuert. Kann sich
sowohl auf Hardware, wie auf Software beziehen. Wird in der
Datenübertragung haeufig als Kurzform fuer Übertragungsprotokoll
verwendet.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;q&#34;&gt;
    &lt;a href=&#34;#q&#34;&gt;
	Q
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;QAM:&lt;/dt&gt;
&lt;dd&gt;Quadrature Amplitude Modulation.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;r&#34;&gt;
    &lt;a href=&#34;#r&#34;&gt;
	R
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;RD:&lt;/dt&gt;
&lt;dd&gt;Receive Data, Empfangsdaten, Signal der V.24-Schnittstelle.&lt;/dd&gt;
&lt;dt&gt;RI:&lt;/dt&gt;
&lt;dd&gt;Ring Indicator, ankommender Ruf, Signal der V.24-Schnittstelle.&lt;/dd&gt;
&lt;dt&gt;Routing:&lt;/dt&gt;
&lt;dd&gt;Transportieren von Daten innerhalb eines Netzes anhand eines
Pfades, der im Header der Daten enthalten ist (passives Routing)
oder durch Bestimmen des kürzesten, schnellsten, billigsten oder
nächstbesten Routweges (aktives Routing) aus einer Karte des Netzes.&lt;/dd&gt;
&lt;dt&gt;RS-232-C:&lt;/dt&gt;
&lt;dd&gt;amerikanische EIA-Norm für serielle Schnittstellen. Die
internationale Norm V.24 legt die entsprechenden funktionalen
Eigenschaften und V.28 die entsprechenden elektrischen Eigenschaften
fest.&lt;/dd&gt;
&lt;dt&gt;RTS:&lt;/dt&gt;
&lt;dd&gt;Request To Send, Sendeteil Einschalten, Signal der
V.24-Schnittstelle.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;s&#34;&gt;
    &lt;a href=&#34;#s&#34;&gt;
	S
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Sliding-Window-Protocol:&lt;/dt&gt;
&lt;dd&gt;Jedes Übertragungsprotokoll, bei dem weitere
Datenblöcke schon übertragen werden können, während für den
aktuellen Datenblock das ACK noch aussteht. Wesentlich schneller, als
wenn das Protokoll jedesmal das Senden unterbricht, um auf die
Bestätigung des Blockes zu warten. Die Anzahl der ACKs, die noch
ausstehen duerfen, bezeichnen die Window-Size des Protokolls.&lt;/dd&gt;
&lt;dt&gt;Software-Handshake:&lt;/dt&gt;
&lt;dd&gt;Handshake durch festgelegte Steuerzeichen. Fuer
Binaeruebertragungen ohne Übertragungsprotokoll nicht geeignet, da
die Daten auch die reservierten Handshake-Zeichen enthalten koennen.
Die ueblichsten Zeichen sind XON/XOFF, manchmal wird aber auch
ETX/ACK benutzt.&lt;/dd&gt;
&lt;dt&gt;Split-Speed:&lt;/dt&gt;
&lt;dd&gt;asymmetrische vollduplex-Datenübertragung mit zwei
verschiedenen Geschwindigkeiten (z.B. V.23).&lt;/dd&gt;
&lt;dt&gt;Startbit:&lt;/dt&gt;
&lt;dd&gt;Bit bei asynchroner Uebertragung, das den Anfang eines Datenworts
anzeigt. Immer Null. s. Übertragungsformat.&lt;/dd&gt;
&lt;dt&gt;Stopbit:&lt;/dt&gt;
&lt;dd&gt;ein oder zwei Bits bei asynchroner Übertragung,
die das Ende eines Datenworts anzeigen.
Immer Eins. siehe Übertragungsformat.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;t&#34;&gt;
    &lt;a href=&#34;#t&#34;&gt;
	T
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;TAE:&lt;/dt&gt;
&lt;dd&gt;TelefonAnschlussEinheit. Steckersystem der Deutschen Telekom. In
Deutschland wird nur die sechspolige Version TAE-6 und in
ISDN-Anlagen die achtpolige TAE-8 verwendet.&lt;/dd&gt;
&lt;dt&gt;TD:&lt;/dt&gt;
&lt;dd&gt;Transmit Data, Sendedaten, Signal der V.24-Schnittstelle.&lt;/dd&gt;
&lt;dt&gt;Trellis-Modulation:&lt;/dt&gt;
&lt;dd&gt;spezielles Modulationsverfahren mit eingebauter
Fehlerkorrektur, wird z.B. bei V.32 verwendet. Im Gegensatz zur
Quadratur-Amplitudenmodulation mit ihren Quadbits werden Quintbits
uebertragen. Das zusätzliche Bit dient der Fehlerkontrolle und teilweise
auch deren Beseitigung.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;u&#34;&gt;
    &lt;a href=&#34;#u&#34;&gt;
	U
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Übertragungsformate:&lt;/dt&gt;
&lt;dd&gt;Bitkombination bei asynchroner Datenübertragung.
Durch zusaetzliche Bits wird Anfang (Startbit) und Ende (Stopbit)
eines Datenworts markiert. Weitere Bits (Paritätsbits) können der
Fehlererkennung dienen.
Die ueblichsten Formate sind &amp;ldquo;8n1&amp;rdquo; ( 8 Datenbits, no=keine Parität,
1 Stopbit) und &amp;ldquo;7e1&amp;rdquo; ( 7 Datenbits, even=gerade Parität, 1 Stopbit).&lt;/dd&gt;
&lt;dt&gt;Übertragungsprotokoll:&lt;/dt&gt;
&lt;dd&gt;Verfahren zur Übermittlung von Daten; diese
werden meist in Blöcke zerlegt und um Prüfsummen (CRC o.ä.)
ergänzt. Fehlerhafte Blöcke werden automatisch neu übertragen, ohne
daß der Benutzer (oberhalb der Protokollebene) etwas davon merkt. Bei
hoher Fehlerhäufigkeit wird meistens die Blockgrösse verkleinert.&lt;/dd&gt;
&lt;dt&gt;Upload:&lt;/dt&gt;
&lt;dd&gt;Das &amp;ldquo;Hinaufladen&amp;rdquo; einer Datei vom eigenen Rechner auf den fernen
Rechner mit einem Übertragungsprotokoll. Die Umkehrung dieses
Vorganges heisst Download.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;v&#34;&gt;
    &lt;a href=&#34;#v&#34;&gt;
	V
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;vollduplex:&lt;/dt&gt;
&lt;dd&gt;Datenübertragung in beide Richtungen gleichzeitig.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;w&#34;&gt;
    &lt;a href=&#34;#w&#34;&gt;
	W
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Ward-Christiansen-Protokoll:&lt;/dt&gt;
&lt;dd&gt;s. Xmodem.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;x&#34;&gt;
    &lt;a href=&#34;#x&#34;&gt;
	X
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;X.25:&lt;/dt&gt;
&lt;dd&gt;Schnittstellennorm des CCITT zur paketorientierten Datenübermittlung.
Das öffentliche deutsche X.25-Netz ist Datex-P.&lt;/dd&gt;
&lt;dt&gt;Xmodem:&lt;/dt&gt;
&lt;dd&gt;Übertragungsprotokoll. Nach seinem Erfinder auch Ward-
Christensen-Protokoll genannt. Neben Kermit eines der ältesten
Datenübertragungsprotokolle.&lt;/dd&gt;
&lt;dt&gt;XON:&lt;/dt&gt;
&lt;dd&gt;Steuerzeichen (Ctrl-Q) zum Signalisieren der Empfangsbereitschaft
(Softwarehandshake), wird von XOFF aufgehoben.&lt;/dd&gt;
&lt;dt&gt;XOFF:&lt;/dt&gt;
&lt;dd&gt;Steuerzeichen (Ctrl-S) zum Aufheben der Empfangsbereitschaft,
Gegenstück zu XON.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;y&#34;&gt;
    &lt;a href=&#34;#y&#34;&gt;
	Y
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Ymodem:&lt;/dt&gt;
&lt;dd&gt;Übertragungsprotokoll, faßt die diversen Xmodem-Erweiterungen
zusammen und ergänzt sie um eine Übertragung von Dateinamen und
Dateigröße und um Batch-Übertragungen.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h1 id=&#34;z&#34;&gt;
    &lt;a href=&#34;#z&#34;&gt;
	Z
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Zmodem:&lt;/dt&gt;
&lt;dd&gt;Übertragungsprotokoll, völlig neues Protokoll, versteht sich
aber als Nachfolger von Ymodem. Auf positive Rückmeldungen wird
verzichtet, sofern die Leitungsqualität das zuläßt. Die Blockgröße
wird während der Übertragung der Leitungsgüte angepaßt. Die maximale
Blockgröße ist auf 1K (einige Versionen: 8 KB) erhöht.&lt;/dd&gt;
&lt;/dl&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>V-Normen</title>
      <link>https://blog.koehntopp.info/1995/03/01/vnormen.html</link>
      <pubDate>Wed, 01 Mar 1995 09:15:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1995/03/01/vnormen.html</guid>
      <description>&lt;h1 id=&#34;v-normen&#34;&gt;
    &lt;a href=&#34;#v-normen&#34;&gt;
	V-Normen
    &lt;/a&gt;
&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;V.1:&lt;/dt&gt;
&lt;dd&gt;Binärwerte fuer 2-Status-Codes (auf gut deutsch LOW=0, HIGH=1 usw.).&lt;/dd&gt;
&lt;dt&gt;V.2:&lt;/dt&gt;
&lt;dd&gt;maximal zulässige Last von Endgeräten an Telefonleitungen.&lt;/dd&gt;
&lt;dt&gt;V.4:&lt;/dt&gt;
&lt;dd&gt;normiert Zeichensatz, Zeichencodierung (Parity, Start-/Stopbits).&lt;/dd&gt;
&lt;dt&gt;V.5:&lt;/dt&gt;
&lt;dd&gt;Signalraten f. sync. Übertragungen auf Wahlleitungen.&lt;/dd&gt;
&lt;dt&gt;V.6:&lt;/dt&gt;
&lt;dd&gt;Signalraten f. sync. Übertragungen auf Standleitungen&lt;/dd&gt;
&lt;dt&gt;V.7:&lt;/dt&gt;
&lt;dd&gt;einige Begriffsdefinitionen.&lt;/dd&gt;
&lt;dt&gt;V.10:&lt;/dt&gt;
&lt;dd&gt;asymmetrische Beschaltung von Schnittstellen.&lt;/dd&gt;
&lt;dt&gt;V.11:&lt;/dt&gt;
&lt;dd&gt;symmetrische Beschaltung von Schnittstellen.&lt;/dd&gt;
&lt;dt&gt;V.13:&lt;/dt&gt;
&lt;dd&gt;simulierte Trägerkontrolle (halbduplex/vollduplex).&lt;/dd&gt;
&lt;dt&gt;V.14:&lt;/dt&gt;
&lt;dd&gt;Übertragung von asynchronem Handshaking über synchrone
Verbindungen (ist z.B. in V.42 enthalten).&lt;/dd&gt;
&lt;dt&gt;V.15:&lt;/dt&gt;
&lt;dd&gt;elektrische/akustische Eigenschaften von Akustikkopplern.&lt;/dd&gt;
&lt;dt&gt;V.16:&lt;/dt&gt;
&lt;dd&gt;analoge Modems fuer medizinische Zwecke (EKG-Uebertragung).&lt;/dd&gt;
&lt;dt&gt;V.17:&lt;/dt&gt;
&lt;dd&gt;2400 Baud, 7200-14400 bit/s Trellis-Code-Modulation, adaptive
Equalisation, halbduplex im Wählnetz (FAX).&lt;/dd&gt;
&lt;dt&gt;V.19:&lt;/dt&gt;
&lt;dd&gt;Frequenzanordnung fuer parallele Übertragungen.&lt;/dd&gt;
&lt;dt&gt;V.20:&lt;/dt&gt;
&lt;dd&gt;erweitert V.19.&lt;/dd&gt;
&lt;dt&gt;V.21:&lt;/dt&gt;
&lt;dd&gt;Datenübertragung bei 300bit/s vollduplex, im Wählnetz. Für jede
der beiden Richtungen (Originate, Answer) wird eine eigene
Trägerfrequenz verwendet. Die binären Zustände jeder Richtung
werden durch Frequenzen (Frequenzmodulation) codiert:
Originate : 1080Hz (  0 =  980Hz, 1 = 1180Hz )
Answer    : 1750Hz (  1 = 1650Hz, 1 = 1850Hz )&lt;/dd&gt;
&lt;dt&gt;V.22:&lt;/dt&gt;
&lt;dd&gt;Übertragungsnorm mit 1200bit/s, vollduplex. Als Modulation wird
Phasenmodulation verwendet. Die Baudrate beträgt 600Baud - es
müssen also zwei Bits gleichzeitig (ein Dibit) übertragen werden.
Diese müssen in vier Zuständen (00, 01, 10, 11) codiert werden,
dafür sind also vier Phasensprünge (0, Pi/4, Pi/2, 3/4Pi)
notwendig. Die Trägerfrequenzen sind 1200Hz bei Originate bzw.
2400Hz bei Answer.&lt;/dd&gt;
&lt;dt&gt;V.22bis:&lt;/dt&gt;
&lt;dd&gt;Übertragungsnorm fuer Geschwindigkeiten von 2400bit/s. Basiert
auf V.22, nur dass statt zwei Bits vier gleichzeitig (Quadbits)
übertragen werden. Arbeitet mit QAM als Modulation bei denselben
Frequenzen wie V.22.&lt;/dd&gt;
&lt;dt&gt;V.23:&lt;/dt&gt;
&lt;dd&gt;asymmetrische vollduplex-Datenübertragung. In der einen Richtung
wird mit 1200bit/s übertragen, in der anderen mit 75 (Split-Speed).
Im Gegensatz zu symmetrischen vollduplex-1200bit/s-Normen wie z.B.
V.22 kann hier noch die einfachere Frequenzmodulation verwendet
werden. Bildschirmtext arbeitet mit V.23.&lt;/dd&gt;
&lt;dt&gt;V.24:&lt;/dt&gt;
&lt;dd&gt;CCITT-Norm fuer serielle Datenübertragung. Legt die funktionalen
Eigenschaften (z.B. Steckerbelegung) von seriellen Schnittstellen
fest. Meist wird nur ein kleiner Teil implementiert, da die gesamte
Norm sehr umfangreich ist.
Zusammen mit der V.28, die die elektrischen Eigenschaften festlegt,
entspricht die V.24 der amerikanischen Norm RS-232-C.&lt;/dd&gt;
&lt;dt&gt;V.25:&lt;/dt&gt;
&lt;dd&gt;Befehlssatz zur Ansteuerung von Modems und zum Verbindungsaufbau.
Nicht sehr gebräuchlich. Die meisten Modems benutzen stattdessen
den Hayes-Befehlssatz.&lt;/dd&gt;
&lt;dt&gt;V.25bis:&lt;/dt&gt;
&lt;dd&gt;einige kryptische Modem-Steuerkommandos und -Antwortstrings.&lt;/dd&gt;
&lt;dt&gt;V.26:&lt;/dt&gt;
&lt;dd&gt;Verfahren aehnlich V.22 nur mit 2400 bzw. 75 bit/s. Für Vierdraht-
Standleitungen.&lt;/dd&gt;
&lt;dt&gt;V.26bis:&lt;/dt&gt;
&lt;dd&gt;Erweiterung von V.26 auf Wählleitungen.&lt;/dd&gt;
&lt;dt&gt;V.27:&lt;/dt&gt;
&lt;dd&gt;4800bit/s auf Standleitungen, optional mit 75bit/s Rückkanal
(Split-speed). Phasenmodulation.&lt;/dd&gt;
&lt;dt&gt;V.27bis:&lt;/dt&gt;
&lt;dd&gt;Erweiterung von V.27 auf 4800bit/s, mit Fallback auch 2400bit/s
auf Standleitungen.&lt;/dd&gt;
&lt;dt&gt;V.27ter:&lt;/dt&gt;
&lt;dd&gt;Erweiterung von V.27bis fuer Wählleitungen.&lt;/dd&gt;
&lt;dt&gt;V.28:&lt;/dt&gt;
&lt;dd&gt;elektrische Eigenschaften einer seriellen Schnittstelle. Die
funktionellen Eigenschaften sind in V.24 genormt. Beide zusammen
entsprechen der RS-232-C-Norm.&lt;/dd&gt;
&lt;dt&gt;V.29:&lt;/dt&gt;
&lt;dd&gt;CCITT-Norm zur halbduplex-Datenübertragung mit 9600bit/s. Basiert
auf V.22bis. Dort hat man eine Schrittgeschwindigkeit von 600 Baud.
Dabei werden mit Quadratur-Amplitudenmodulation (QAM) vier Bit
gleichzeitig (ein Quadbit) übertragen. Die Schrittgeschwindigkeit
wurde nun fuer V.29 auf 2400 Baud erhöht. Dafür wird dann eine
Trägerfrequenz von 1700 Hz verwendet, die genau in der Mitte des
Telefonbandes (300 bis 3400Hz) liegt. Fuer einen Rückkanal bleibt aber
damit kein Platz mehr, d.h. V.29 ist ein Halbduplexverfahren.
Deswegen wird es überwiegend fuer Faxgeräte eingesetzt.
Auf Vierdraht-Standleitungen kann V.29 auch vollduplex übertragen.&lt;/dd&gt;
&lt;dt&gt;V.31:&lt;/dt&gt;
&lt;dd&gt;Stromschleife fuer binäre Uebertragung mit &amp;lt;75bps (Telex).&lt;/dd&gt;
&lt;dt&gt;V.32:&lt;/dt&gt;
&lt;dd&gt;CCITT-Norm zur Datenübertragung mit 9600bit/s bidirektional
(vollduplex). Basiert auf V.29. Ebenso wie dort werden fuer 9600 bps
Quadbits mit QAM uebertragen, allerdings bei einer Trägerfrequenz
von 1800 Hz. Auch hier ist kein Platz für einen Rückkanal. Daher
senden beide Modems gleichzeitig auf derselben Frequenz. Da aber
jedes Modem weiß, was es gerade gesendet hat, kann es aus dem
Frequenzgemisch seine Signale unterdrücken und so die Daten der
Gegenstelle herausfiltern (Echo-Cancelling).
Eine Variante von V.32 ist die Trellis-Modulation. Hier werden
statt der Quadbits Quintbits übertragen. Das zusätzliche Bit wird
allerdings nicht fuer Datenübertragung genutzt, sondern fuer die
Fehlerkorrektur (aehnlich ^Parität^ bei RS-232-C).  Dadurch ist die
Übertragung etwa doppelt so fehlersicher, wie ohne Trellis.&lt;/dd&gt;
&lt;dt&gt;V.32bis:&lt;/dt&gt;
&lt;dd&gt;Erweiterung von V.32 auf 14400bit/s vollduplex. Neueste
Übertragungsnorm. Arbeitet ebenfalls mit Echokorrektur. Es wird
eine feinere Abstufung der Phasen- und Amplitudenschritte in der
QAM-Matrix verwendet (stellt natuerlich höhere Anforderungen an die
Leitungsqualität). Dadurch steigt einerseits die Übertragungsrate
(14.4kbps bidirektional) und andererseits ist eine dynamische
Leitungsanpassung mit etwas besser abgestuftem Fallback.
Zusaetzlich gibt es ein Verfahren, mit dem sich die Modems in
Zehntelsekunden auf einen Geschwindigkeitswechsel einigen koennen,
anstatt wie bei V.32 die Verbindung neu auszumessen.&lt;/dd&gt;
&lt;dt&gt;V.33:&lt;/dt&gt;
&lt;dd&gt;wie V.32bis auf Vierdraht-Standleitungen.&lt;/dd&gt;
&lt;dt&gt;V.40:&lt;/dt&gt;
&lt;dd&gt;Fehlerkorrektur durch Synchronisation und Über-/Unterlaufzählung&lt;/dd&gt;
&lt;dt&gt;V.41:&lt;/dt&gt;
&lt;dd&gt;Alte Fehlerkorrekturspezifikation fuer V.23.&lt;/dd&gt;
&lt;dt&gt;V.42:&lt;/dt&gt;
&lt;dd&gt;Übertragungsprotokoll. Syncron-asynchron-Wandlung nach V.14.
Schliesst die MNP-Klassen 1-4 ein.&lt;/dd&gt;
&lt;dt&gt;V.42bis:&lt;/dt&gt;
&lt;dd&gt;ein Kompressionsverfahren der CCITT, aufbauend auf dem V.42-
Protokoll. V.42bis verwendet die BTLZ (British Telecom Lempel and
Ziv)-Codierung, wie sie ähnlich auch in den Dateikompressionsverfahren
(Zip, Arc, Lharc, Pak, Zoo etc.) eingesetzt wird. Im Gegensatz zu V.42
ist V.42bis nicht kompatibel zu dem entsprechenden MNP-Verfahren (hier
MNP 5). MNP 5 verwendet eine andere Codierung (Huffmann), wird jedoch von
den meisten Herstellern mit im selben Gerät angeboten.&lt;/dd&gt;
&lt;dt&gt;V.50:&lt;/dt&gt;
&lt;dd&gt;Qualitätsanforderungen an Leitungen fuer V.21/V.23.&lt;/dd&gt;
&lt;dt&gt;V.51:&lt;/dt&gt;
&lt;dd&gt;Einrichtung postinterner Stellen zur Untersuchung von
Übertragungsproblemen.&lt;/dd&gt;
&lt;dt&gt;V.52:&lt;/dt&gt;
&lt;dd&gt;Testmuster fuer Leitungsqualität bei Datenübertragung.&lt;/dd&gt;
&lt;dt&gt;V.53:&lt;/dt&gt;
&lt;dd&gt;Teil von V.50, Qualitätsparameter.&lt;/dd&gt;
&lt;dt&gt;V.54:&lt;/dt&gt;
&lt;dd&gt;Testprotokolle (LAL, LDL, RDL) - ist in den meisten Modems drin.&lt;/dd&gt;
&lt;dt&gt;V.100:&lt;/dt&gt;
&lt;dd&gt;Verbindungsaufbau bei Mehrnormenmodems. Leider fehlerhaft: Nicht
alle normgerechten Modems verstehen sich. Deshalb selten verwendet.&lt;/dd&gt;
&lt;/dl&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Grundlagen der Datenübertragung</title>
      <link>https://blog.koehntopp.info/1995/02/01/datenuebertragung.html</link>
      <pubDate>Wed, 01 Feb 1995 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1995/02/01/datenuebertragung.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;von: Kristian Köhntopp, aus: DOS Sonderheft DFÜ, DMV Verlag&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;grundlagen-der-datenübertragung&#34;&gt;
    &lt;a href=&#34;#grundlagen-der-daten%c3%bcbertragung&#34;&gt;
	Grundlagen der Datenübertragung
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h4 id=&#34;der-einsteiger-in-das-gebiet-der-datennah--und-fernübertragung-wird-zunächst-einmal-mit-einer-verwirrenden-vielfalt-neuer-konzepte-und-begriffe-konfrontiert-wir-wollen-hier-versuchen-einen-allgemeinen-überblick-über-das-gebiet-der-datenübertragung-zu-geben-und-die-wichtigsten-ideen-und-ausdrücke-darzustellen&#34;&gt;
    &lt;a href=&#34;#der-einsteiger-in-das-gebiet-der-datennah--und-fern%c3%bcbertragung-wird-zun%c3%a4chst-einmal-mit-einer-verwirrenden-vielfalt-neuer-konzepte-und-begriffe-konfrontiert-wir-wollen-hier-versuchen-einen-allgemeinen-%c3%bcberblick-%c3%bcber-das-gebiet-der-daten%c3%bcbertragung-zu-geben-und-die-wichtigsten-ideen-und-ausdr%c3%bccke-darzustellen&#34;&gt;
	Der Einsteiger in das Gebiet der Datennah- und fernübertragung wird zunächst einmal mit einer verwirrenden Vielfalt neuer Konzepte und Begriffe konfrontiert. Wir wollen hier versuchen, einen allgemeinen Überblick über das Gebiet der Datenübertragung zu geben und die wichtigsten Ideen und Ausdrücke darzustellen.
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Die Grundaufgabe bei der Datenübertragung ist es, eine Menge an
Informationen von einem Gerät zu einem anderen zu übertragen. Diese
Formulierung ist mit Absicht genauso allgemein gewählt, wie sich das
Problem in der Wirklichkeit darstellen kann. Bei dem zu lösenden
Problem kann es sich um die einfache Übermittlung einer Grafikdateien
vom Rechner zum Drucker handeln, aber genausogut kann es sein, daß die
kompletten Konstruktionspläne eines Containerfrachters vom
koreanischen Konstruktionsbüro an eine Werft in Bremen oder Kiel
übermittelt werden müssen. Entsprechend vielfältig sind die Lösungen,
die für das jeweilige Problem gefunden werden und entsprechend
unterschiedlich ist nicht nur die verwendete Hard- und Software,
sondern auch die Begriffswelt, die die entsprechenden Personen
verwenden.&lt;/p&gt;
&lt;h2 id=&#34;das-osi-modell&#34;&gt;
    &lt;a href=&#34;#das-osi-modell&#34;&gt;
	Das OSI-Modell
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um dieses Problem in den Griff zu bekommen, hat sich die
Normungskommision ISO zusammengesetzt und ein sogenanntes
&lt;em&gt;Referenzmodell&lt;/em&gt; für die Datenübertragung ausgearbeitet. Dieses
Referenzmodell wird allgemein als
&lt;em&gt;Open Systems Interconnect (OSI) Modell&lt;/em&gt; bezeichnet. Das Modell
gibt keine konkrete Lösung zur
Datenübertragungsproblemen an, sondern versucht das komplizierte
Problem Datenübertragung in kleine, leichter zu lösende Teilprobleme
zu unterteilen, die aufeinander aufbauen. Hat man ein Teilproblem im
Griff, kann man sich dem nächstkomplizierten Problem zuwenden. Das
OSI-Modell besteht insgesamt aus sieben Schichten, mit denen man
versucht, die Aufgabe zu strukturieren.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1995/02/bild1.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 1: Das OSI 7-Schichtenmodell&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Weil jede Schicht auf den darunter liegenden Schichten aufbaut, redet
man auch gelegentlich von einem Stapel oder &lt;em&gt;protocol stack&lt;/em&gt;. Man
kann nicht immer ein Protokoll oder eine Funktion in der realen Welt
genau auf eine Schicht im OSI-Referenzmodell abbilden. Das ist auch nicht
notwendig, denn das Modell stellt nur eine Strukturierungshilfe dar und
repräsentiert keine Gesetzmäßigkeit, nach der ein Protokoll zwangsläufig aufgebaut sein muß.&lt;/p&gt;
&lt;h2 id=&#34;von-punkt-zu-punkt&#34;&gt;
    &lt;a href=&#34;#von-punkt-zu-punkt&#34;&gt;
	Von Punkt zu Punkt
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um Daten übertragen zu können, muß zunächst
einmal eine Verbindung zwischen den beteiligten Geräten
hergestellt werden. Genau damit beschäftigt sich die
unterste Schicht des OSI-Protokollturmes, die
&lt;em&gt;physical layer&lt;/em&gt;.  Damit eine Verbindung konstruiert werden kann,
ist es notwendig, die verwendeten Kabel und Stecker zu
normieren.  Außerdem müssen die elektrischen
Parameter der Übertragung festgelegt werden und eine
entsprechende Hardware vorhanden sein. Natürlich braucht
man heute für Standardfälle keine solchen
Vereinbarungen mehr zu treffen. Stattdessen existiert eine
reichhaltige Palette von Normen für die unterschiedlichsten
Anwendungsfälle. So legt die CCITT-Norm &lt;em&gt;V.24&lt;/em&gt; z.B. die
elektrischen Parameter einer seriellen Schnittstelle eines PC
fest, während die parallele Schnittstelle durch eine
Herstellernorm des Druckerherstellers *&lt;em&gt;Centronics&lt;/em&gt;
beschrieben wird.  Andere Normen beschreiben die Hardware zum
Anschluß an ein Ethernet, ein Token-Ring Netzwerk oder an
einen FDDI-Glasfaserring.&lt;/p&gt;
&lt;p&gt;Danach kann man sich Gedanken über ein &lt;em&gt;Übertragungsprotokoll&lt;/em&gt;
machen. Das Protokoll legt eine Verfahrensvorschrift fest, nach der
sich alle an der Übertragung beteiligten Geräte Zeichen auf dem
Übertragungsmedium signalisieren dürfen. Dabei muß nicht nur das wie
der Zeichenübertragung geregelt werden, sondern auch das wann. Das
bedeutet: Man muß nicht nur festlegen, wie und mit welcher
Geschwindigkeit die einzelnen Bits eines Datenbytes codiert werden,
sondern man muß auch festlegen, wie ein Gerät seine Übertragung
anmelden muß. Einerseits verhindert man damit, daß mehrere Sender
gleichzeitig versuchen, einem Empfänger eine Nachricht zu senden und
sich gegenseitig blockieren.
Diesen Teil eines Protokolles nennt man &lt;em&gt;media access layer&lt;/em&gt;, weil er den Zugriff auf das Datenübertragungsmedium - sprich: das Kabel - regelt.
Andererseits muß der Empfänger die Möglichkeit haben, eine Datenübertragung abzulehnen, weil er z.B. intern noch mit der Verarbeitung einer vorhergehenden Nachricht beschäftigt ist oder weil seine Puffer voll sind und die Daten deswegen nicht entgegen nehmen kann.
Diesen Teil eines Protokolles nennt man &lt;em&gt;flow control&lt;/em&gt; (Datenflußkontrolle).&lt;/p&gt;
&lt;h2 id=&#34;bitte-nicht-stören&#34;&gt;
    &lt;a href=&#34;#bitte-nicht-st%c3%b6ren&#34;&gt;
	Bitte nicht stören
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Jede Datenübertragung in der wirklichen Welt hat mit dem Problem
mehr oder minder starker Störungen zu kämpfen. Nachdem man das Problem
der Datenübertragung erst einmal grundsätzlich gelöst hat, kann man
sich daran machen, das Übertragungsprotokoll so zu verbessern, daß
solche Übertragungsfehler erkannt und korrigiert werden können.
Derartige Spezifikationen werden im OSI-Modell in die zweite Schicht,
die &lt;em&gt;data link layer&lt;/em&gt;, eingeordnet. Die Korrektur von
Übertragungsfehlern kann auf zwei Arten geschehen: Einmal könnte man
sich für die Übertragung einen speziellen Code definieren, der es
nicht nur möglich macht, Übertragungsfehler zu erkennen, sondern sogar
das ursprüngliche Zeichen zurückzuberechnen. Zum anderen könnte man
sich darauf beschränken, Fehler nur zu erkennen und dem Sender zu
signalisieren, die beschädigten Daten ein weiteres Mal zu übertragen.&lt;/p&gt;
&lt;p&gt;Dies ist das gebräuchlichere Verfahren, aber es setzt voraus, daß es
Rückkanal existiert, über den der Empfänger den Sender darüber
informieren kann, ob und wie gut die Übertragung funktioniert hat.
Wenn man sowieso schon dabei ist, mit verschiedenen Codierungen zu
hantieren, fügt man an dieser Stelle oft noch eine Kompression der
Daten für die Dauer der Übertragung mit ein. Dies ist letztendlich
auch nur ein weiteres Umkodieren von Zeichen, wenn auch mit dem Ziel,
eine möglichst kurze und nicht eine möglichst sichere oder leicht zu
verarbeitende Darstellung zu finden. Auf diese Weise kann man die
Übertragungsleistung einer Datenleitung noch beträchlich erhöhen. Je
nach Art der Daten und des verwendeten Kompressionsprogrammes ist eine
Steigerung um 200 % bis 500 % möglich.&lt;/p&gt;
&lt;h2 id=&#34;aus-vielen-verbindungen-wird-ein-netz-geknüpft&#34;&gt;
    &lt;a href=&#34;#aus-vielen-verbindungen-wird-ein-netz-gekn%c3%bcpft&#34;&gt;
	Aus vielen Verbindungen wird ein Netz geknüpft
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Auf diese Weise kann man sich eine schnelle und fehlerfreie
Verbindung zwischen zwei Endpunkten konstruieren. Fügt man noch eine
weitere Idee hinzu, gelangt man von Punkt-zu-Punkt Verbindungen zu
echten Rechnernetzen: In einem solchen Rechnernetz sind auch indirekte
Verbindungen möglich. Es besteht also die Möglichkeit, eine Nachricht
oder ein Datenpaket über einen oder mehrere andere Rechner an einen
Zielrechner zu senden. Der erste Rechner auf dem Weg nimmt das Paket
entgegen und stellt fest, über welche seiner Punkt-zu-Punkt
Verbindungen er es zum eigentlichen Zielrechner senden kann. Die
folgenden Rechner leiten das Paket ebenfalls weiter, solange bis es
den Zielrechner endlich erreicht.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1995/02/bild2.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 2: Ein Router nimmt ein Paket und leitet es an einen näher am Ziel gelegenen Rechner weiter. Auf diese Weise entstehen indirekte Verbindungen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Um aus einem Netz von Punkt-zu-Punkt Verbindungen also ein echtes Rechnernetz zu machen, muß
man eine Route oder einen Pfad festlegen können, auf dem Informationen
übermittelt werden sollen. Dementsprechend muß man seinen Rechnern
&lt;em&gt;routing&lt;/em&gt; beibringen. In einem gut ausgebauten Rechnernetz kann es
mehr als eine Route geben, auf der man von einem Rechner zu einem
anderen gelangt. Dementsprechend wird ein guter Router nicht einfach
irgendeine Route auswählen, sondern versuchen, eine möglichst schnelle
oder möglichst billige Route zum Ziel zu finden. Routingprotokolle
werden im OSI-Modell in die dritte Schicht eingeordnet, die
dementsprechend &lt;em&gt;network layer&lt;/em&gt; heißt.&lt;/p&gt;
&lt;p&gt;Wenn man routet, kann es nicht nur vorkommen, daß eine Nachricht
über mehr als eine Leitung übertragen werden muß, bis sie am Ziel ist,
sondern es müssen auch Nachrichten von verschiedenen Systemen über
eine Leitung übertragen werden. Die Leitung muß also zwischen
verschiedenen Benutzern aufgeteilt werden. Dies erreicht man durch
&lt;em&gt;Multiplexen&lt;/em&gt; der Verbindung. Dabei werden die verschiedenen
Datenpakete unterschiedlicher Benutzer entweder nacheinander
übertragen (serielles Multiplexen) oder gleichzeitig, aber in
verschiedenen Frequenzbereichen, übermittelt (paralleles Multiplexen).
Außerdem kann es vorkommen, daß Routen zusammenbrechen, weil ein
Rechner auf dem Weg ausgefallen ist oder ein Kabel beschädigt worden
ist. Dadurch werden Routen ungültig und es kommt zu
Übertragungsfehlern, die korrigiert werden müssen. Dies ist die
Aufgabe der vierten OSI-Schicht, der &lt;em&gt;transport layer&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Nach der vierten Ebene des OSI-Protokollturmes hat man ein
Verfahren definiert, daß es zwei beliebigen Programmen über ein
Rechnernetz hinweg erlaubt, einen beliebigen Bytestrom auszutauschen.
Dieser Datenstrom hat noch keine Struktur, so wie eine Datei aus der
Sicht des Betriebssystems zunächst auch nur eine strukturlose
Ansammlung von Bytes ist. In den &lt;em&gt;weiteren Schichten des OSI-Modells&lt;/em&gt;
macht man sich jetzt daran, Protokolle zu definieren, um diesen
Bytestrom zu strukturieren, gemeinsame Repräsentationen von Daten
festzulegen und ähnliche Verfeinerungen zu definieren. Diese
Protokolle sind aber, genau wie Dateiformate für Dateien, abhängig von
der jeweiligen Anwendung.&lt;/p&gt;
&lt;h2 id=&#34;seriell-oder-parallel&#34;&gt;
    &lt;a href=&#34;#seriell-oder-parallel&#34;&gt;
	Seriell oder Parallel?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wir wollen uns deswegen noch einmal den unteren Schichten des
OSI-Modells zuwenden. Bei der &amp;ldquo;selbstgemachten&amp;rdquo; Datenübertragung,
etwa über ein Modem oder ein Laplink-Kabel, hat man es meistens mit
den OSI-Schichten 1 und 2 zu tun. Wir wollen uns diejenigen Verfahren,
die in einem PC-Haushalt am gebräuchlichsten sind, einmal genauer
ansehen.&lt;/p&gt;
&lt;p&gt;Für kurze Strecken von einigen Metern wird man wegen der größeren
möglichen Geschwindigkeiten meistens eine parallele Datenübertragung
wählen. Bei dieser Form der Übertragung hat man ganzes Bündel von
Datenleitungen, etwa 8 Datenleitungen zur parallelen Übertragung eines
Bytes bei der Centronics-Schnittstelle. Auf je einer Leitung wird
dabei eines der 8 Bits eines Bytes signalisiert. Leider sind
elektronische Bauteile nicht immer gleich schnell, sodaß es sein kann,
daß Bit 3 einer Leitung einen winzigen Bruchteil einer Sekunde eher
verfügbar ist, als etwa Bit 6. Deswegen sieht man noch eine neunte
Leitung vor, die als Steuerleitung (&lt;em&gt;Strobe&lt;/em&gt;, &amp;ldquo;Bitte sehr&amp;rdquo;)
fungiert und signalisiert, daß die Inhalte der acht Datenleitungen
gültig sind.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1995/02/bild3.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 3: Signal-Zeitdiagramm an einer Centronics Schnittstelle. Die Datenübertragung erfolgt asychron ohne ein Taktsignal. Die Geschwindigkeit der Übertragung regelt sich durch die Bestätigung eines jeden Zeichens selbst.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Der Empfänger der Daten - bei einer
Centronics-Schnittstelle meistens ein Drucker - liest nach dem Empfang
des Steuersignals die Datenleitungen ab und bestätigt dies mit einem
Impuls (&lt;em&gt;Acknowledge&lt;/em&gt;, &amp;ldquo;Danke schön&amp;rdquo;) an den Sender, sobald er
fertig ist.&lt;/p&gt;
&lt;p&gt;Auf diese Weise regelt sich nicht nur die
Übertragungsgeschwindigkeit zwischen den beiden Partnern ganz
automatisch, sondern man hat auch ohne Mehraufwand ein Verfahren zur
Flußkontrolle bekommen: Wenn der Drucker keine weiteren Daten annehmen
kann, weil sein Puffer voll ist oder er zur Bearbeitung eines Zeichens
längere Zeit benötigt (um etwa das Papier vorzuschieben), kann er das
Bestätigungssignal verzögern und so den Sender auf die von ihm
benötigte Geschwindigkeit herunterbremsen. Weil sich Sender und
Empfänger frei über die Übertragungsgeschwindigkeit einigen (jeder so
schnell er kann), kann man keine allgemeine
Datenübertragungsgeschwindigkeit für eine Centronics-Schnittstelle
angeben. Sie liegt jedoch je nach Drucker- und Rechnermodell in der
Größenordnung von 60 bis 150 KB pro Sekunde. Noch größere
Geschwindigkeiten erlauben die in der Regel recht trägen
Ausgangsbausteine eines PC nicht.&lt;/p&gt;
&lt;p&gt;Parallele Datenübertragung ist relativ aufwendig: Immerhin muß für
jedes Bit, das zu Übertragen ist, eine eigene Leitung verlegt werden.
Das ist bei größeren Entfernungen zu teuer, denn man muß nicht nur
viele Kabel verlegen, sondern diese auch gegeneinander abschirmen,
damit sie sich nicht beeinflussen. Deswegen wird parallele
Datenübertragung nur dort eingesetzt, wo kurze Strecken zu überbrücken
sind: Vom Rechner zum Drucker, von der Festplatte zum Controller, von
der CPU über den Bus zur Peripherie.&lt;/p&gt;
&lt;p&gt;Für längere Strecken verwendet man bitserielle Übertragung. Hier
wird jeweils ein Datenbyte in ein Schieberegister geladen und Bit für
Bit auf einer einzelnen Signalleitung übermittelt. Für eine minimale
Verkabelung braucht man bei einer seriellen Schnittstelle nur drei
Leitungen im Gegensatz zu mindestens elf bei einer parallelen
Schnittstelle: Eine Leitung für die Sendedaten, eine für die
Empfangedaten und eine gemeinsame Masseleitung, damit ein elektrischer
Bezugspegel existiert. Und dabei ist bei einer seriellen Schnittstelle
dann schon Kommunikation in beide Richtungen möglich, während eine
Centronics-Schnittstelle nur als Sender betrieben wird.  Doch dadurch,
daß die einzelnen Bits nacheinander über eine einzelne Leitung
übermittelt werden müssen, ist diese Art der Übertragung langsamer:
Ein PC erreicht eine Höchstgeschwindigkeit von 115200 Bit pro Sekunde,
das sind etwa 11.2 KB/Sekunde.&lt;/p&gt;
&lt;h2 id=&#34;v24&#34;&gt;
    &lt;a href=&#34;#v24&#34;&gt;
	V.24
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1995/02/bild4.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 4: Belegung und Bedeutung der Anschlüsse an einer V.24 Schnittstelle.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Leitungen an einer V.24 Schnittstelle, die die eigentliche
Übertragungsarbeit leisten, sind die Pins 2 (Transmit Data,
Sendedaten) und 3 (Receive Data, Empfangsdaten). Dort wird
mit den Pegeln +12V eine logische Null und -12V eine logische 1
signalisiert. Um Zeichen zu übertragen, müssen sich Sender und
Empfänger darüber einig sein, aus wievielen Bits ein Zeichen besteht,
wie schnell die einzelnen Bits signalisiert werden und an welchem Ende
eines Bytes angefangen wird, zu übertragen. Einige dieser Parameter
sind festgelegt, andere sind in gewissen Grenzen variabel. Wenn Sender
und Empfänger nicht auf genau die gleichen Übertragungsparameter
eingestellt sind, wird die Übertragung nicht gelingen.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1995/02/bild5.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 5: Bitfolge auf einem V.24 Kabel zur Übertragung eines 7 Bit Zeichens mit gerader Parität: Nach dem Startbit folgenden die 7 Datenbits, das niederwertigste Bit zuerst. Das Paritätsbit sorgt dafür, daß die Anzahl der Einsbits im Datenwort gerade ist. Mit dem Stopbit wird das Ende des Datenwortes signalisiert.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Das Verfahren zur Übermittlung von Zeichen ist genau wie die
Steckerbelegung und die verwendeten Spannungen in der V.24-Norm
festgelegt. Wenn kein Zeichen zur Übertragung anliegt, soll die
Schnittstelle auf 1-Pegel liegen. Sobald dann ein Zeichen zu
übertragen ist, wird zunächst durch Übermittlung eines 0-Bits
signalisiert, daß jetzt ein Zeichen zu übertragen ist. Dieses 0-Bit
wird als Startbit bezeichnet. Danach werden die einzelnen Bits eines
Bytes übermittelt, und zwar mit dem niederwertigsten Bit zuerst. Nach
dem Byte wird eventuell noch ein Paritätsbit zur Fehlererkennung
mitgesendet und danach wird die Leitung für eine gewisse Mindestdauer
auf den Ruhepegel logisch 1 gelegt. Diese Pause stellt sicher, daß ein
nachfolgendes Startbit sicher erkannt werden kann und wird als Stopbit
bezeichnet.&lt;/p&gt;
&lt;p&gt;Zur Übermittlung eines einzelnen Bytes sind 8 Datenbits plus ein
Startbit plus ein Stopbit zu übertragen. Bei einer Datenrate von 9600
Bit pro Sekunde werden pro Sekunde also genau 960 Byte transportiert.
Der Benutzer einer seriellen Schnittstelle kann einige Parameter der
Übertragung frei festlegen.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1995/02/bild6.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 6: Nicht alle Parameter einer seriellen Schnittstelle sind konfigurierbar. Einstellbar sind neben der Geschwindigkeit der Übertragung auch die Anzahl der Datenbits pro Datenwort, die Parität und die Anzahl der Stopbits. Übliche Parameterwerte sind 8-N-1 oder 7-E-1.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Als wichtigster Parameter ist
dort die Übertragungsgeschwindigkeit in Bit pro Sekunde zu nennen. Die
Basis bildet eine Datenrate von 300 Bit pro Sekunde. Die anderen
möglichen Übertragungsgeschwindigkeiten ergeben sich dann durch
Verdoppelung: 300, 600, 1200, 2400, 4800, 9600, 19200 und 38400 Bit
pro Sekunde. Noch höhere Datenraten sind in der V.24 Norm zwar nicht
definiert, aber die meisten Programme können außerdem noch mit 57600
und 115200 Bit pro Sekunde senden.&lt;/p&gt;
&lt;p&gt;Ein einzelnes Zeichen besteht heute normalerweise aus 8 Datenbits.
In den Anfangstagen der Datenverarbeitung kam man noch ohne Umlaute
und Sonderzeichen zurecht und nutzte damit nur einen über 7 Bit
definierten ASCII-Zeichensatz aus. Das achte Bit wurde dann nicht zur
Codierung von Daten genutzt, sondern in Form eines Paritätsbits für
eine einfache Fehlerkontrolle verwendet. Die Parität eines Zeichens
berechnet man, indem man die 1-wertigen Bits in der Binärdarstellung
seines Zeichencodes zählt. Ist die Anzahl ungerade, hat das Zeichen
ungerade Parität, ist sie gerade, hat es eine gerade Parität. Bei der
Datenübertragung kann man gerade oder ungerade Parität wählen: Stellt
man gerade Parität ein, wird bei Zeichen mit ungerader Parität das
achte Bit gesetzt, um die Anzahl der 1-Bits im Zeichen wieder auf eine
gerade Anzahl zu bringen.&lt;/p&gt;
&lt;p&gt;Auf diese Weise kann man Übertragungsfehler leicht erkennen: Da
nur Zeichen mit gerader Parität übermittelt werden, muß ein Zeichen
mit ungerader Parität einer Störung zum Opfer gefallen sein. Leider
besteht ohne ein Protokoll zur Fehlerkorrektur keine Möglichkeit,
dieses Zeichen erneut übertragen zu lassen, sodaß man zwar die
Information hat, daß ein Fehler aufgetreten ist, aber keine Chance
hat, diesen zu korrigieren. Da Parität als Fehlerkorrektur also nur
von begrenztem Nutzen ist, verwendet man sie heute normalerweise nicht
mehr, sondern nutzt das achte Bit als normales Datenbit mit. Während
man früher als gelegentlich 7 Datenbits, gerade Parität und ein
Stopbit als Schnittstellenparameter gewählt hat, verwenden heute fast
alle Systeme 8 Datenbits, keine Parität und ein Stopbit.&lt;/p&gt;
&lt;p&gt;Im Gegensatz zum Protokoll einer Centronics-Schnittstelle bekommt
man bei der V.24 Schnittstelle die Datenflußkontrolle nicht als
Abfallprodukt des Übertragungsprotokolls. Stattdessen müssen
ausdrückliche Vereinbarungen zwischen dem Sender und dem Empfänger
getroffen werden. Für die bereits erwähnte Dreidrahtleitung verwendet
man dazu zwei besondere ASCII-Zeichen, die Zeichen Control-S (XOFF,
ASCII 13h) und Control-Q (ASCII 11h, XON). Wenn der Empfänger keine
weiteren Daten mehr aufnehmen kann, sendet er das Zeichen XOFF an den
Sender. Der Sender muß daraufhin die Übertragung einstellen. Sobald
der Empfänger wieder bereit ist, Daten entgegenzunehmen, signalisiert
er dies dem Sender mit dem Zeichen XON.&lt;/p&gt;
&lt;p&gt;Dieses Verfahren ist praktisch, weil es keine weiteren
Steuerleitungen notwendig macht, hat aber den Nachteil, zwei Zeichen
aus dem Zeichensatz zu &amp;ldquo;verbrauchen&amp;rdquo;. Diese Zeichen werden für
Steuerfunktionen verwendet und können nicht mehr direkt übermittelt
werden. Stattdessen müssen sie durch bestimmte Zeichenfolgen anderer
Zeichen &amp;ldquo;umschrieben&amp;rdquo; werden. Eine Leitung, die nicht für alle
ASCII-Zeichen durchlässig ist, nennt man &lt;I&gt;nicht transparent&lt;/I&gt;. Auf
einer nicht transparenten Leitung müssen die Zeichen, die nicht direkt
übermittelt werden können mit Hilfe eines &lt;I&gt;Escape-Mechanismus&lt;/I&gt;
umschrieben werden.&lt;/p&gt;
&lt;p&gt;Eine andere Methode der Flußkontrolle verwendet statt zweier
Zeichen zwei zusätzliche Steuerleitungen an der V.24 Schnittstelle.
Die Leitungen an den Pins 4 (Request to Send, RTS) und 5 (Clear to
Send, CTS) signalisieren für jeweils eine Übertragungsrichtung, ob
gesendet werden darf oder nicht. Solange die zu der jeweiligen
Datenleitung gehörige Steuerleitung 1-Pegel führt, darf gesendet
werden. Sobald der Pegel auf 0 wechselt, muß der Sender seine Arbeit
so lange einstellen, bis der Pegel wieder auf 1 wechselt.
Datenflußkontrolle mit RTS und CTS ist nicht nur transparent, sondern
auch schneller und sicherer als XON/XOFF-Steuerung. Gerade bei höheren
Datenraten sollte man daher dieses Verfahren vorziehen.&lt;/p&gt;
&lt;h2 id=&#34;übertragungsstreß&#34;&gt;
    &lt;a href=&#34;#%c3%bcbertragungsstre%c3%9f&#34;&gt;
	Übertragungsstreß
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Hohe Datenraten sind auch aus einem anderen Grund ein Problem:
Normalerweise wird die serielle Schnittstelle in einem PC von einem
Baustein vom Typ 16450 oder einem seiner Verwandten betreut. Diese
Bausteine lösen für jedes empfangene oder gesendete Zeichen eine
Unterbrechung aus. Wird die Schnittstelle also mit 38400 Bit pro
Sekunde unter Vollast betrieben, erzeugt sie um die 8000
Unterbrechungen pro Sekunde. Das bedeutet: 8000 mal pro Sekunde wird
das gerade laufende Programm unterbrochen, um ein Zeichen für den
Schnittstellenbaustein zu lesen oder ihm das nächste Zeichen zum
Senden zu nennen. Gerade bei Betriebssystemen, die den Prozessor im
erweiterten 386-Modus betreiben, können diese Unterbrechungen sehr
aufwendige Umschaltungen in der Betriebsart des Prozessors notwendig
machen. Das kostet wertvolle Rechenzeit und der Rechner wird unnötig
langsam oder verliert bei der Übertragung sogar einzelne Zeichen.
Schnittstellenbausteine vom Nachfolgetyp 16550AF haben deswegen eine
Warteschlange, die mehrere übertragene Zeichen speichern kann. Solche
Bausteine müssen im Durchschnitt nur noch alle 4 Zeichen vom Prozessor
betreut werden und sind gerade unter
Multitasking-Betriebssystemen für einen sicheren Betrieb der seriellen
Schnittstelle bei hohen Geschwindigkeiten unerlässlich. Der 16550AF ist
pinkompatibel zu seinem Vorgänger 16450 und kann, wenn dieser
gesockelt ist, auch leicht ausgetauscht werden.&lt;/p&gt;
&lt;h2 id=&#34;fehlerkorrektur&#34;&gt;
    &lt;a href=&#34;#fehlerkorrektur&#34;&gt;
	Fehlerkorrektur
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Bei der Übertragung von Dateien und Programmen ist es sehr
wichtig, daß auch bei schlechten Verbindungen alle Daten unverfälscht
und fehlerfrei übermittelt werden. Schon ein einziges falsch gesetztes
Bit in einer Programmdatei kann fatale Folgen haben. Deswegen schützt
man eine Datenübertragung in der Regel mit einem
Übertragungsprotokoll. Es gibt viele dieser Protokolle, von
unterschiedlicher Datensicherheit und Effizienz, aber das Grundprinzip
ist bei allen gleich: Immer wird ein Block von Daten (z.B. 128 oder
1024 Byte am Stück) gefolgt von einer durch den Sender errechneten
Prüfsumme übermittelt. Der Empfänger liest den Datenblock und
errechnet die Prüfsumme nach demselbem Verfahren selbst. Stimmt die
errechnete Prüfsumme mit der empfangenen Prüfsumme überein, ist der
Datenblock korrekt angekommen und wird bestätigt. Andernfalls wird
eine Fehlermeldung an den Sender zurückgegeben, der daraufhin den
Datenblock noch einmal überträgt.&lt;/p&gt;
&lt;p&gt;Das primitivste dieser Protokolle, das im PC-Bereich Anwendung
findet, ist das X-MODEM Protokoll. Es sendet relativ kleine Blöcke von
128 Zeichen und eine einfache Summe der übertragenen Bytes. Summen
sind aber relativ schlechte Indikatoren für Verfälschungen: Sie
registrieren nicht die Einfügung von Nullbytes, sind unempfindlich
gegenüber Vertauschungen von Bytes und können bestimmte Doppelfehler
(eine Erhöhung um Eins an einer Stelle und eine Verminderung um Eins
an anderer Stelle) nicht erkennen. CRC-Prüfziffern (&lt;em&gt;cyclic
redundancy check&lt;/em&gt;) erkennen alle diese und viele andere
Veränderungen an Daten und werden deswegen in der Computertechnik
immer dann eingesetzt, wenn die Integrität eines Datenblockes
gesichert werden muß.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;XMODEM&lt;/em&gt; ist auch aus anderen Gründen ein relativ schlechtes
Protokoll: Es überträgt keine Informationen über die Datei. Weder der
Dateiname noch die Länge, das Datum oder eventuell vorhandene
Dateieigentümer oder Zugriffsrechte werden übermittelt. Außerdem
wartet XMODEM nach jedem gesendeten Block erst auf die Bestätigung der
Gegenseite, bevor der nächste Datenblock verschickt wird. Ein
Datenpaket muß gewissermaßen erst seine Rundreise auf einer Leitung
beendet haben, bevor das nächste Datenpaket verschickt werden kann.
Man kann sich eine Datenleitung vorstellen, wie einen Gartenschlauch:
Nachdem man das Ventil aufgedreht hat, muß der Schlauch erst
vollaufen, bevor am Ende des Schlauches Wasser austritt. XMODEM
versendet die Daten jetzt nicht als Strom, sondern schickt sie
gewissermaßen schluckweise durch die Leitung. Auf diese Weise wird
möglicherweise ein Großteil der Übertragungskapazität der Leitung
verschenkt.&lt;/p&gt;
&lt;p&gt;ZMODEM hat diese Probleme nicht: Nicht nur, daß es Dateinamen,
Länge und andere Informationen mit überträgt. Es ist auch in der Lage,
weitere Datenblöcke zu versenden, bevor die Bestätigungen für
vorhergehende Pakete eingegangen sind.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1995/02/bild7.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 7: Der Sender kann dem Empfänger vorauseilen. Er sendet Daten,
deren Empfang der Empfänger noch nicht bestätigt hat. Das bedeutet, für
solche unbestätigten Daten muß der Sender damit rechnen, daß sie nicht
ordnungsgemäß beim Empfänger angekommen sind und noch einmal gesendet werden
müssen. Daten, die bereits als fehlerfrei bestätigt sind, kann der Sender
als erledigt betrachten.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Die Frage ist: Wie groß darf soll der Sender das Transferfenster werden
lassen? Läßt er es zu klein, kann es sein, daß er auf die Bestätigungen des
Empfängers warten muß, bevor er weiter senden darf. Läßt der Sender das
Transferfenster zu groß werden, muß er sehr viel Speicher für Puffer
bereitstellen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In diesem Fall
entsteht ein Bereich von Datenpaketen, die der Sender zwar schon
abgeschickt hat, für die er aber noch keine positiven
Empfangsbestätigungen gesehen hat. Diese Lücke nennt man das
&lt;em&gt;Transferfenster&lt;/em&gt; eines Übertragungsprotokolls. Ein gutes
Übertragungsprotokoll wird das Transferfenster gerade so groß halten,
wie die Kapazität der Leitung es erfordert. Bei einem Wasserschlauch
würde man die Kapazität in Litern als Querschnitt mal Länge berechnen.
Bei einer Datenleitung entspricht der Querschnitt der Datenrate in Bit
pro Sekunde und die Länge der Umlaufzeit der Datenpakete in Sekunden.
Das Resultat gibt die Anzahl der Bits an, die auf der Leitung
unterwegs sind und stellt eine minimale Größe für das Transferfenster
dar, wenn der Sender nicht auf den Empfänger warten soll.&lt;/p&gt;
&lt;h2 id=&#34;modulation&#34;&gt;
    &lt;a href=&#34;#modulation&#34;&gt;
	Modulation
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Während bei der Datenübertragung über ein einfaches Kabel keine
besondere Codierung der Daten notwendig war, ist dies bei der
Datenfernübertragung nicht mehr möglich. Eine Telefonleitung ist kein
durchgehendes Kabel, sondern vielfach durch Filter, Verstärker und
andere elektrische Dinge unterbrochen. Sie ist für Gleichspannungen
nicht durchlässig, sondern kann nur Wechselspannungen, elektrisch
codierte Töne nämlich, übertragen. Bevor man Daten also über eine
Telefonleitung übertragen kann, muß man sie in hörbare Töne umwandeln.
Diese Umwandlung wird von einem &lt;em&gt;Modem&lt;/em&gt; vorgenommen. Der Name ist
ein Kunstwort aus den Begriffen Modulator und Demodulator und
beschreibt in etwa die Funktionsweise des Gerätes: Ein gleichmäßiger
Ton, der Datenträgerton, wird abhängig von den zu übertragenden Daten
verändert.&lt;/p&gt;
&lt;p&gt;Im einfachsten Fall ordnet man dabei einem Eins-Bit einen Ton und
einem Null-Bit einen anderen Ton zu. Auf diese Weise beeinflußt man
jedoch nur einen einzigen Parameter einer Schwingung, nämlich die
Tonhöhe, die Frequenz.  Außerdem überträgt man so nur ein Bit zur
Zeit.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1995/02/bild8.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 8: Das Diagramm zeigt Phasenwinkel und Amplitudenwerte eines
Signals. Der Sender steuert zur Signalisierung eines von 16 Zuständen Phase
und Amplitude seines Signals so, daß er einen der markierten Punkte trifft.
Auf diese Weise können in einem Zustand 4 Bit signalisiert werden.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Durch Störungen der Übertragung kommt beim Empfänger nicht genau das Signal
an, das der Sender auf das Kabel schickt. Stattdessen wird der angesteuerte
Punkt nur in der Nähe der markierten Punkte liegen und zwar um so weiter
von den Punkten entfernt, je stärker das Signal gestört wird. Auf schlechten
Leitungen verschwimmen die Punkte also stärker als auf guten Leitungen. Wenn
die Störungen so groß werden, daß die Punkte ineinander verschwimmen, ist
die Leitungsqualität so schlecht, daß keine Datenübertragung mehr möglich
ist.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wenn man gleichzeitig mehrere Parameter einer Schwingung
verändert, kann hat man mehr als zwei verschiedene Zustände und kann
so mehrere Bits zur Zeit übertragen. Das Bild zeigt ein Verfahren, bei
dem Phase und Amplitude eines Signales jeweils einen von vier
Zuständen annehmen können. Auf diese Weise ist es möglich, sechzehn
verschiedene Zustände zu codieren und vier Bit parallel zu
übermitteln. Die Geschwindigkeit, mit der ein Modem von einem
Signalzustand zum nächsten wechselt, nennt man die Baudrate. Eine
Geschwindigkeit von einem Baud entspricht einem Zustandswechsel pro
Sekunde. Die Bitrate eines Modems ist gewöhnlich ein Vielfaches seiner
Baudrate.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Bezeichnung Geschwindigkeit
            in Bit/s  in Baud	Modulation  duplex  Verwendung
V.17	    14400	2400	TCM	    halb	FAX
	    12000
            9600
            7200	2400 	TCM	    halb	FAX
	    4800	2400	QAM	    halb	FAX
V.21	    300		300	FSK	    voll
V.22	    1200	600	DPSK	    voll
V.22bis	    2400	600	QAM	    voll
V.23	    1200/75	1200/75	FSK	    asymm.	BTX
V.27ter	    4800	1600	DPSK	    halb	FAX
	    2400	1200	DPSK	    halb	FAX
V.29	    9600	2400	QAM	    halb	FAX
	    7200	2400	QAM	    halb	FAX
V.32	    9600	2400	TCM/QAM	    voll
	    4800	2400	QAM	    voll
V.32bis	    14400 	2400	TCM	    voll
	    12000
	    9600
	    7200	2400	TCM	    voll
	    4800	2400	QAM	    voll

Abkürzungen:
FSK	Frequency Shift Keying
DPSK	Differential Phase Shift Keying
QAM	Quadrature Amplitude Modulation
TCM	Trellis Coded Modulation
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Bild 9: CCITT-Normen, Datenraten, Baudraten und Modulationsverfahren von Modems im Überblick.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Es gibt verschiedene CCITT-Normen, die unterschiedlich schneller
Übertragungsverfahren für Modems normen. Während die
meisten Modem-Normen gleichzeitiges Senden und Empfangen von Daten
vorsehen, sehen die CCITT-Normen für FAX-Geräte keine Datenübertragung
im zwei Richtungen vor. Grundsätzlich unterscheidet man drei Fälle:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ist die Übertragung &lt;em&gt;simplex&lt;/em&gt;, wird die Datenrichtung der Übertragung niemals umgeschaltet:
Der Sender hat nur einen Modulator, der Empfänger nur einen Demodulator.&lt;/li&gt;
&lt;li&gt;Bei einer Übertragung in &lt;em&gt;halbduplex&lt;/em&gt; sendet immer nur einer der beteiligten Partner.
Wenn er &amp;ldquo;ausgeredet&amp;rdquo; hat, wechselt die Übertragungsrichtung und der jeweils andere Partner kommt an die Reihe.
FAX-Geräte übertragen ihre Informationen auf diese Weise.&lt;/li&gt;
&lt;li&gt;Die meisten Modemnormen sehen eine &lt;em&gt;vollduplex&lt;/em&gt;-Übertragung vor.
Hier können beide Partner gleichzeitig senden und empfangen.
Damit sich die Signale der beiden Modems leicht getrennt werden, sendet der angerufene Partner bei den Normen V.21, V.22 und V.23 auf einer anderen Frequenz als der Anrufer (&lt;em&gt;answer mode/originate  mode&lt;/em&gt;).
Die unterschiedlichen Signale der beiden Modems lassen sich mit einem einfachen Filter voneinander trennen.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Die Normen V.32 und höher sehen vor, daß Anrufer und Angerufener
beide auf denselben Frequenzen senden, sich also quasi &amp;ldquo;anschreien&amp;rdquo;.
Auf der Leitung vermischen sich beide Signale zu einem nicht
entzifferbaren Datensignal. Da jedoch jedes der beiden Modems weiß,
welche Töne es gesendet hat, kann es diese Daten von den empfangenen
Signalen abziehen und erhält als Differenzsignal die Informationen der
Gegenseite. Dieses als &lt;em&gt;echo cancellation&lt;/em&gt;  bezeichnete Verfahren
setzt jedoch einen aufwendigen Signalprozessor voraus, der die
entsprechenden Berechnungen auf dem Eingangssignal vornimmt. Da die
entsprechenden Prozessoren lange Zeit sehr teuer waren, waren die
entsprechenden Modems gut doppelt so teuer wie ihre kleineren Brüder
ohne Signalprozessor. Heute existieren für V.32 und V.32bis fertige
Chipsätze mit integrierten Faxoptionen, die in großen Stückzahlen
produziert werden. Entsprechend gibt es Modems für diese
Übertragungsnormen zu relativ günstigen Preisen, obwohl das
Modulationsverfahren sehr aufwendig und rechenintensiv ist.&lt;/p&gt;
&lt;p&gt;Für das neue V.34-Verfahren sind solche Chipsätze noch nicht
verfügbar, sodaß diese Modems zur Zeit noch unverhältnismäßig teuer
sind.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Norm	Zweck
V.24	Bedeutung der Signale an einer seriellen 
	Schnittstelle.
V.28	Elektrische Pegel an einer solchen Schnittstelle.
	(V.24, V.28 und ISO 2110 sind zusammen äquivlaent 
	zu EIA RS232.)
V.42	Verfahren zur Sicherung der übertragenen Daten. Im 
	wesentlichen nicht von dem unterliegenden 
	Modulationsverfahren abhängig. Verwendet ein eigenes 
	Protokoll namens LAPM, zwecks Kompatibilität ist ein
	Rückfall auf MNP 2-4 möglich.
V.42bis	Verfahren zur transparenten Kompression von Daten
	während der Übertragung, manchmal auch BTLZ genannt.
	Effizienter als, aber inkompatibel zu MNP5.
	Alle existierenden V.42bis-Modems beherrschen MNP5
	zusätzlich.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Bild 10: Weitere häufig verwendete CCITT-Normen im Zusammenhang mit Modems.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UNIX Dateisysteme</title>
      <link>https://blog.koehntopp.info/1994/02/01/dateisysteme.html</link>
      <pubDate>Tue, 01 Feb 1994 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1994/02/01/dateisysteme.html</guid>
      <description>&lt;h1 id=&#34;unix-dateisysteme&#34;&gt;
    &lt;a href=&#34;#unix-dateisysteme&#34;&gt;
	UNIX Dateisysteme
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;aus »c&amp;rsquo;t - Magazin für Computertechnik«, Ausgabe 2/94&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;die-aufgaben-eines-betriebssystems-bestehen-in-der-fairen-zuteilung-der-systemressourcen-an-alle-bewerber-und-in-der-abstraktion-unterschiedlichster-hardware-zu-einer-virtuellen-maschine-für-den-bereich-der-plattenplatzverwaltung-hat-diese-aufgabe-das-dateisystem-unix-dateisysteme-haben-eine-mehr-als-zwanzigjähirge-entwicklung-hinter-sich-und-dienten-als-vorbild-für-die-dateisysteme-vieler-anderer-betriebssysteme-1-trotz-vieler-mängel-der-ursprünglichen-implementation-haben-sich-die-dahinter-stehenden-ideen-in-den-letzten-zwanzig-jahren-nicht-wesentlich-verändert&#34;&gt;
    &lt;a href=&#34;#die-aufgaben-eines-betriebssystems-bestehen-in-der-fairen-zuteilung-der-systemressourcen-an-alle-bewerber-und-in-der-abstraktion-unterschiedlichster-hardware-zu-einer-virtuellen-maschine-f%c3%bcr-den-bereich-der-plattenplatzverwaltung-hat-diese-aufgabe-das-dateisystem-unix-dateisysteme-haben-eine-mehr-als-zwanzigj%c3%a4hirge-entwicklung-hinter-sich-und-dienten-als-vorbild-f%c3%bcr-die-dateisysteme-vieler-anderer-betriebssysteme-1-trotz-vieler-m%c3%a4ngel-der-urspr%c3%bcnglichen-implementation-haben-sich-die-dahinter-stehenden-ideen-in-den-letzten-zwanzig-jahren-nicht-wesentlich-ver%c3%a4ndert&#34;&gt;
	Die Aufgaben eines Betriebssystems bestehen in der fairen Zuteilung der Systemressourcen an alle Bewerber und in der Abstraktion unterschiedlichster Hardware zu einer virtuellen Maschine. Für den Bereich der Plattenplatzverwaltung hat diese Aufgabe das Dateisystem. UNIX Dateisysteme haben eine mehr als zwanzigjähirge Entwicklung hinter sich und dienten als Vorbild für die Dateisysteme vieler anderer Betriebssysteme [1]. Trotz vieler Mängel der ursprünglichen Implementation haben sich die dahinter stehenden Ideen in den letzten zwanzig Jahren nicht wesentlich verändert.
    &lt;/a&gt;
&lt;/h4&gt;
&lt;h2 id=&#34;daten-wiederfinden&#34;&gt;
    &lt;a href=&#34;#daten-wiederfinden&#34;&gt;
	Daten wiederfinden
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;UNIX schlägt sich auf den höheren Ebenen des Betriebssystems nicht  mit Angaben zur Plattengeometrie herum.
Es betrachtet eine Festplatte als ein langes Band von Plattenblöcken, die linear durchnummeriert sind.
Die Umrechnung von linearen Blockadressen in Angaben von Zylinder, Kopf und Sektor ist entweder Aufgabe eines Festplattengerätetreibers oder - im Fall von SCSI - der Festplatte selbst.
Die ersten paar Datenblöcke einer Festplatte sind reserviert für den Bootloader und ähnliche Dinge, die vor dem Betriebssystem geladen werden und deshalb außerhalb seiner Reichweite gelagert werden.
Der Rest der Platte  wird in Form eines Dateisystems verwaltet.
UNIX operiert bei Dateisystemen mit der Blockgröße des Mediums.
Anders als bei DOS werden die Verwaltungseinheiten auf einer Platte also nicht größer, wenn man sehr große Partitionen anlegt.&lt;/p&gt;
&lt;p&gt;Den Anfang eines Dateisystems bildet der sogenannte Superblock, der das Dateisystem selbst beschreibt.
Er enthält Geometriedaten der Platte, gibt an, wie viele Blöcke das Dateisystem enthält und welche davon Verwaltungsinformationen und welche Daten enthalten.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1994/02/disklayout.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 1: Am Anfang des Dateisystems steht der Superblock. Er enthält alle Metainformationen, die das Dateisystem beschreiben. Der &amp;ldquo;vordere&amp;rdquo; Teil des Dateisystems enthält I-Nodes, Dateiköpfe, die alle Metainformationenen über eine Datei speichern. In den Datenblöcken sind dann die eigentlichen Nutzdaten untergebracht. Das Bild zeigt eine I-Node mit ihren Verweisen auf die Datenblöcke der Datei.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Basis der Dateiverwaltung bildet in UNIX eine Datenstruktur, die sogenannte &lt;em&gt;index node&lt;/em&gt; oder I-Node (Bild 2).&lt;/p&gt;
&lt;p&gt;In ihr sind - mit einer Ausnahme, dem Dateinamen - alle wesentlichen Informationen über eine Datei gesammelt.
Für jede Datei, jedes Verzeichnis und jedes Gerät legt UNIX eine I-Node an, in der es alles vermerkt, was es über dieses Datenobjekt weiß.
Dazu gehören zum einen Informationen über Zugriffsrechte, Dateieigentümer und Zeitmarken, zum anderen Verweise auf die Datenblöcke, die die Daten der Datei enthalten.
Ursprünglich hat UNIX die I-Nodes eines Dateisystems in Form einer Tabelle zusammengefasst und am Anfang des Dateisystems untergebracht.&lt;/p&gt;
&lt;p&gt;Die Größe dieser Tabelle muss schon beim Anlegen des Dateisystems festgelegt werden, d.h. ein Systemverwalter auf einem UNIX-Rechner muss beim Formatieren einer Platte festlegen, wie viele Dateien später einmal maximal auf dieser Platte angelegt werden können.
Üblicherweise berechnet man mindestens eine I-Node für jeweils 4 KB zur Verfügung stehenden Plattenplatz, sodass auf einer 200 MB Festplatte in etwa 50 000 I-Nodes angelegt werden.
Zum Glück sind I-Nodes relativ kleine Datenstrukturen von nur 128 Bytes.
Im Schnitt verschwinden also auf diese Weise 3 % des gesamten Plattenplatzes in Verwaltungsinformationen.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;struct  dinode
{
/*	Typ     Feldname          Byte-Offset: Beschreibung */
	u_short ino_mode;        /*  0: Dateityp und Zugriffsrechte */
	short   ino_nlink;       /*  2: Anzahl der Namen der Datei  */
        uid_t   ino_uid;         /*  4: Benutzernummer Dateieigentümer */
	gid_t   ino_gid;         /*  6: Gruppennummer Dateieigentümer */
	off_t   ino_size;        /*  8: Größe in Bytes */
	time_t  ino_atime;       /* 16: Zeit des letzten Lesezugriffs */
	long    ino_atspare;     /*     in Sekunden seit 1.1.1970, 0 Uhr */
	time_t  ino_mtime;       /* 24: Zeit des letzten Schreibzugriffs */
	long    ino_mtspare;
	time_t  ino_ctime;       /* 32: Zeit der letzten Statusänderung */
	long    ino_ctspare;
        daddr_t ino_db[NDADDR];  /* 40: Blocknummern der ersten 12 Datenblöcke */
        daddr_t ino_ib[NIADDR];  /* 88: Blocknummern der 3 indirekten Datenblöcke */
        long    ino_blocks;      /* 100: Größe der Datei in Blöcken */
        long    ino_gen;         /* 104: Generationsnummer (NFS) */
};
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Bild 2: Aufbau einer I-Node eines modernen UNIX-Dateisystems. Die Datenstruktur paßt in ein Feld von 128 Bytes, sodas ein Hardware-Plattenblock 8 I-Nodes halten kann. Sie enthält alle Metainformationen über eine Datei mit Ausnahme der Namen der Datei.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Untersucht man die durchschnittliche Länge von Dateien in einem Dateisystem, dann stellt man fest, das kurze Dateien relativ häufig auftreten.
Daher versucht UNIX, die Blocknummern der ersten paar Plattenblöcke einer Datei direkt in der I-Node zu speichern.
In der I-Node aus Bild 2 werden die ersten 12 Datenblöcke einer Datei im Feld &lt;code&gt;ino_db[]&lt;/code&gt; abgelegt.
Wenn über ihre I-Nodenummer auf diese Datei zugegriffen wird, stehen die 12 direkten Datenblöcke der Datei also ohne weitere Leseoperation zur Verfügung.&lt;/p&gt;
&lt;p&gt;Für große Dateien ist dieses Verfahren natürlich nicht praktikabel, denn die I-Node würde dann sehr groß werden.
Wächst eine Datei über die Größe von 12 Datenblöcken hinaus, besorgt UNIX einen freien Datenblock und trägt diesen als ersten indirekten Datenblock einer Datei ein.
In diesem indirekten Datenblock werden jetzt die Blocknummern der weiteren Datenblöcke einer Datei abgelegt.
Bei einer angenommenen Blockgröße von einem Kilobyte können in einem indirekten Block 256 Blocknummern gespeichert werden, von denen jede einen Datenblock von einem Kilobyte adressiert.
Zusammen mit den direkten Datenblöcken können also Dateien bis zu einer Größe von 266 KB angelegt werden, ohne daß mehr als eine Ebene der Indirektion durchlaufen werden muss.
Modernere Dateisysteme, die mit einer Blockgröße von 8 Kilobyte arbeiten, bringen 2048 Blocknummern in einem Block unter und können so bis zu 16 Megabyte große Dateien mit einem einzigen indirekten Block verwalten.&lt;/p&gt;
&lt;p&gt;Für noch größere Dateien sieht UNIX doppelt indirekte Blöcke vor, die die Blocknummern von einfach indirekten Blöcken enthalten.
Diese wiederum zeigen dann endlich auf die Daten.
Bei einer Blockgröße von 8 KB kann man mit diesem Schema schon mehr als die vier Gigabyte verwalten, die sich im Größenfeld &lt;code&gt;ino_size&lt;/code&gt; einer I-Node verwalten lassen.
Bei Dateisystemen mit einer Blockgröße von einem Kilobyte muss dagegen ab einer Dateigröße von 64 MB von einem dreifach indirekten Block Gebrauch gemacht werden (Bild 3).
Zum Glück sind zum Laden eines solchen Datenblockes aber keine vier Plattenzugriffe notwendig, denn alle UNIX-Versionen haben einen Plattencache, der häufig benötigte Daten im RAM präsent hält.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1994/02/filestructure.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 3: Von der I-Node zu den Datenblöcken einer Datei&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Bei der Belegung von Plattenblöcken für eine Datei ist UNIX sehr effizient.
Nur diejenigen Blöcke einer Datei, die schon einmal beschrieben wurden, belegen auch wirklich Platz auf der Platte.
Wird beispielsweise begonnen, einen doppelt indirekten Block zu verwenden, so wird für diesen zunächst der erste einfach indirekte Block beschafft und belegt.
Die Blocknummern der anderen indirekten Blöcke werden dagegen einfach auf Null gesetzt.&lt;/p&gt;
&lt;p&gt;Das führt zu interessanten Effekten bei Dateien, die nicht durchgehend beschrieben werden:
Legt man unter UNIX eine neue Datei an und bewegt dann den Dateizeiger irgendwo in die oberen Megabytes, um dort ein einziges Byte zu beschreiben, dann wird nur der eine Datenblock belegt, der notwendig ist, um dieses Byte zu speichern (plus der möglicherweise notwendigen indirekten Blöcke, die notwendig sind, um den Block zu erreichen).
Die Blocknummer aller anderen nicht verwendeten Blöcke bleiben auf Null stehen und es werden auch keine Datenblöcke zwischen dem gespeicherten Byte und dem Dateianfang angefordert.
Es entsteht eine Datei, die in der Verzeichnisausgabe viele Megabytes groß erscheint, in Wirklichkeit aber nur wenige Kilobytes belegt.
Eine solche Datei nennt man in UNIX eine dünn besetzte Datei (sparse file).
Beim Lesen einer solchen Datei werden für die nicht vorhandenen Blöcke entsprechend viele Nullbytes zurückgemeldet.&lt;/p&gt;
&lt;p&gt;Das kann beim Kopieren oder Sichern solcher Dateien natürlich zu seltsamen Effekten führen, wenn man nicht aufpasst:
Beim naiven Kopieren wird eine Datei von vorne nach hinten durchgelesen und die gelesenen Daten werden in die Zieldatei geschrieben.
Während eine dünn besetzte Quelldatei also möglicherweise nur wenige Blöcke wirklich belegt, wird die Zieldatei von vorne nach hinten beschrieben und belegt dann wirklich so viel Platz, wie im Verzeichnis angegeben.
Dateien, die ein Abbild eines häufig ebenfalls dünn besetzten Prozessadressraumes darstellen, sind oft sparse files:
Die shared libraries in einem Linux-System oder Speicherabzüge von gecrashten Programmen unter SunOS sollten tunlichst nicht naiv kopiert werden.&lt;/p&gt;
&lt;h2 id=&#34;dateinamen&#34;&gt;
    &lt;a href=&#34;#dateinamen&#34;&gt;
	Dateinamen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die I-Node enthält gesammelt alle Informationen, die UNIX über eine  Datei hat, mit einer Ausnahme: dem Dateinamen.
Dateinamen speichert UNIX in besonderen Dateien, den Verzeichnissen.
Ein Verzeichnis ist n jeder Hinsicht eine normale Datei mit einer I-Node, Datenblöcken und so weiter.
Verzeichnisdateien werden jedoch nicht von Benutzerprogrammen, sondern ausschließlich vom Betriebssystem verwaltet.
Es unterhält in einem Verzeichnis eine feste Satzstruktur.&lt;/p&gt;
&lt;p&gt;Beim älteren UNIX-Dateisystem ist diese sehr einfach aufgebaut:
Ein Verzeichnis besteht aus Datensätzen zu 16 Byte Länge.
Die ersten 2 Byte enthalten die I-Nodenummer einer Datei, die folgenden 14 Byte nehmen einen Dateinamen auf.
Falls ein Dateiname kürzer als 14 Zeichen ist, wird er einfach mit Nullbytes aufgefüllt.
Bei moderneren UNIX-Systemen ist die Verzeichnisstruktur etwas komplizierter, um 4 Byte lange I-Nodenummern und bis zu 255 Byte lange Dateinamen ohne große Platzverschwendung verwalten zu können, aber im Prinzip handelt es sich immer noch um eine einfache Zuordnung von Name zu I-Nodenummer.&lt;/p&gt;
&lt;p&gt;Es ist in UNIX ohne weiteres möglich, mehr als einen Dateinamen für eine Datei zu vergeben.
Dazu wird einfach mit der Systemfunktion link() in einem weiteren Verzeichnis ein Namenseintrag gemacht, der dieselbe I-Nodenummer hat wie der erste Name der Datei.
Im Feld &lt;code&gt;ino_nlink&lt;/code&gt; einer I-Node wird die Anzahl der Namen einer Datei gezählt.
Beide Namen einer Datei sind gleichberechtigt und nicht voneinander zu unterscheiden:
Man kann nicht sagen, welcher von zwei Namen einer Datei der erste und welcher der zweite Name der Datei war.
Anstatt eine Datei zu löschen, kann man in UNIX nur die Anzahl ihrer Namen um Eins vermindern.
Sobald die Anzahl der Namen einer Datei Null wird, gibt das Betriebssystem dem Plattenplatz frei, der zu einer Datei gehört.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1994/02/verzeichnis.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Bild 4: Das alte System V UNIX Dateisystem behandelt Verzeichnisse als gewöhnliche Dateien mit einer festen Satzstruktur von 16 Byte. Die ersten beiden Byte enthalten die I-Node Nummer einer Datei, die folgenden 14 Bytes stellen den Namen der Datei (mit Nullbytes aufgefüllt) dar.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Im BSD Dateisystem sind längere Dateinamen erlaubt. Um die Platzverschwendung zu minimieren, ist die Struktur eines Verzeichnisses etwas komplizierter, aber das Prinzip der Zuordnung eines Namens zu einer
I-Nodenummer wird nicht verletzt.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Um eine Datei zu öffnen, muß ihr Name in eine I-Nodenummer übersetzt werden.
Nach dem Öffnen der Datei arbeitet das Betriebssystem dann intern ausschließlich mit der I-Nodenummer weiter.
Die Übersetzung von Namen in Nodenummern wird in UNIX an einer zentralen Stelle im Betriebssystemkern abgehandelt, in der Kern-internen Funktion &lt;code&gt;namei()&lt;/code&gt;.
Für jeden Prozess verwaltet UNIX in der Prozessstruktur zwei Einträge, in denen die I-Nodenummer des Hauptverzeichnisses und des aktuellen Verzeichnisses dieses Prozesses hinterlegt sind.
Wenn dem Betriebssystem in einem Systemaufruf ein Pfadname übermittelt wird, wird zunächst geprüft, ob es sich um einen absoluten oder relativen Pfadnamen handelt.
Je nachdem, ob der Pfadname mit einem führenden &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; beginnt, wird entweder im Hauptverzeichnis oder im aktuellen Verzeichnis des Prozesses begonnen, den Pfadnamen aufzulösen.
&lt;code&gt;namei()&lt;/code&gt; isoliert dazu die erste Komponente des Pfadnamens und sucht diese im Startverzeichnis der Suche.
Sobald der gesuchte Namenseintrag dort gefunden ist, kann die zugehörige I-Nodenummer abgelesen werden und das nächste Stück des Pfadnamens aufgelöst werden.&lt;/p&gt;
&lt;p&gt;In Bild 5 ist zu sehen, was bei der Auflösung eines Pfadnamens wie &amp;ldquo;&lt;code&gt;/bin/ls&lt;/code&gt;&amp;rdquo; passiert:
Weil der Pfadname mit einem &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; beginnt, durchsucht &lt;code&gt;namei()&lt;/code&gt; das Hauptverzeichnis des Prozesses, der den Systemaufruf getätigt hat, nach einem Eintrag für &amp;ldquo;&lt;code&gt;bin&lt;/code&gt;&amp;rdquo;.
Sobald die I-Nodenummer für das &amp;ldquo;&lt;code&gt;bin&lt;/code&gt;&amp;quot;-Verzeichnis gefunden ist, kann es nach einem Eintrag für &amp;ldquo;&lt;code&gt;ls&lt;/code&gt;&amp;rdquo; durchsucht werden.
Erst wenn die I-Nodenummer von &amp;ldquo;&lt;code&gt;ls&lt;/code&gt;&amp;rdquo; bekannt ist, kann die Datei geöffnet oder geladen werden.
Bei der Auflösung von Pfadnamen ergibt sich also eine wechselseitige Verkettung von Datenblöcken und I-Nodes: I-Nodes enthalten Zeiger auf Datenblöcke und die Datenblöcke eines Verzeichnisses enthalten Zeiger auf I-Nodes.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1994/02/nameiresolver.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 5: Zugriffe beim Auflösen eines Pfadnamens&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;zugriffsrechte&#34;&gt;
    &lt;a href=&#34;#zugriffsrechte&#34;&gt;
	Zugriffsrechte
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In der I-Node existiert ein Feld &lt;code&gt;ino_mode&lt;/code&gt;.
Es enthält neben anderen Informationen 9 Bits, die die Zugriffsrechte auf die Datei festlegen.
UNIX unterscheidet an jedem Objekt im Dateisystem 3 Rechte: r-Recht bestimmt, ob eine Datei zu Lesen geöffnet werden darf, w-Recht bestimmt, ob eine Datei beschrieben werden darf und x-Recht bestimmt, ob eine Datei ausgeführt werden kann.
Diese Rechte rwx sind jeweils einmal für den Eigentümer der Datei, für Angehörige seiner Benutzergruppe und für den Rest der Welt vorhanden, sodass sich insgesamt 9 Rechte-Bits ergeben.&lt;/p&gt;
&lt;p&gt;Da Verzeichnisse auch Dateien sind, haben auch sie diese Zugriffsrechte.
In Zusammenhang mit Verzeichnissen werden sie jedoch etwas anders interpretiert: r-Recht an einem Verzeichnis erlaubt einem Benutzer, die Namensliste eines Verzeichnisses zu lesen.
w-Recht an einem Verzeichnis gestattet es ihm, Dateien anzulegen oder zu löschen.
x-Recht schließlich ist notwendig, um auf die Dateien in einem Verzeichnis zuzugreifen. In Bild 5 ist zu sehen, an welchen Stellen welche Zugriffsrechte geprüft werden, wenn die Datei &amp;ldquo;&lt;code&gt;/bin/ls&lt;/code&gt;&amp;rdquo; zum Lesen geöffnet werden soll:
Zunächst einmal muss am Hauptverzeichnis x-Recht vorhanden sein, damit auf die Datei &amp;ldquo;&lt;code&gt;bin&lt;/code&gt;&amp;rdquo; zugegriffen werden kann, die im Hauptverzeichnis enthalten ist.
Danach wird auf ein x-Recht am &amp;ldquo;&lt;code&gt;bin&lt;/code&gt;&amp;quot;-Verzeichnis geprüft, um auf die Datei &amp;ldquo;&lt;code&gt;ls&lt;/code&gt;&amp;rdquo; zugreifen zu können.
Und schließlich muss an der Datei &amp;ldquo;&lt;code&gt;ls&lt;/code&gt;&amp;rdquo; selbst noch r-Recht vorhanden sein, damit auf die Datenblöcke der Datei lesen zugegriffen werden darf.&lt;/p&gt;
&lt;p&gt;x-Recht an einem Verzeichnis ist also immer dann erforderlich, wenn &lt;code&gt;namei()&lt;/code&gt; einem Zeiger aus diesem Verzeichnis in die I-Nodetabelle folgen muss.
In Bild 5 sind diese aufwärts führenden Pfeile etwas  dicker hervorgehoben.&lt;/p&gt;
&lt;h2 id=&#34;fragmente&#34;&gt;
    &lt;a href=&#34;#fragmente&#34;&gt;
	Fragmente
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Dateisysteme verwalten den Plattenplatz in Form von Blöcken fester Größe.
Deswegen ist am Ende der meisten Dateien ein Block vorhanden, der nicht ganz ausgenutzt werden kann, denn bei den meisten Dateien ist die Dateilänge nicht genau ein Vielfaches der Blockgröße des Dateisystems.
So geht, abhängig von der mittleren Dateigröße und der Blockgröße des Dateisystems ein mehr oder weniger großer Anteil des Plattenplatzes verloren.
Je kleiner die Verwaltungseinheiten des Dateisystems sind, umso effektiver kann es seinen Platz verwalten.
Andererseits ist der Datendurchsatz eines Dateisystems um so größer, je größer die Blöcke sind, die es verwaltet.
Und schließlich kann man bei der Verwendung von großen Datenblöcken oft mehrfach indirekte Blöcke einsparen und macht das Dateisystem auf diese Weise schneller und reduziert den Verwaltungsaufwand.
In modernen UNIX-Dateisystem löst man dieses Dilemma, indem man ein Dateisystem mit einer relativ großen Blockgröße (meistens 8 Kilobyte) anlegt, Dateienden aber in speziellen Blöcken, den Fragmenten, speichert.
Fragmente werden erzeugt, in dem man einen normalen Plattenblock in mehrere gleichgrosse Teilblöcke unterteilt, die jeweils das Dateiende einer anderen Datei aufnehmen können.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1994/02/bsdfragment.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 6: Zwei Dateienden in einem fragmentierten Block&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Auf diese Weise werden die Dateienden verschiedener Dateien praktisch in einem Block zusammen komprimiert und der Verlust an Plattenplatz durch nicht ausgenutzte Blöcke wird reduziert.
Trotzdem kann das Dateisystem die meiste Zeit mit vollständigen, großen Blöcken arbeiten und so hohe Geschwindigkeiten erreichen.
Der Nachteil dieses Systems ist, daß ein Dateiende unter Umständen mehrfach umkopiert werden muss, wenn eine Datei wächst:
Zunächst passt das Dateiende noch in sein Fragment hinein, wenn es wächst, muss jedoch ein größeres Fragment gesucht werden, das jedoch durch weitere Schreiboperationen sofort wieder überläuft, bis die Datei endlich den nächsten vollständigen Block füllt.
Solche Kopieroperationen lassen sich vermeiden, wenn Anwendungsprogramme ihre Schreiboperationen der Blockgröße des Dateisystems anpassen.
Da so etwas sehr unbequem ist, wenn man es selber programmieren muss, nimmt die C-Standardbibliothek in einem UNIX-System einem diese Arbeit ab:
Sie fragt die Blockgröße des unterliegenden Dateisystems ab und stimmt ihre Schreibzugriffe so ab, daß mit maximaler Geschwindigkeit geschrieben werden kann.&lt;/p&gt;
&lt;p&gt;Weitere Geschwindigkeitsvorteile lassen sich erzielen, wenn man dafür sorgen kann, daß Dateien möglichst hintereinanderliegende Blöcke auf einer Platte belegen.
Die Platte kann in diesem Fall ihren internen Cache füllen und die Daten schneller abliefern.
Außerdem entfallen Bewegungen des Schreib-/Lesekopfes der Platte.
Wie man am Beispiel von DOS sehen kann, ist es leider ist es nicht damit getan, die Blöcke einer Datei hintereinander anzuordnen.
Man muss außerdem auch Platz lassen, damit Dateien wachsen können.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1994/02/fragmentierung.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 7: Durch unkluge Anordnung von Daten zerstückelt MS-DOS Dateien in kleine, nicht zusammenhängende Fragmente.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Moderne UNIX-Dateisysteme unterteilen eine Festplatte deswegen in Streifen von einigen Megabyte Größe, sogenannte cylinder groups.
Jeder dieser Streifen enthält eine eigene kleine I-Nodetabelle und seinen Anteil an Datenblöcken.
Neue Dateien werden in derjenigen Zylindergruppe angelegt, die im Verhältnis am meisten freie Datenblöcke aufzuweisen hat.
Dadurch wird sichergestellt, daß solche Dateien gerade nicht direkt hintereinanderliegen, sondern genügend freien Platz haben, um zu wachsen.
Bei sehr langen Dateien wird außerdem nach dem Schreiben von jeweils einem Megabyte an Daten ein Wechsel der Zylindergruppe erzwungen:
Man geht davon aus, daß man sehr lange Dateien sowieso nicht in einem Stück zusammenhängend lagern kann.
Stattdessen versucht man, die einzelnen Stücke möglichst groß zu machen.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1994/02/bsdlayout.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 8: Das BSD Fast Filing System unterteilt die Platte in Streifen von einigen MB Größe. Das Betriebssystem versucht durch verschiedene Verfahren,
das Verhältnis von belegten Datenblöcken zu belegten I-Nodes in allen cylinder groups einer Platte in etwa ausgewogen zu halten. Dadurch ist das Dateisystem effektiv selbstdefragmentierend.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Außerdem würde eine sehr lange Datei alle Datenblöcke, aber nur eine einzige I-Node in einer Zylindergruppe belegen.
Die Daten zu den I-Nodes aller weiteren Dateien in derselben Zylindergruppe müssten dann auf andere Zylindergruppen verlagert werden, was dort wiederum das ausgewogene Verhältnis zwischen freien I-Nodes und freien Datenblöcken stören würde.
Dadurch, daß man  jeweils ein Megabyte einer sehr großen Datei auf eine andere Zylindergruppe verlagert, wird der Platz auf der Platte gleichmäßig verbraucht.
Man verhindert, daß andere Dateien dann nicht mehr günstig auf der Platte angeordnet werden können.&lt;/p&gt;
&lt;h2 id=&#34;abgeleitete-dateisysteme&#34;&gt;
    &lt;a href=&#34;#abgeleitete-dateisysteme&#34;&gt;
	Abgeleitete Dateisysteme
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die grundlegenden Strukturen des UNIX-Dateisystems wurden von Ritchie und Thompson vor 20 Jahren in den Laboratorien von AT&amp;amp;T entwickelt und haben sich grundsätzlich bewährt.
Selbst das Entwicklerteam von BSD UNIX, das das Dateisystem vor 10 Jahren einer gründlichen Überarbeitung unterzogen hat, hat die zugrundeliegenden Ideen nicht verändert, sondern UNIX lediglich beigebracht, auf die Geometrie der Platte Rücksicht zu nehmen, um weitere Geschwindigkeitsgewinne zu erzielen.&lt;/p&gt;
&lt;p&gt;Das UNIX-Dateisystem ist dem nur halb so alten, aber wesentlich weniger effektiv organisierten MS-DOS Dateisystem in Sachen Geschwindigkeit, Zugriffsschutz und Benutzerfreundlichkeit weit überlegen.
Die Ideen der UNIX-Entwickler waren letztlich so überzeugend, daß sie sich letztendlich im OS/2 HPFS und schließlich auch im Dateisystem von Windows NT wiederfinden.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/1994/02/mount.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 9: 26 Laufwerksbuchstaben wären für eine gut ausgelastete Workstation viel zu wenig. UNIX kennt deswegen nur einen einzigen Dateibaum. Beim Anmelden (mounten) eines Dateisystems wird eine Platte an einer
bestimmten Stelle in den Verzeichnisbaum eingehängt. Beim Wechsel des Verzeichnisses wechselt man so auch gleich die Platte oder bei Netzwerkplatten sogar den Rechner, auf dem man aktiv ist.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;literatur&#34;&gt;
    &lt;a href=&#34;#literatur&#34;&gt;
	Literatur
    &lt;/a&gt;
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;The UNIX Time Sharing System&amp;rdquo;, Ritchie, Thompson, Communications of the ACM 7/74, p.365&lt;/li&gt;
&lt;li&gt;&amp;ldquo;A Fast File System for UNIX&amp;rdquo;, McKusick et. al, ACM Trans. on Computer Systems, August 84, p.181&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Operating Systems&amp;rdquo;, A. Tanenbaum, Prentice-Hall&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The Design of the UNIX Operating System&amp;rdquo;, M.Bach, Prentice-Hall&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The Design of the 4.3 BSD UNIX Operating System&amp;rdquo;, McKusick, Addison-Wesley&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Advanced Programming in the UNIX Environment&amp;rdquo;, W.R.Stevens, Addison-Wesley&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>TCP/IP Technik</title>
      <link>https://blog.koehntopp.info/1993/04/01/tcpip-technik.html</link>
      <pubDate>Thu, 01 Apr 1993 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1993/04/01/tcpip-technik.html</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tcpip-technik&#34;&gt;TCP/IP Technik&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#smtp&#34;&gt;Ein SMTP Dialog&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;aus »c&amp;rsquo;t - Magazin für Computertechnik«, Ausgabe 4/93&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;tcpip-technik&#34;&gt;
    &lt;a href=&#34;#tcpip-technik&#34;&gt;
	TCP/IP Technik
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h4 id=&#34;rechner-miteinander-zu-vernetzen-ist-heutzutage-kein-problem-mehr-so-scheint-es-um-die-rechner-im-büro-zu-verbinden-nimmt-man-ethernet-arcnet-oder-token-ring-für-die-anbindung-von-außenstellen-stehen-modems-datx-p-und-neuerdings-auch-isdn-zur-verfügung-und-um-mal-eben-einige-daten-von-seinem-mac-auf-den-atari-zu-überspielen-legt-man-ein-nullmodemkabel-alle-diese-netze-haben-ihre-stärken-und-schwächen-und-dementsprechend-ihre-einsatzgebiete&#34;&gt;
    &lt;a href=&#34;#rechner-miteinander-zu-vernetzen-ist-heutzutage-kein-problem-mehr-so-scheint-es-um-die-rechner-im-b%c3%bcro-zu-verbinden-nimmt-man-ethernet-arcnet-oder-token-ring-f%c3%bcr-die-anbindung-von-au%c3%9fenstellen-stehen-modems-datx-p-und-neuerdings-auch-isdn-zur-verf%c3%bcgung-und-um-mal-eben-einige-daten-von-seinem-mac-auf-den-atari-zu-%c3%bcberspielen-legt-man-ein-nullmodemkabel-alle-diese-netze-haben-ihre-st%c3%a4rken-und-schw%c3%a4chen-und-dementsprechend-ihre-einsatzgebiete&#34;&gt;
	Rechner miteinander zu vernetzen ist heutzutage kein Problem mehr, so scheint es. Um die Rechner im Büro zu verbinden, nimmt man Ethernet, ARCNET oder Token-Ring; für die Anbindung von Außenstellen stehen Modems, Datx-P und neuerdings auch ISDN zur Verfügung und um mal eben einige Daten von seinem Mac auf den Atari zu überspielen, legt man ein Nullmodemkabel. Alle diese Netze haben ihre Stärken und Schwächen und dementsprechend ihre Einsatzgebiete.
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Leider haben diese Netze aber auch alle eine unterschiedliche Schnittstelle der Anwendung gegenüber.
Das fängt schon bei den Adressen an (Datex-P Adressen sehen anders aus als Adressen in einem Ethernet) und hört erst wieder bei den grundlegenden Konzepten des jeweiligen Netzwerks auf.
Wie schön wäre es, würden alle diese Netzwerke zusammenarbeiten können, sodaß man Daten auf dieselbe Art und Weise vom Wohnzimmer in den Hobbykeller wie von einem Ende der Welt zum anderen verschicken könnte, wenn man die verschiedenen Netzwerke miteinander vernetzen könnte.&lt;/p&gt;
&lt;p&gt;Genau diese Anforderung erfüllen die TCP/IP-Protokolle, die im Internet verwendet werden.&lt;/p&gt;
&lt;p&gt;Was kann TCP/IP?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gibt einem Unabhängigkeit von Hardware des unterliegenden Trägernetzes.&lt;/li&gt;
&lt;li&gt;gibt einem netzwerkweit einheitliche Adressen.&lt;/li&gt;
&lt;li&gt;präsentiert dem Programmierer eine einheitliche, geschlossene API.&lt;/li&gt;
&lt;li&gt;bietet einen Baukasten von standardisierten High-Level-Protokollen für die verschiedensten Netzwerkdienste.&lt;/li&gt;
&lt;li&gt;ist eine offene Protokollfamilie, die unabhängig von Herstellern entwickelt wurde.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Um die Entwicklung und das Verständnis von Rechnernetzen zu erleichtern, hat die International Standards Organisation (ISO) ein Architekturmodell für Rechnernetze entwickelt, das OSI
Referenzmodell.
Dieses Modell teilt den Prozeß des Verschickens von Daten über ein Rechnernetz in 7 übereinanderliegende Schichten ein, die einander zuarbeiten und jede für sich eine bestimmte Abstraktionsebene kennzeichnen.
Weil diese Schichten in der Abbildung einen übereinander liegen, redet man oft auch von einem
Protokollstapel.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/osimodell.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 1: OSI Referenzmodell&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wenn Daten zwischen zwei Rechnern übertragen werden, erscheint es im Programmiermodell so, als würden zwei gleiche Schichten auf verschiedenen Rechnern miteinander kommunizieren.
Die Details der darunterliegenden Abstraktionsebenen werden vor den darüberliegenden Schichten verborgen.
Beispielsweise ist es die Aufgabe der Schicht 2, eine fehlerfreie Verbindung zwischen zwei benachbarten Netzknoten zur Verfügung zu stellen.
Das bedeutet, dass die Schicht 3 sich mit den Details der Datenübertragung zwischen zwei Maschinen nicht mehr zu befassen hat.
Sie kann mit der Schicht 3 der Gegenstelle kommunizieren, ohne sich um Einzelheiten der Datenübertragung und möglicherweise auftretende Fehler kümmern zu müssen.&lt;/p&gt;
&lt;p&gt;In Wirklichkeit besteht jedoch die einzige Verbindung zwischen zwei Rechnern auf der Ebene 1, der physikalischen Schicht.
Wenn Daten zu senden sind, werden sie von einer Schicht zur jeweils darunterliegenden Schicht weitergereicht.
Damit die einzelnen Schichten voneinander unabhängig sind müssen die Schnittstellen zwischen den Schichten natürlich bekannt und definiert sein.
Diese Art von Modulbildung erleichtert die Wartung und Entwicklung von neuen Netzwerkprotokollen und die Fehlersuche.&lt;/p&gt;
&lt;h2 id=&#34;internetworking-protocol-ip&#34;&gt;
    &lt;a href=&#34;#internetworking-protocol-ip&#34;&gt;
	Internetworking Protocol (IP)
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Auch TCP/IP hat einen ähnlichen, schichtweisen Aufbau, wenn es auch nicht so vielfach unterteilt ist wie das OSI-Modell;
üblicherweise unterscheidet man vier Schichten.
Die Grundlage des TCP/IP-Protokollturms bildet die Netzwerkschicht, deren Aufgabe der eigentliche Datentransport ist.&lt;/p&gt;
&lt;p&gt;TCP/IP ist kein Netzwerkprotokoll, das von der Hardware direkt verstanden wird.
Normalerweise werden TCP/IP-Daten immer über ein vorhandenes Trägernetz, etwa Ethernet oder X.25, übertragen, denn die Aufgabe von TCP/IP ist es ja gerade, solche vorhandenen Netzwerke zu vereinheitlichen.
Im OSI-Modell deckt die Netzwerkschicht also die Hardwareschichten 1 und 2 sowie in einigen Fällen auch noch Teile der Schicht 3 ab.
Auf der Netzwerkschicht aufbauend liegt die Internet-Schicht, die die erste Abstraktionsschicht von einem konkreten Netzwerk darstellt.
Damit ist das Internet-Protokoll, kurz IP, der Kern von TCP/IP, denn es stellt den grundlegenden Dienst des Netzes zur Verfügung:
den Versand von Datenpaketen, sogenannten Datagrammen, über verschiedene Netze hinweg.
Die Netzwerkschicht hat keine Information darüber, von welcher Art die Daten sind, die sie befördert:
Für eine Ethernetkarte sind die ankommenden Daten eben einfach nur Daten, die vom Netz kommen.
Der Kartentreiber interpretiert einen Teil dieser Daten als IP-Header und den Rest als Datenteil eines IP-Paketes.
Auf diese Weise ist der IP-Header innerhalb eines Ethernet-Paketes gewissermaßen eingekapselt.
Aber auch das IP-Paket selbst enthält selbst wieder ein Datenpaket für eine höhere Protokollebene, dessen Header auf der IP-Ebene als Bestandteil der Daten erscheint.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/datenkapselung.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 2: Kapselung von Daten in ein Protokollpaket der nächstniederen Schicht.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;IP ist ein verbindungsloses Protokoll, das bedeutet, IP kennt keinen Verbindungszustand.
Es ist also nicht notwendig, eine IP-Verbindung zu einem Rechner zu &amp;ldquo;öffnen&amp;rdquo;, bevor man Daten zu diesem Rechner senden kann, sondern es genügt, das IP-Paket einfach abzusenden.
Bei einem verbindungsorientierten Protokoll wird beim Öffnen einer Verbindung getestet, ob der Zielrechner überhaupt erreichbar ist.
Ein verbindungsloses Protokoll macht das nicht und kann demnach auch nicht garantieren, daß ein Datenpaket überhaupt beim Empfänger ankommt.
IP garantiert auch nicht, daß ein von einem einmal abgeschickten Datenpaket nur eine Kopie beim Empfänger ankommt oder daß in einer Reihenfolge abgeschickte Datenpakete auch wieder in dieser Reihenfolge empfangen werden.
Dadurch ist es möglich, daß längere Transfers von einem Rechner zum anderen, die über mehrere Zwischenrechner laufen, beim Ausfall eines dieser Rechner dynamisch neu konfiguriert werden.
Irgendwann während der Übertragung bricht ein Übertragungsweg zusammen und es wird ein neuer Weg zum Ziel gesucht und benutzt.
Da der neue Weg zeitlich länger oder kürzer sein kann als der alte, kann man keine allgemein gültigen Aussagen darüber machen, in welcher Reihenfolge IP-Pakete beim Empfänger eintreffen.
Es kann auch sein, daß bei dieser Umschalterei IP-Pakete verloren gehen oder verdoppelt werden.
Alle diese Unebenheiten auszubügeln überläßt IP anderen, höherliegenden Schichten im Protokollturm.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/ippaket.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bild 3: Aufbau eines Internet Protocol (IP) Headers. Eine Zeile stellt ein Langwort (4 Byte) dar. Das höchstwertigste Byte eines Langwortes wird als erstes übertragen (Network Byte Order).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Hauptaufgabe von IP ist es also, die Unterschiede zwischen den verschiedenen, unterliegenden Netzwerkschichten zu verbergen und eine einheitliche Sicht auf die verschiedensten Netzwerktechnologien zu präsentieren.
Dazu gehören die Einführung eines einheitlichen Adressierungsschemas und eines Fragmentierungsmechanismus, der es ermöglicht, große Datenpakete durch Netze mit kleiner maximaler Paketgröße zu senden.&lt;/p&gt;
&lt;p&gt;Jedes IP-Paket enthält zwei Adressen in Form von 32 Bit Worten:
Die Absender- und die Empfängeradresse.
Eine Internet-Adresse wird meist in Form von vier, durch Punkte getrennten Bytes notiert, man spricht in diesem Fall von der &amp;ldquo;dotted quad&amp;rdquo;-Schreibweise.
Um die Zustellung von IP-Paketen zu vereinfachen, unterteilt man die Adresse in zwei Teile:
Den Netzwerkteil und den Rechnerteil.
Ein Router muß, um ein Datenpaket zustellen zu können, nur den Netzwerkteil einer Adresse erkennen.
Erst im Zielnetzwerk wird der Rechnerteil einer Adresse ausgewertet.
Um den verschiedenen Anforderungen gerecht zu werden, was die Größe von Netzwerken angeht, unterscheidet man verschiedene Aufteilungen der 32 Adreßbits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bei Netzwerken der Klasse A ist das erste Bit der IP-Adresse 0.
Die folgenden 7 Bit bilden den Netzwerkteil der Adresse und die restlichen 24 Bits bilden den Rechnerteil.
Es kann also weniger als 128 verschiedene Klasse A Netzwerke geben, aber jedes dieser Netze aus Millionen von Rechnern bestehen.
Ein typischer Verteter ist zum Beispiel das amerikanische MILNET, das sich über das ganze Land
erstreckt.&lt;/li&gt;
&lt;li&gt;bei Netzwerken der Klasse B fängt die Adresse mit der Bitfolge &amp;ldquo;10&amp;rdquo; an.
Die folgenden 14 Bit stellen den Netzwerkteil der Adresse dar, die restlichen 16 Bit den Rechnerteil.
Es kann also Tausende von Klasse B Netzen mit jeweils tausenden von Rechnern geben.
Ein typischer Vertreter ist das Campusnetzwerk einer großen Universität.&lt;/li&gt;
&lt;li&gt;bei Netzwerken der Klasse C fängt die Adresse mit der Bitfolge &amp;ldquo;110&amp;rdquo; an.
Die folgenden 21 Bit stellen den Netzwerkteil der Adresse dar, die restlichen 8 Bit den Rechnerteil.
Es kann also Millionen von Netzwerken der Klasse C geben, von denen jedes weniger als 256 Rechner beherbergt. Standardmäßigt bekommt man ein Klasse C Netz, wenn man ein Netzwerk beim NIC anmeldet.&lt;/li&gt;
&lt;li&gt;fängt eine Adresse mit den Bits &amp;ldquo;111&amp;rdquo; an, so hat sie eine Spezialbedeutung.
Manchmal werden solche Adressen als Klasse D Adressen bezeichnet.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Höherliegende Protokolle und Dienste bieten dem IP-Benutzer Mechanismen, die Namen Internet-Adressen zuordnen und umgekehrt.&lt;/p&gt;
&lt;p&gt;Weil das Internet-Protokoll wie bereits erwähnt normalerweise immer auf einem Trägernetzwerk aufsetzt, muß es noch eine andere Eigenschaft der unterliegenden Netzwerkschicht verbergen:
Normalerweise existiert bei allen Netzwerken eine maximale Größe, die ein Datenpaket haben kann.
Im IP-Jargon nennt man diese Grenze die &amp;ldquo;maximum transmisson unit&amp;rdquo;, MTU.
Natürlich ist diese Obergrenze je nach verwendeter Trägertechnik unterschiedlich.
Die Internet-Schicht teilt IP-Pakete, die größer als die MTU des verwendeten Netzwerks in kleinere Stücke, sogenannte Fragmente auf.
Auf dem Zielrechner werden diese Fragmente dann wieder zu vollständigen IP-Paketen zusammengesetzt, bevor sie an die darüberliegenden Protokolle weiter gegeben werden.&lt;/p&gt;
&lt;p&gt;Welches darüberliegende Protokoll der Transportschicht das Datenpaket bekommt, steht im &amp;ldquo;Protokoll&amp;rdquo;-Feld eines jeden IP-Paketes.
Jedes Protokoll der Transportschicht bekommt eine eindeutige Identifikationsnummer zugewiesen, anhand derer der IP-Treiber entscheiden kann, wie weiter mit dem Paket zu verfahren ist.
Eines der wichtigsten Protokolle der Transportschicht ist TCP.&lt;/p&gt;
&lt;h2 id=&#34;was-leistet-tcp&#34;&gt;
    &lt;a href=&#34;#was-leistet-tcp&#34;&gt;
	Was leistet TCP?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Aufgabe von TCP ist es, die oben geschilderten Defizite von IP zu verbergen.
Für den TCP-Benutzer soll es nicht mehr sichtbar sein, daß die darunterliegenden Protokollschichten Datenpakete versenden, sondern stattdessen soll der Benutzer mit einem Bytestrom wie bei einer normalen Datei arbeiten können.
TCP garantiert das Ankommen, die Einmaligkeit und die Reihenfolge der Daten.
Zusätzlich multiplext TCP die Verbindung zwischen zwei Rechnern:
Während auf der Internet-Schicht nur eine Verbindung zur Zeit zwischen zwei Rechnern bestehen kann, teilt TCP diese Verbindung in viele virtuelle Kanäle auf.&lt;/p&gt;
&lt;p&gt;Im Gegensatz zu IP ist TCP verbindungsorientiert.
Das muß so sein, denn TCP-Verbindungen sollen ja für den Benutzer wie Dateien zu handhaben sein.
Das bedeutet, eine TCP-Verbindung wird wie eine Datei geöffnet und geschlossen und man kann seine Position innerhalb des Datenstromes bestimmen, genau wie man bei einer Datei die Position des Dateizeigers angeben kann.&lt;/p&gt;
&lt;p&gt;Auch TCP sendet die Daten in größeren Einheiten, um den Verwaltungsaufwand durch Header und Kontrollinformation klein zu halten.
Im Gegensatz zu den IP-&amp;ldquo;Paketen&amp;rdquo; bezeichnet man in die Einheiten der Transportschicht als &amp;ldquo;Segmente&amp;rdquo;.
Jedes gesendete TCP-Segment hat eine eindeutige Folgenummer, die die Position seines ersten Bytes im Bytestrom der Verbindung angibt.
Anhand dieser Nummer kann die Reihenfolge der Segmente korrigiert werden und doppelt angekommene  Segmente können aussortiert werden.
Da die Länge des Segmentes aus dem IP-Header bekannt ist, können auch Lücken im Datenstrom entdeckt werden und der Empfänger kann verlorengegangene Segmente neu anfordern.&lt;/p&gt;
&lt;p&gt;Beim Öffnen einer TCP-Verbindung werden zwischen beiden Kommunikationspartnern Kontrollinformationen ausgetauscht, die sicherstellen, daß der Endpunkt der Verbindung existiert
und Daten annehmen kann.
Dazu schickt der Sender ein Segment mit der Aufforderung, die Folgenummern zu synchronisieren.
Der Empfänger weiß jetzt, daß der Sender eine Verbindung öffnen möchte und an welcher Position im Datenstrom der Sender anfangen wird zu zählen.
Der Empfänger bestätigt den Empfang der Nachricht und legt seinerseits eine Folgenummer für Übertragungen in Gegenrichtung fest.
Der Sender bestätigt nun seinerseits den Empfang der Folgenummer von B und beginnt dann mit der Übertragung von Daten.
Diese Art des Austausches von Kontrollinformation, bei der jede Seite die Aktionen der Gegenseite bestätigen muß, ehe sie wirksam werden können, heisst &amp;ldquo;Dreiweg-Handshake&amp;rdquo;.
Auch beim Abbau einer Verbindung wird auf diese Weise sichergestellt, daß beide Seiten alle Daten korrekt und vollständig empfangen haben.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/tcppaket.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Bild 4: Aufbau eines Transmission Control Protocol (TCP) Headers.*&lt;/p&gt;
&lt;p&gt;Während der Übertragung kann der Empfänger dem Sender im Feld &amp;ldquo;Fenstergröße&amp;rdquo; signalisieren, für wieviele Bytes er noch Pufferkapazität frei hat.
Der Sender darf nicht mehr Daten senden, als der Empfänger auf diese Weise freigegeben hat, bis er eine weitere Empfangsbestätigung mit einer neu festgelegten Fenstergröße vom Sender erhält.
Auf diese Weise kann der Empfänger den Datenfluß vom Sender nach Wunsch dosieren.
Wenn der Empfänger dem Sender eine Fenstergröße von Null Byte signalisiert, muß der Sender den Transfer unterbrechen, bis er eine zweite Bestätigung mit einer Fenstergröße ungleich Null bekommt.&lt;/p&gt;
&lt;p&gt;Auf einem Rechner können mehrere Prozesse zu einem Zeitpunkt TCP-Verbindungen geöffnet haben.
Die Portnummer in jedem TCP-Segment gibt an, welche virtuelle Verbindung zu welchem Prozeß gehört.
So ist es möglich, Leitungen für eine Vielzahl von Prozessen zu multiplexen.
Vom Standpunkt eines Modembenutzers aus kann man TCP/IP also in gewisser Weise als eine Art glorifiziertes ZMODEM- oder BIMODEM-Protokoll betrachten:
Es ist nicht nur eine Übertragung von Daten in beide Richtungen gleichzeitig möglich, sondern es können pro Richtung noch mehrere Verbindungen zugleich unterhalten werden.&lt;/p&gt;
&lt;p&gt;Damit die verschiedenen Schichten des Protokollturms miteinander Daten austauschen können, müssen jeweils zwei aneinanderstoßende Schichten sich jeweils über ein gemeinsames Interface einig sein.
Normalerweise sind diese Interfaces nicht interessant, weil sie für den Anwender unsichtbar sind.
Das Interface der Internet-Schicht ist zum Beispiel nur für denjenigen interessant, der TCP oder ein vergleichbares Protokoll selbst implementieren möchte.
Das Interface zwischen der Transportschicht und der Anwendungsschicht ist jedoch von besonderem Interesse, denn es stellt das Interface dar, mit dem ein Programmierer umgehen muß, der eine Anwendung schreiben möchte, die von den Möglichkeiten von TCP/IP Gebrauch macht.&lt;/p&gt;
&lt;p&gt;Leider gibt es zwei verschiedene, inkompatible APIs für TCP/IP.
Die ältere der beiden ist als &amp;ldquo;Berkeley Sockets&amp;rdquo; bekannt geworden und in BSD UNIX zusammen mit der ersten Version von TCP/IP implementiert worden.
Die andere API ist das &amp;ldquo;Transport Level Interface&amp;rdquo;, kurz TLI, von AT&amp;amp;T.
Es stellt den Versuch dar, eine generelle, TCP/IP unabhängige API für Netzwerkprogrammierung zu schaffen.
Die Namen und Parameter der TLI-Aufrufe orientieren sich dabei an der Begriffswelt der OSI.&lt;/p&gt;
&lt;p&gt;Die Grenze zwischen der Anwendungsschicht und der Transportschicht ist in den meisten Implementierungen zugleich die Grenze zwischen dem Betriebssystem und den Anwendungsprogrammen.
Im OSI-Modell ist diese Grenze in etwa die Grenze zwischen den Schichten 4 und 5.
Daher ordnet man IP meist ungefähr in die Ebene 3 und TCP ungefähr in Ebene 4 des OSI-Modells ein.
Da TCP/IP jedoch älter und einfacher als das OSI-Modell sind, kann diese Einordnung nicht genau passen.&lt;/p&gt;
&lt;h2 id=&#34;typische-tcpip-dienste&#34;&gt;
    &lt;a href=&#34;#typische-tcpip-dienste&#34;&gt;
	Typische TCP/IP Dienste
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Auf TCP/IP setzen viele verschiedene Dienste auf, von denen die meisten ein eigenes, anwendungsspezifisches Protokoll zwischen ihrem Server und den verschiedenen Client-Programmen verwenden.
Der UNIX-Tradition folgend kommunizieren viele dieser Anwendungen zwar in einem formalisierten Format miteinander, aber dieses Format ist meist so gehalten, daß es noch von einem Menschen ohne besondere Debugging-Werkzeug gelesen und erzeugt werden kann.&lt;/p&gt;
&lt;p&gt;Eines dieser Protokolle ist zum Beispiel das &amp;ldquo;simple mail transport protocol&amp;rdquo;, SMTP.
Es dient der synchronen Auslieferung von Electronic Mail im Internet und wird von einer ganzen Palette von Mailtransportprogrammen direkt verstanden.
Ist eine Mail zu versenden, so baut der sendende Mailer eine TCP/IP-Verbindung direkt zum Zielrechner auf.
Der physikalische Weg zu diesem Rechner muß nicht direkt vorhanden sein, aber das braucht den Absender nicht zu kümmern.
Die Internet-Schicht des Netzes wird einen Weg zum Zielrechner konstruieren, wenn es einen gibt.
Für den Mailer sieht es so aus, als hätte er eine direkte, virtuelle Verbindung zum Zielrechner.
Kommt eine Verbindung zustande, so meldet sich auf dem Zielrechner ein Hintergrundprozeß, der auf eingehende Nachrichten wartet.
Zwischen den beiden Mailern läuft dann ein SMTP-Dialog ab.
Da der Dialog aber in reinem ASCII und sogar relativ lesbar ist, kann man ihn bei Kenntnis des SMTP-Protokolls auch als Mensch simulieren.
Im Kasten &lt;a href=&#34;#smtp&#34;&gt;SMTP&lt;/a&gt;

 ist so eine Simulation eines SMTP-Dialoges zu sehen.&lt;/p&gt;
&lt;p&gt;So wie SMTP der Zustellung persönlicher Nachrichten an einzelne Personen dient, ermöglicht das NNTP-Protokoll die Verbreitung öffentlicher Nachrichten, der USENET News, im Internet.
Das FTP-Protokoll dient zur Übertragung von Dateien durch das Netz, das TELNET- und das rlogin-Protokoll ermöglichen es, Sessions auf entfernten Rechnern zu fahren und wieder andere Protokolle ermöglichen die Einrichtung von Namensverzeichnissen oder die Fernabfrage der eigenen Mail.&lt;/p&gt;
&lt;p&gt;TCP/IP ist durch das schichtweise Design ein modularer Protokollstandard.
Die einzelnen Komponenten sind in den sogenannten &amp;ldquo;Requests for Comments&amp;rdquo; (RFCs) genormt und  offengelegt.
Am Zustandekommen einer einzelnen SMTP-Verbindung über TCP über IP über Ethernet-Verbindung sind dann auch eine ganze Reihe dieser Normen beteiligt.
Das Format der übertragenen Nachricht ist in RFC 822, &amp;ldquo;Standard for the format of ARPA Internet text messages&amp;rdquo; festgelegt.
Die Nachrichten werden nach dem in RFC 821 definierten SMTP-Verfahren übertragen.
SMTP bedient sich wiederum des in RFC 793 spezifizierten TCP, das auf dem in RFC 791 und RFC  792 definierten Internet Protocol aufsetzt.
Wie Internet-Pakete auf einem Ethernet als Träger verschickt werden, ist wiederum in RFC 894 festgelegt, während RFC 826 die Zuordnung von Ethernet-Adressen zu IP-Adressen regelt.&lt;/p&gt;
&lt;p&gt;Die Universalität von TCP/IP verbirgt die Eigenheiten der unterliegenden Trägernetze vollständig.
Für einen TCP/IP-Benutzer, ja sogar für den Programmierer ist es egal, auf welche Weise der Zielrechner erreicht wird, er hat eine einheitliche Sicht auf ein riesiges, weltweites, aus
tausenden von Teilnetzen zusammengesetztes Netzwerk.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#34;smtp&#34;&gt;
    &lt;a href=&#34;#smtp&#34;&gt;
	SMTP
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h4 id=&#34;smtp-dialog-zwischen-tpkitoppointde-und-blacktoppointde&#34;&gt;
    &lt;a href=&#34;#smtp-dialog-zwischen-tpkitoppointde-und-blacktoppointde&#34;&gt;
	SMTP Dialog zwischen tpki.toppoint.de und black.toppoint.de
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Von tpki.toppoint.de gesendete Zeichen sind fett gesetzt.&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;
220-black.toppoint.de Smail3.1.26.7 #3 ready at Wed, 9 Dec 92 00:08 
MET
220 call +49 431 676689 for operator.
&lt;b&gt;helo tpki.toppoint.de&lt;/b&gt;
250 black.toppoint.de Hello tpki.toppoint.de
&lt;b&gt;mail from: kris@tpki.toppoint.de&lt;/b&gt;
250 &amp;lt;kris@tpki.toppoint.de&gt; ... Sender Okay
&lt;b&gt;rcpt to: kris@black.toppoint.de&lt;/b&gt;
250 &amp;lt;kris@black.toppoint.de&gt; ... Recipient Okay
&lt;b&gt;data&lt;/b&gt;
354 Enter mail, end with &#34;.&#34; on a line by itself
&lt;b&gt;.&lt;/b&gt;
250 Mail accepted
&lt;b&gt;quit&lt;/b&gt;
221 black.toppoint.de closing connection
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>TCP/IP Dienste</title>
      <link>https://blog.koehntopp.info/1993/03/01/tcpip-dienste.html</link>
      <pubDate>Mon, 01 Mar 1993 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1993/03/01/tcpip-dienste.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;für c&amp;rsquo;t - Magazin für Computertechnik, Ausgabe 3/93&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;tcpip-dienste&#34;&gt;
    &lt;a href=&#34;#tcpip-dienste&#34;&gt;
	TCP/IP Dienste
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h4 id=&#34;das-größte-problem-bei-einem-artikel-über-das-internet-ist-es-zu-definieren-was-das-internet-überhaupt-ist-eigentlich-existiert-so-etwas-wie-das-internet-nämlich-überhaupt-nicht-das-ändert-natürlich-nichts-an-der-tatsache-daß-millionen-menschen-es-jeden-tag-benutzen-wie-erklärt-sich-ein-solcher-widerspruch&#34;&gt;
    &lt;a href=&#34;#das-gr%c3%b6%c3%9fte-problem-bei-einem-artikel-%c3%bcber-das-internet-ist-es-zu-definieren-was-das-internet-%c3%bcberhaupt-ist-eigentlich-existiert-so-etwas-wie-das-internet-n%c3%a4mlich-%c3%bcberhaupt-nicht-das-%c3%a4ndert-nat%c3%bcrlich-nichts-an-der-tatsache-da%c3%9f-millionen-menschen-es-jeden-tag-benutzen-wie-erkl%c3%a4rt-sich-ein-solcher-widerspruch&#34;&gt;
	Das größte Problem bei einem Artikel über das Internet ist es, zu definieren, was das Internet überhaupt ist. Eigentlich existiert so etwas wie &amp;ldquo;das Internet&amp;rdquo; nämlich überhaupt nicht. Das ändert natürlich nichts an der Tatsache, daß Millionen Menschen es jeden Tag benutzen. Wie erklärt sich ein solcher Widerspruch?
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Am Besten, man beginnt am Anfang:
Ende der Siebziger Jahre hatte das amerikanische Verteidigungsminsterium Bedarf an einer Technologie, die unterschiedlichsten Computersysteme an verschiedenen Orten miteinander zu vernetzen.
Um die Möglichkeiten einer solchen Vernetzung auszuloten und die dazu notwendigen Technologien zu entwickeln und zu erproben, wurde im Jahre 1969 im Rahmen eines Forschungsprojektes ein experimentelles Computernetz ins Leben gerufen.
Schon bald zeigte sich, daß nicht nur das Verteidigungsminsterium einen Bedarf an derartiger Technik hatte.
Das ARPANET war viel erfolgreicher als ursprünglich geplant:
Nach kurzer Zeit schon begannen viele Organisationen das Netz nicht nur für experimentelle Zwecke zu nutzen, sondern verwendeten es auch für ihre tägliche Arbeit.
Auch Institutionen und Firmen, die nicht direkt an der Entwicklung von Netzwerktechnologien beteiligt waren, sondern diese einfach nur benutzen wollten, zeigten Interesse an der Vernetzung.
Daher zog man 1975 die Konsequenz und änderte den Status von ARPANET in den eines Produktionsnetzwerks, das von der Defense Communications Agency (heute die Defense Information Systems Agency) verwaltet wurde.&lt;/p&gt;
&lt;p&gt;Doch die Entwicklung des Netzes blieb damit nicht stehen.
Die heute verwendeten &lt;a href=&#34;#rfc&#34;&gt;Netzwerkprotokolle&lt;/a&gt;

, TCP und IP, stammen im Prinzip aus den frühen achtziger Jahren.
Weil das ARPANET immer stärker wuchs und zum Teil nicht zu experimenteller Arbeit, sondern immer mehr auch zu Produktionszwecken genutzt wurde, teile man es in einen Forschungsteil (ARPANET) und das MILNET auf.
Zugleich stellte man das Protokoll zwischen den zentralen Netzwerkknoten auf TCP/IP um.
Um den Umstieg zu erleichtern und auch Universitäten für die verwendete Technik zu interessieren, wurde eine frei verfügbare Implementation von TCP/IP für BSD UNIX in Auftrag gegeben und damit der Grundstein zu dem gelegt, was heute als &amp;ldquo;open systems&amp;rdquo; in aller Munde ist.
Die Rechnung ging auf: Schon mitte der achtziger Jahre begann die National Science Foundation in den Vereinigten Staaten mit dem Aufbau des NSFNET, einem Netz mit Verbindung zum ARPANET, aber auch zu regionalen Netzwerken auf gleicher Technologiebasis.&lt;/p&gt;
&lt;p&gt;Heute bezeichnet man mit dem Namen &amp;ldquo;internetwork&amp;rdquo; Netzwerk aus Teilnetzwerken der verschiedensten Technologien, die durch das darüberliegende TCP/IP zusammengebunden werden.
Die weltweite Verbindung von TCP/IP-Netzwerken, die aus dem ARPANET entstanden ist, trägt jedoch den Namen &amp;ldquo;das Internet&amp;rdquo; (mit betontem &amp;ldquo;das&amp;rdquo; und großem &amp;ldquo;I&amp;rdquo;).
Alle wichtigen staatlichen und wirtschaftlichen Institutionen in den USA sind mittlerweile auf die eine oder andere Weise mit dem Internet verbunden.
Auch in Deutschland findet, wenn auch mit mehreren Jahren Verzögerung, eine ähnliche Entwicklung statt.
So etwas wie eine einheitliche Verwaltung gibt es jedoch nicht.
Das Internet Activities Board definiert das Internet selbst dann in einem seiner Informationenpapiere auch als einen &amp;ldquo;lockeren, internationalen Zusammenschluß miteinander verbundener Netzwerke, das direkten Kontakt von Rechner zu Rechner durch freiwilliges befolgen offener Protokollstandards und -prozeduren ermöglicht.&amp;rdquo;
Diese Definition ist in der Tat schwammig genug, um einem Gebilde wie dem Internet gerecht zu werden.&lt;/p&gt;
&lt;p&gt;Ein anderer Pluspunkt von TCP/IP ist eher für den Programmierer interessant:
Die totale Unabhängigkeit der Applikation von der darunterliegenden Netzwerkebene.
Ein Programm, das in einer Internet-Umgebung läuft, muß sich nicht darum kümmern, wie es seine Datenpakete aus dem lokalen Ethernet über das Datex-P-Gateway nach Übersee und dort in das lokale Token-Ring-Netzwerk schicken muss.
Das Internet-Protokoll kümmert sich darum, die Details der verschiedenen unterliegenden Netzwerke und Transportmechanismen zu verbergen.
Es kümmert sich auch darum, die schnellste oder am wenigsten ausgelastete Route durch das Netz zu suchen.&lt;/p&gt;
&lt;p&gt;Diese Transparenz wird vom Protokoll auch an die darüberliegenden Anwendungen und letztendlich an den Benutzer weitergegeben.
Für einen Benutzer einer Anwendung im Internet ist es vom Aufwand her kein Unterschied, ob er seine Daten von einer lokalen Platte, aus dem inhouse-Netzwerk, von einem Server irgendwo in Deutschland oder gar in Taiwan oder den USA bekommt.
Allein an der Übertragungsgeschwindigkeit könnte man einen Unterschied  feststellen.
Leider birgt diese Transparenz gelegentlich Probleme in sich:
Für den Benutzer ist es gleich schwierig, einen Dienst über Transatlantik-Leitungen zu benutzen wie einen Dienst im lokalen Ethernet.
Es könnte sogar sein, daß sich ein guter Teil der Netzwerk-Benutzer gar nicht darum kümmert, woher genau die Daten jetzt kommen und wieviel Technik dafür in Bewegung gesetzt werden muß.
In Folge kommt es zu den Stoßzeiten auf überregionalen Leitungen mehr oder weniger stark zu Kapazitätsproblemen.&lt;/p&gt;
&lt;h2 id=&#34;reichhaltiges-angebot&#34;&gt;
    &lt;a href=&#34;#reichhaltiges-angebot&#34;&gt;
	Reichhaltiges Angebot
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das Internet stellt seinen Benutzern auf der Basis von TCP/IP als Transportprotokoll eine Vielzahl von Dienstleistungen zur Verfügung.
Diese Dienste sind normalerweise auf der Basis eines weiteren Protokolles realisiert, das wiederum auf TCP/IP aufsetzt
(vgl. &lt;a href=&#34;https://blog.koehntopp.info/1993/04/01/tcpip-technik.html&#34;&gt;Internet Technik Artikel&lt;/a&gt;

).&lt;/p&gt;
&lt;p&gt;Der erste Dienst, den man als Benutzer im Internet kennenlernt, ist wahrscheinlich electronic mail.
Mail erlaubt es, Textnachrichten und neuerdings auch multimediale Dokumente an andere Benutzer im Netz zu verschicken.
Die Zustellung der Mail erfolgt, in dem der eigene Rechner nach dem Abschicken der Mail eine Verbindung zum Zielrechner aufbaut und die Mail dort online und direkt einliefert.
Bei einer schnellen Netzverbindung ist die Mail praktisch Sekunden nach dem Drücken der Returntaste beim Empfänger.&lt;/p&gt;
&lt;p&gt;Viele bekannte Firmen sind im Netz durch Mitarbeiter oder sogar mit einer Supportadresse vertreten.
Darunter sind so illustre Namen wie Motorola, Intel, AT&amp;amp;T, Microsoft, Borland, Seagate, Prime, NeXT, SUN, DEC, IBM, HP, Commodore, Atari und viele andere mehr, darunter auch zahllose kleinere Firmen.
Auch sind fast alle Universitäten in den meisten Ländern direkt zu erreichen.
Wer Freunde oder Bekannte hat, die als Austauschstudent an einer ausländischen Universität sind, der wird electronic mail als schnelles und billiges Briefmedium schätzen lernen.
Für den Studenten taugt Mail auch, um sich mit den Autoren von Seminarpapieren kurzzuschließen und zusätzliches Material für den Vortrag zu bekommen oder um Fragen zu stellen.&lt;/p&gt;
&lt;p&gt;Wer die Mailgrößen und die Zustellgeschwindigkeiten von Mailboxnetzen gewohnt ist, wird im Internet allerdings umdenken müssen.
Internet ist in der Lage, in kurzer Zeit große Datenmengen zu bewegen und dementsprechend wird dieser Dienst auch genutzt.
Es kann einem leicht passieren, daß man auf eine Anfrage, ob diese oder jene Datei vorhanden sei, kein &amp;ldquo;Ja&amp;rdquo;, sondern kurzerhand die Quelle zugestellt bekommt.&lt;/p&gt;
&lt;p&gt;Mit Mail ist es möglich, private Nachrichten an Personen zu verschicken.
Auf dem Internet gibt es einen anderen Dienst, News, der es erlaubt öffentliche Nachrichten an Sachgruppen, sogenannte Newsgroups, zu adressieren.
Eine Newsgroup ist gewissermaßen ein öffentliches Diskussionsforum, das einem bestimmten Thema gewidmet ist.
Insgesamt gibt es weit über 2500 verschiedene Newsgroups mit einem Themenspektrum, das von Computerthemen über Wissenschaft, Hobby, politischer Diskussion bis hin zu bloßem Jux reicht.
Typische Laufzeiten von Nachrichten in einer Newsgroup liegen dabei in der Gegend von 6-10 Stunden.
In dieser Zeit ist der eigene Text einmal rund um die Erde verteilt worden und viele tausend Mal kopiert worden.&lt;/p&gt;
&lt;p&gt;Mit einer Nachricht in einer Newsgroup erreicht man schnell ein großes Publikum.
Selbst bei exotischen Problemen oder Fragestellungen ist es wahrscheinlich, innerhalb eines Tages Personen zu finden, die ein ähnliches Problem auch schon einmal gehabt haben und einem möglicherweise weiter helfen können.
Gerade für jemanden, der sich mit Softwareentwicklung befaßt, sind die News eine wichtige Quelle für Informationen, praktische Erfahrungsberichte und Support, die beim Hersteller oft nur schwer zu bekommen sind.&lt;/p&gt;
&lt;p&gt;Viele nützliche PD-Programme konnten nur deswegen entstehen, weil Programmierer in den entferntesten Gegenden der Erde per News und Mail Quellen und Fehlerreports austauschen können und so trotz der großen Entfernungen eng zusammenarbeiten können.
Die public domain UNIX-Versionen Linux und 386BSD sind nach Megbytes gemessen die größten Produkte einer solchen Zusammenarbeit, aber auch viele andere Werkzeuge für den täglichen Einsatz sind auf diese Weise entstanden.
Allen voran stehen die Programme, die man zur effizienten Nutzung von News und Mail benötigt:
Programmpakete zum Lesen, Schreiben, Verschicken und Archivieren von News und Mail.&lt;/p&gt;
&lt;p&gt;Die neuesten Versionen dieser Programmpakete finden sich in Archiven, die per anonymous FTP zugänglich sind.
FTP steht für &amp;ldquo;File Transfer Protocol&amp;rdquo; und ist zugleich der Name eines Übertragungsprotokolls als auch der Name der Anwendung, die dieses Protokoll benutzt, um per Internet Dateien zu übertragen.
Viele Institutionen, die einen schnellen Internet-Anschluß haben und ein wenig Plattenplatz erübrigen können, richten Bereiche ein, in denen man auch ohne Paßwort per FTP Programme ablegen oder abholen kann.
Teilweise sind diese Rechner so konfiguriert, daß sie ihre Datenbestände untereinander automatisch abgleichen, ihre Platten also gegenseitig spiegeln.
Auf diese Weise erübrigt sich für den Benutzer das Horten von Quelltexten auf der eigenen Platte:
Wenn man ein Programmpaket benötigt, um es zu installieren oder mit den Quellen zu arbeiten, wird man sowieso nicht das private Archiv mit der veralteten Version aufsuchen, sondern sich per FTP eine aktuelle Version desselben Paketes holen.&lt;/p&gt;
&lt;p&gt;Das Hauptproblem dabei ist es lediglich, einen Server zu lokalisieren, der die gewünschten Daten auch anbietet.
Dafür gibt es im Netz öffentlich zugängliche Datenbanken, die einen Index über dreistellige Gigabytemengen auf Software enthalten, die Archies.
Ein Archie ist eine Datenbank, die typischerweise im Tages- oder Wochenrhytmus die kompletten Inhaltsverzeichnisse einiger hundert FTP-Server abfragt und zu einem Gesamtindex verarbeitet.
Man kann den Archie nach Namen oder Beschreibungen von Programmpaketen suchen lassen und erhält eine Liste aller Quellen für das gesuchte Programmpaket, die dem Archie bekannt sind.
Dazu kann man sich direkt auf dem Archie einloggen und einer simplen Abfragesprache bedienen.
Richtig bequem wird so eine Abfrage aber erst mit einem Abfrageprogramm wie xarchie (für XWindows), das man mit der Maus bedienen kann.
Die Beschaffung eines bestimmten Programmpaketes beschränkt sich dann auf die Eingabe des Paketnamens und das Anklicken der Knöpfe &amp;ldquo;Query&amp;rdquo; und (nach Auswahl des gewünschten Servers) &amp;ldquo;FTP&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Es gibt im Internet noch weitere frei zugängliche Datenbanken.
Da es jedoch keine zentrale Administration des Netzwerks gibt, ist es hier etwas schwierig einen Überblick zu bekommen.
Es ist zum Beispiel bekannt, daß sehr viele Bibliotheken in den USA einen Zugang ins Internet haben und ihre Kataloge als Datenbank öffentlich zugänglich machen.
Aber auch andere Institutionen bieten Datenbanken zur freien Abfrage an.
Man erreicht diese Datenbanken per TELNET, einem TCP/IP-Dienst, der es einem erlaubt, sich auf einem entfernten Rechner einzuloggen.
Per FTP sind Texte erhältlich, die den Versuch einer Katalogisierung solcher Dienste darstellen und die Netzadressen, Logins und Passwörter enthalten, die man benötigt, um arbeiten zu können.
Der nächste logische Schritt sind Datenbankabfrageprogramme, die eine Anfrage nehmen und sie allen Datenbanken stellen, die ihnen bekannt sind.
Solche Dienste sind WAIS (Wide Area information Service) und gopher.&lt;/p&gt;
&lt;h2 id=&#34;wie-man-sich-anschließt&#34;&gt;
    &lt;a href=&#34;#wie-man-sich-anschlie%c3%9ft&#34;&gt;
	Wie man sich anschließt
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Man kann auf zwei Wegen an einen Internet-Zugang kommen.
Die eine Methode ist es, sich einen Systembetreiber zu suchen, dessen Rechner am Internet angeschlossen ist und der einem die Benutzung seines Rechners erlaubt.
Man kann sich dann auf diesem Rechner einloggen und die Internet-Dienste dieses Rechner online nutzen.
Die andere Methode wäre, auf dem eigenen Rechner zu arbeiten und nur die eigenen IP-Pakete an einen Internet-Rechner weiter zu routen, etwa über ein Modem und SL/IP (Serial Line Internet Protocol).
Die meisten Internet-Anbieter lassen einem die Auswahl zwischen beiden Methoden des Anschlusses.&lt;/p&gt;
&lt;p&gt;Ein Anschluß ans Internet ist derzeit jedoch eine teure Sache, falls man nicht gerade Student an einer Universität mit freiem Zugang zum Internet ist.
Wer immer Internet anbietet, der muß eine Standleitung oder etwas mit ähnlicher Charateristik unterhalten.
Dabei kann es sich um eine Datex-P, ISDN- oder Modemstrecke handeln.
Der Betreiber dieser Strecke wird natürlich versuchen, seine Kosten auf die Nutzer umzulegen.
Im Endeffekt liegen die Kosten für vernünftig nutzbaren Internet-Anschluß derzeit bei etwa 50 DM/Monat mit starken geographischen Abweichungen.&lt;/p&gt;
&lt;p&gt;In Deutschland gibt es drei verschiedene Anbieter, die Internet-Dienste verkaufen können.
Diese sogenannten Provider sind jedoch nur für kommerzielle Kunden und Institutionen interessant.
Es handelt sich um EuNet Germany GmbH in Dortmund, XLINK in Karlsruhe und den DFN Verein.
Für Privatpersonen ist eher der Individual Network e.V. (&amp;ldquo;das IN&amp;rdquo;) interessant.
Dieser Verein hat bei zweien dieser drei Anbieter das Recht gekauft, deren Internet-Leitungen zu benutzen und dieses Recht an seine Mitglieder weiterzugeben.
Auf diese Weise kann das IN seinen Mitgliedern einen günstigen Zugang ins Internet verschaffen, wenn diese die dazu notwendig Infrastruktur vor Ort organisieren können.&lt;/p&gt;
&lt;p&gt;Wenn man sich in der Nähe eines solchen Zugangspunktes wohnt, also etwa in Kiel, Hamburg, Berlin, Oldenburg, im Ruhrgebiet, in Frankfurt oder
in München, dann genügt es, sich an den entsprechenden Anbieter zu wenden (siehe Kasten&amp;quot;Adressen&amp;quot;).
Ansonsten wird man sich überlegen müssen, ob man einen Anschlußpunkt in der Nähe finden kann oder wie man die Entfernung zum nächsten Anschlußpunkt überbrücken kann.&lt;/p&gt;
&lt;h2 id=&#34;informationsquellen&#34;&gt;
    &lt;a href=&#34;#informationsquellen&#34;&gt;
	Informationsquellen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um Neueinsteigern ins Internet bei der Orientierung zu helfen und einen Überblick über die verfügbaren Informationen und Dienste zu geben, hat man eine Reihe von RFCs mit Einsteierinformationen zusammengestellt.
Diese RFCs sind in einer gesonderten Reihe als &amp;ldquo;For your information&amp;rdquo; oder kurz FYI-Texte zusammengefaßt worden.
Von besonderem Interesse sind FYI 4, der sich mit häufig gestellten Fragen von Internet-Neulingen beschäftigt, FYI 8, der sich mit der Sicherheit einer Internet-Installation befaßt und FYI 10, der einen Überblick über im Internet verfügbare Dienste gibt.&lt;/p&gt;
&lt;h2 id=&#34;literatur&#34;&gt;
    &lt;a href=&#34;#literatur&#34;&gt;
	Literatur
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Internetworking with TCP/IP; Principles, Protocols, and Architecture&amp;rdquo;,  by Douglas Comer, Prentice Hall, ISBN 0-13-470154-2.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The Matrix; Computer Networks and Conferencing Systems Worldwide&amp;rdquo;, by John S. Quarterman, Digital Press, ISBN 0-13-565607-9.&lt;/LI&gt;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;!%@:: A Directory of Electronic Mail Addressing and Networks&amp;rdquo;, by Donnalyn Frey and Rick Adams, O&amp;rsquo;Reilly &amp;amp; Associates, Inc., ISBN 0-937175-39-0.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The User&amp;rsquo;s Directory of Computer Networks&amp;rdquo;,  Edited by Tracy L. LaQuey, Digital Press, ISBN 0-13-950262-9.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Where to Start - A Bibliography of General Internetworking Information&amp;rdquo;, by Bowers, K., T. LaQuey, J. Reynolds, K. Roubicek, M. Stahl, and A. Yuan, RFC 1175, FYI 3, CNRI, U Texas, ISI, BBN, SRI, Mitre, August 1990.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The Hitchhikers Guide to the Internet&amp;rdquo;, by Krol, E., RFC 1118, University of Illinois Urbana, September 1989.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;IAB Official Protocol Standards&amp;rdquo;&lt;/I&gt;, (currently, RFC 1280).&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;rfc&#34;&gt;
    &lt;a href=&#34;#rfc&#34;&gt;
	RFC
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Ein &amp;ldquo;Request for Comments&amp;rdquo;, kurz RFC,  ist ein Papier, das sich in irgendeiner Form mit im Internet verwendeten Verfahren beschäftigt.
Es kann sich dabei um eine Anmerkung zu bestehenden Verfahren, einen Verbesserungsvorschlag oder den Vorschlag zu einem neuen Verfahren handeln.
Jeder, der am Internet interessiert ist, kann einen solchen RFC beim RFC Editor einreichen.
Derzeit ist der RFC Editor Jon Postel, der unter der Internet-Adresse &lt;a href=&#34;mailto:RFC-EDITOR@ISI.EDU&#34;&gt;RFC-EDITOR@ISI.EDU&lt;/a&gt;

 zu erreichen ist.
Wie eine Einsendung an den RFC-Editor auszusehen hat, um ihm die Arbeit zu vereinfachen ist auch in einem RFC (&lt;a href=&#34;http://src.doc.ic.ac.uk/public/rfc/rfc1111.txt.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RFC 1111&lt;/a&gt;

 beschrieben.&lt;/p&gt;
&lt;p&gt;Ein solches Papier kann den Status &amp;ldquo;zur Information&amp;rdquo; erhalten, wenn es sich nur um eine Anmerkung handelt.
Enthält der RFC eine Spezifikation, die einmal ein Standard werden soll, so kann das Internet Activities Board (IAB) das Papier prüfen und zum &amp;ldquo;proposed standard&amp;rdquo; erklären.
So eine Spezifikation soll dann die Grundlage für zu entwickelnde Programmpakete sein, d.h. es braucht noch keine funktionierende Implementation des Standards zu geben.&lt;/p&gt;
&lt;p&gt;Sobald es Erfahrungen mit dem neuen Vorschlag gibt, frühestens aber nach einem halben Jahr, kann die Spezifikation zum &amp;ldquo;draft standard&amp;rdquo; werden.
Dazu muß es mindestens zwei Implementationen geben, die unabhängig voneinander aus der Spezifikation entwickelt worden sind und die trotzdem zusammenarbeiten können.
An einem &amp;ldquo;draft standard&amp;rdquo; wird nichts wesentliches mehr geändert; Modifikationen dienen nur noch der Ausbesserung von Fehlern und Ungenauigkeiten.&lt;/p&gt;
&lt;p&gt;Schließlich wird die Spezifikation nach angemessener Zeit zum &amp;ldquo;standard&amp;rdquo; befördert und ist damit ein fester Teil der Internet-Spezifikationen.
&lt;a href=&#34;http://src.doc.ic.ac.uk/public/rfc/rfc1280.txt.gz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RFC  1280&lt;/a&gt;

 gibt eine Übersicht über den Standardisierungsprozeß und nennt den Status der verschiedenen Dokumente.&lt;/p&gt;
&lt;p&gt;Nicht alle Standards im Internet müssen von allen Programmpaketen unterstützt werden.
Die RFCs unterscheiden zwischen Fähigkeiten, die alle beteiligten Programme unterstützen müssen (required), zwischen Optionen, die alle unterstützen sollten (recommended) und zusätzlichen Features, die wirklich optional sind (elective).&lt;/p&gt;
&lt;p&gt;Um in der Entwicklung der Standards im Internet auf dem Laufenden zu bleiben, kann man die neu erscheinenden RFCs abonnieren.
Dazu sendet man eine E-Mail an &lt;a href=&#34;mailto:RFC-REQUEST@NIC.DDN.MIL&#34;&gt;RFC-REQUEST@NIC.DDN.MIL&lt;/a&gt;

, die die eigene Netzadresse enthält.
Diese Adresse wird dann in einen Verteiler übernommen und fortan bekommt man alle neuen RFCs per E-Mail zugestellt.
Vorausgegangene RFCs sind in verschiedenen Archiven zu bekommen.
Eine Liste dieser Archive und eine Anleitung, wie man die betreffenden Dokumente bekommen kann, kann per FTP als isi.edu:/in-notes/rfc-retrieval.txt bezogen werden.
Alternativ kann man auch eine E-Mail an &lt;a href=&#34;mailto:rfc-info@isi.edu&#34;&gt;rfc-info@isi.edu&lt;/a&gt;

 senden, die als Nachrichtentext nur die eine Zeile &amp;ldquo;help: ways_to_get_rfcs&amp;rdquo; (ohne die Anführungszeichen) enthält.
Die RFCs bis Nummer 1357 sind außerdem auf der Desktop Library CD von Walnut Creek enthalten.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Betriebssysteme</title>
      <link>https://blog.koehntopp.info/1992/03/17/betriebssysteme.html</link>
      <pubDate>Tue, 17 Mar 1992 09:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/1992/03/17/betriebssysteme.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abgeschickt an die c&amp;rsquo;t am 17. März 1992.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Aus technischen Gründen stehen die Abbildungen zu diesem Artikel nicht im Web zur Verfügung.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#betr%c3%bcbssysteme&#34;&gt;Text des Artikels&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#glossar&#34;&gt;Glossar&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;betrübssysteme&#34;&gt;
    &lt;a href=&#34;#betr%c3%bcbssysteme&#34;&gt;
	Betrübssysteme
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h4 id=&#34;jeder-hat-eines-angeblich-kennt-sich-kaum-einer-wirklich-damit-aus-und-natürlich-ist-meines-besser-als-deines-die-rede-ist-von-betriebssystemen&#34;&gt;
    &lt;a href=&#34;#jeder-hat-eines-angeblich-kennt-sich-kaum-einer-wirklich-damit-aus-und-nat%c3%bcrlich-ist-meines-besser-als-deines-die-rede-ist-von-betriebssystemen&#34;&gt;
	Jeder hat eines, angeblich kennt sich kaum einer wirklich damit aus und natürlich ist meines besser als Deines. Die Rede ist von Betriebssystemen.
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Das Betriebssystem ist das Grundprogramm eines Rechners.
Es wird beim Einschalten des Rechners gestartet und erst beim Abschalten wieder beendet.
Entsprechend seiner Funktion als Zwischenstück zwischen der realen Welt der konkreten Hardware und der abstrakten Welt der Algorithmen ist seine Aufgabe eine doppelte:
Für alle Benutzer eines Rechners teilt es die Rechenleistung, den Speicher und die Geräte der Maschine fair zwischen ihnen auf.
Es verhindert, so ist zumindest die Theorie, ungewollte Beeinflussung der verschiedenen Programme auf einem Rechner untereinander.
Für ein einzelnes Programm ist das Betriebssystem mehr wie eine große Befehlsbibliothek, die die doch recht sparsame Maschinensprache eines Rechners um so wirksame Funktionen wie &amp;ldquo;mehr Speicher zur Verfügung stellen&amp;rdquo;, &amp;ldquo;Satz aus einer Datei lesen&amp;rdquo; oder gar &amp;ldquo;diesen Bildschirmaufbau präsentieren und Ergebnis der Benutzeraktion hier abliefern&amp;rdquo; erweitert.&lt;/p&gt;
&lt;h2 id=&#34;mit-gespaltener-zunge&#34;&gt;
    &lt;a href=&#34;#mit-gespaltener-zunge&#34;&gt;
	Mit gespaltener Zunge
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Diese doppelte Aufgabenstruktur des Aufteilens und Multiplexens von knappen Betriebsmitteln auf der einen Seite und des Verbergens von lästigen Details aus der realen Welt vor den Anwendungen auf
der anderen Seite bestimmt die Struktur eines Betriebssystems.
Die Betriebsmittel, die ein Betriebssystem verwaltet, lassen sich grob in drei Gruppen unterteilen:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Zum ersten ist da - aus der Hardwaresicht - der Prozessor.
Er ist die einzig aktive Komponente des Systems und zudem in den meisten Fällen leider nur einmal vorhanden.
Aus der abstrakteren Sicht der Software erscheint er als Thread (&amp;ldquo;Kontrollfluß&amp;rdquo;) eines Programmes.
Ein gutes Betriebssystem wird die kostbare - weil seltene - Prozessorhardware multiplexen, um mehr als einen Kontrollfluß zur Zeit ablaufen zu lassen.&lt;/li&gt;
&lt;li&gt;Zum zweiten gibt es den Arbeitsspeicher.
Damit der Prozess ablaufen kann, müssen er selbst und seine Daten irgendwo gespeichert werden.
Realer Speicher in Form von RAM hat irgendwelche Adressen und ist nicht notwendigerweise mit den von der Anwendung benötigten Eigenschaften (&amp;ldquo;an einem Stück&amp;rdquo;, &amp;ldquo;an einer bestimmten Stelle&amp;rdquo;) vorhanden.&lt;br&gt;
Es ist Aufgabe des Betriebssystems, mit Unterstützung einer MMU diese Anforderungen zu erfüllen.
Andererseits muß aber verhindert werden, daß ein Prozess mehr als den ihm zugesicherten Speicher benutzt und dadurch eventuell andere Prozesse in ihrem Ablauf stört.
Das Betriebssystem muß die images (&amp;ldquo;Laufzeitbilder&amp;rdquo;) verschiedener Programme verwalten.&lt;/li&gt;
&lt;li&gt;Und zum dritten sind auch noch Ein/Ausgabegeräte verschiedenster Art zu verwalten.
Einige dieser Geräte, zum Beispiel Drucker oder Bandlaufwerke, sind nur von einem Prozess zur Zeit nutzbar.
In diesem Fall muß das Betriebssystem den Zugriff auf diese Geräte zuteilen - etwa über einen Druckerspooler oder durch Locks.
Andere Geräte, Festplatten beispielsweise, können aufgeteilt werden.
Hier muß das Betriebssystem einen entsprechenden Dienst zur Verfügung stellen - im Beispiel wäre dies ein Dateisystem.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ein Betriebssystem stellt dem Anwendungsprogramm, wie bereits festgestellt, verschiedene Dienste zur Verfügung.
Allerdings gibt es verschiedene Konzepte bei den Betriebssystem-Herstellern, wie diese Dienste in Anspruch zu nehmen sind.&lt;/p&gt;
&lt;h2 id=&#34;message-passing&#34;&gt;
    &lt;a href=&#34;#message-passing&#34;&gt;
	Message passing
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ältere Betriebssysteme wie MS-DOS, aber auch UNIX und OS/2, stellen Dienste des Systems per Prozeduraufruf zur Verfügung.
Ob der Funktionsaufruf dabei durch einen Unterprogrammaufruf wie bei OS/2 oder durch einen Software-Interrupt wie bei MS-DOS und UNIX erfolgt, ist dabei zunächst nebensächlich.
Wesentlich ist, daß der Kontrollfluß des Prozesses auf das Betriebssystem über geht.
Diese Art des Dienstaufrufes hat aber einige Eigenschaften, die auf den ersten Blick als selbstverständlich, auf den zweiten Blick aber eher als unerwünscht gelten können:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ein solcher Unterprogrammaufruf ist immer synchron:
Das eigene Programm wartet solange, bis der Betriebssystemaufruf beendet ist.
Bei einigen Systemaufrufen, die mit Ein-/Ausgabefunktionen zu tun haben, könnte es aber vorteilhaft sein, daß das eigene Programm zwar den Wunsch nach bestimmten Daten absetzt, aber dann
erst einmal selbst weiterläuft und später nachsieht, ob die Daten denn jetzt zur Verfügung stehen.&lt;/li&gt;
&lt;li&gt;Durch einen Unterprogrammaufruf wird außerdem stillschweigend vorausgesetzt, daß das Betriebssystem den Dienst auf derselben CPU wie die Anwendung erbringt.
Eine Funktion &amp;ldquo;Fourieranalyse der Daten in diesem Puffer&amp;rdquo; unter Benutzung der wesentlich schnelleren Hardware eines Signalprozessors ist auf diese Weise nicht mit Unterstützung des Betriebssystems möglich - der Anwendungsprogrammierer muß das selbst hinbasteln.&lt;/li&gt;
&lt;li&gt;Wenn der Dienstaufruf dann auch noch durch einen gewöhnlichen Unterprogrammaufruf geschieht, ist es einer Anwendung möglich, außer den definierten Betriebssystemfunktionen auch noch andere, nicht dokumentierte Funktionen aufzurufen, in dem nicht zugelassene Sprungadressen
benutzt werden.
Es soll sogar Systeme geben, auf denen dies die gängige Praxis ist.
Der Systemsicherheit und der späteren Erweiterbarkeit ist eine so etwas natürlich nicht
dienlich.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Moderne Betriebssystemarchitekturen, allen voran Mach auf dem NeXT, aber auch Tanenbaums Amoeba oder Plan9 von AT&amp;amp;T, sind deswegen nach dem Client-Server Modell aufgebaut:
Die Dienste des Systems stehen dabei an Serverprozessen zur Verfügung.
Der Aufrufer sendet dem Server eine Nachricht (request-message), die von diesem ausgewertet wird.
Das Resultat wird dem Absender in einer Antwortnachricht (reply-message) zugestellt.&lt;/p&gt;
&lt;p&gt;Der Server ist dabei kein Teil des Betriebssystems selbst, sondern ein normaler Prozess, der möglicherweise einige zusätzliche Privilegien gegenüber gewöhnlichen Anwendungen hat.
Dazu gehört etwa die Zugriffsmöglichkeit auf einige Hardwareregister.
Das eigentliche Betriebssystem ist dann auf die allerwesentlichsten Funktionen reduziert:
Es verwaltet lediglich die Umschaltung zwischen den verschiedenen Prozessen, den lokalen Speicher des Systems und natürlich den Versand der Messages.
Alle anderen Dienste werden durch leicht austauschbare Serverprozesse realisiert.&lt;/p&gt;
&lt;p&gt;Dieses Modell des Dienstaufrufes hat nicht die Nachteile des Unterprogrammaufrufes:
Die Dienstleistungen des Systems können asynchron in Anspruch genommen werden, indem die Anwendung beispielsweise eine Nachricht mit einem Lesekommando an den Fileserver sendet, dann aber weiterarbeitet.
Später, wenn die Daten benötigt werden, sieht die Anwendung nach, ob die Antwort des Servers schon vorliegt.
Wenn ja, kann ohne Pause weitergearbeitet werden, ansonsten muß die Anwendung (wie beim Dienstaufruf durch Sprung in ein Unterprogramm auch) warten.&lt;/p&gt;
&lt;p&gt;Für die Anwendung ist es egal, ob der angeforderte Dienst lokal auf der eigenen CPU vorhanden ist oder ob ein Server über ein Netz auf einem anderen Rechner läuft.
Die Netzadresse mag sich ändern, aber der Aufrufmechanismus bleibt derselbe.
Unterschiedliche Datenformate, Maschinensprachen oder Aufrufkonventionen werden durch den Message-Mechanismus verborgen.&lt;/p&gt;
&lt;p&gt;Auch kann das Verhalten den Servers, der ja von seinem Client vollständig getrennt ist, genau durch seine Reaktion auf die verschiedenen Kommandonachrichten beschrieben werden.
Für den Client ist der Server auf jeden Fall eine Black Box.
Unsaubere Gemeinheiten wie das heimliche Auslesen von undokumentierten Variablen oder der Sprung in interne Funktionen, die eine Anwendung eigentlich nicht kennen geschweige denn aufrufen sollte, sind nicht mehr machbar, denn der Server läuft in einem vom Client vollständig getrennten Adreßraum oder sogar auf einer ganz anderen Maschine in einem Netz.&lt;/p&gt;
&lt;h2 id=&#34;rechenleistung-verteilen&#34;&gt;
    &lt;a href=&#34;#rechenleistung-verteilen&#34;&gt;
	Rechenleistung verteilen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wie oben erwähnt gibt es Systemzustände, in denen der Rechner ein Programm nicht fortsetzen kann, weil es auf irgendwelche Ereignisse (das Eintreffen von Daten von einem Gerät, das Erreichen einer bestimmten Zeit etc.) wartet.
Offenbar reicht ein einzelnes Programm nicht aus, einen Prozessor durchgehend zu beschäftigen.
Bei genauerer Untersuchung stellt sich sogar heraus, daß die meisten Programme mehr als 90 % ihrer realen Laufzeit in derartigen Wartezuständen zubringen.&lt;/p&gt;
&lt;p&gt;Aus dieser Beobachtung heraus ist das Konzept des Multitasking geboren worden.
In regelmäßigen Zeitabständen wird das laufende Programm unterbrochen, sein augenblicklicher Zustand wird eingefroren.
Der Scheduler des Betriebssystems wählt dann einen anderen Prozess aus, dessen Zustand aufgetaut wird und der dann für die Dauer der nächsten Zeitscheibe zum Ablauf kommt.
Ein Scheduler, der mit Zeitscheiben arbeitet, heißt &amp;ldquo;preemptive&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Viele Betriebssysteme, die nachträglich auf Multitasking nachgerüstet worden sind, haben keinen solchen Scheduler, sondern sind darauf angewiesen daß ein Task den Prozessor freiwillig hergibt.
Das kann ausdrücklich durch den Aufruf einer &lt;code&gt;schedule()&lt;/code&gt;-Funktion in regelmäßigen Abständen geschehen oder versteckt, indem man im Betriebssystem am Ende jeder Systemfunktion einen Aufruf des Schedulers vor dem Verlassen des Betriebssystems einsetzt.
Eine solche Form von Multitasking nennt man &amp;ldquo;kooperativ&amp;rdquo; oder &amp;ldquo;non-preemptive&amp;rdquo;.
Bei einem System mit kooperativem Multitasking kann die Umschaltung für den Benutzer aber leicht schwerfällig wirken, wenn rechenintensive Anwendungen laufen, die selten Systemaufrufe tätigen.&lt;/p&gt;
&lt;p&gt;Einer der schwersten Fehler, den ein Programmierer auf einem Rechner mit Multitasking-Betriebssystem machen kann, ist es, in einer aktiven Warteschleife auf das Eintreffen eines Ereignisses zu warten (&amp;ldquo;busy waiting&amp;rdquo;).
Die Effektivität von Multitasking beruht ja gerade darauf, daß Prozesse, die gerade keine echte Arbeit zu tun haben, stillgelegt werden und vom Betriebssystem erst dann wieder Rechenzeit zugeteilt bekommen, wenn sie etwas damit anfangen können.&lt;/p&gt;
&lt;p&gt;Deswegen ist es fast unmöglich, ein Betriebssystem wie beispielsweise MS-DOS nachträglich multitaskingfähig zu machen oder in einer Multitaskingumgebung (z.B. eine DOS-Box in UNIX oder OS/2) zu betreiben.
Nahezu jedes Programm, angefangen vom Kommandointerpreter der Shell, &amp;ldquo;verbrät&amp;rdquo; die ihm zugeteilte Rechenzeit vollständig in Zeicheneinleseroutinen und anderen engen Warteschleifen, anstatt diese anderen Programmen zur Verfügung zu stellen.
MS-DOS Prozesse sind gewissermaßen immer im Zustand &amp;ldquo;ready&amp;rdquo;.
Wenn man einem solchen System nachträglich eine Multitaskingerweiterung überstülpt, fehlt diesem System notgedrungen der Zustand &amp;ldquo;sleeping&amp;rdquo;, und jeder laufende Prozess erhält genau 1/ntel der Gesamtleistung der CPU - selbst dann, wenn er eigentlich gar nichts damit anfangen könnte.&lt;/p&gt;
&lt;p&gt;Nach welcher Strategie die &lt;code&gt;schedule()&lt;/code&gt;-Funktion letztendlich bestimmt, welcher Prozess aus der &amp;ldquo;ready&amp;rdquo;-Queue in den Zustand &amp;ldquo;running&amp;rdquo; gehen darf und damit auf die CPU gelangen kann, hängt stark von den gewünschten Eigenschaften des Systems ab.
Der einfachste Zuteilungsalgorithmus ist das &amp;ldquo;round-robin&amp;rdquo;-Verfahren.
Dabei wird die zur Verfügung stehende CPU-Zeit gleichmäßig zwischen allen Prozessen aufgeteilt, die sich darum bewerben.
Alle diese Prozesse kommen reihum auf die CPU - daher der Name.&lt;/p&gt;
&lt;p&gt;Oft wird dieses Verfahren noch so erweitert, daß man Prozesse unterschiedlicher Priorität unterscheidet.
Der Scheduler von AmigaOS, aber auch der von VAX/VMS, ist ein Round-Robin Scheduler mit Prioritäten.
Das bedeutet: Der Ringtausch der Prozesse auf der CPU funktioniert innerhalb der höchsten vorhandenen Prioritätsebene.
Erst wenn alle Prozesse einer höheren Prioritätsebene aus der Ready-Queue entfernt sind, etwa weil sie terminiert sind oder weil sie auf ein Ereignis warten und deswegen stillgelegt sind, kommen
Prozesse mit niederen Prioritäten auf die CPU.&lt;/p&gt;
&lt;p&gt;Andererseits kann ein CPU-intensiver Prozess mit einer hohen Priorität den Rest des Systems recht schwerfällig machen oder gar blockieren.
Gelegentlich (bei Echtzeitanwendungen zum Beispiel) ist dieser Effekt erwünscht:
Man geht davon aus, daß ein Prozess mit einer hohen Priorität die Rechenzeit, die er beansprucht, auch unbedingt und gerade zu diesem Zeitpunkt benötigt.
Im allgemeinen Fall allerdings möchte man eine Lösung haben, die auch dann noch eine gewisse
Fairness gewährleistet, wenn ein Programm böswillig Rechenzeit schluckt.
In UNIX zum Beispiel sind die Prioritäten von Prozessen nicht fest, sondern hängen davon ab, wie lange der Prozess schon in der Warteschlange steht und wie CPU-intensiv er ist.&lt;/p&gt;
&lt;p&gt;Prozesse, die frühzeitig die CPU verlassen (etwa weil sie viel I/O machen und deswegen häufig im Zustand &amp;ldquo;sleeping&amp;rdquo; sind) bekommen ihre Restzeit als Bonus für die nächste Zeitscheibe gutgeschrieben, der in die Berechnung der Priorität eingeht.
Dadurch bekommen solche Prozesse automatisch eine bessere Priorität als solche, die die Zeitscheiben immer voll ausnutzen.&lt;/p&gt;
&lt;p&gt;Prozesse, die lange in der Ready-Queue gestanden haben (weil sie eine schlechte Priorität haben), werden temporär aufgewertet, damit sie auch eine Chance haben, einmal zum Ablauf zu kommen (priority aging).&lt;/p&gt;
&lt;h2 id=&#34;synchronisation&#34;&gt;
    &lt;a href=&#34;#synchronisation&#34;&gt;
	Synchronisation
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Eines der zentralen Probleme in einem System, in dem mehr als ein Programm zur Zeit aktiv sein kann, ist die Synchronisation von Prozessen bzw. der gegenseitige Ausschluß von Prozessen, die auf einen gemeinsamen Datenbereich zugreifen.
Gemeinhin löst man in der Information ein solches Problem mit Semaphoren:
Man definiert sich ein Flag, das anzeigt, ob ein Datenbereich zur Zeit &amp;ldquo;frei&amp;rdquo; oder &amp;ldquo;in Bearbeitung&amp;rdquo; ist, und zwei Operationen zum Setzen bzw. Löschen dieses Flags.
Der Punkt ist, daß diese Operationen atomar sein müssen, das heißt, die Semaphor-Setzfunktion und die Löschfunktion dürfen auf keinen Fall unterbrochen werden.&lt;/p&gt;
&lt;p&gt;Auf Rechnern mit nur einem Prozessor läßt sich dieses Problem recht leicht dadurch lösen, daß man in diesen beiden Funktionen kurze Zeit sämtliche Unterbrechungen verbietet und die gewünschte Operation durchführt.
Auf Mehrprozessorsystemen nützt dies natürlich nichts mehr, denn während der eine Prozessor den Semaphor bearbeitet, kann ein anderes Programm auf einem anderen Prozessor dasselbe tun.
Hier ist das Betriebssystem auf die Unterstützung der Hardware angewiesen, die nicht unterbrechbare Semaphor-Operationen schon als Prozessorbefehl anbieten muß.
Prozessoren wie der 680x0 und der 80x86 haben solche Operationen bereits eingebaut:
Der TAS-Befehl des 680x0 führt zum Beispiel eine solche Semaphor-Operation in einem nicht unterbrechbaren Read-Modify-Write-Zyklus aus, und der 80x86 kennt das LOCK-Prefix für eine ganze Reihe von Befehlen, die dann ebenfalls nicht unterbrechbar werden.&lt;/p&gt;
&lt;h2 id=&#34;speicher-auf-kredit&#34;&gt;
    &lt;a href=&#34;#speicher-auf-kredit&#34;&gt;
	Speicher auf Kredit
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Eine andere nützliche Sache, die einen sicheren Multitasking-Betrieb unterstützt, ist in den neueren
Prozessoren der verschiedenen Hersteller ebenfalls gleich mit eingebaut:
Alle diese Geräte haben eine PMMU, das bedeutet, sie sind in der Lage, physikalisch vorhandenes RAM an jeder beliebigen Stelle des Adreßraumes der CPU einzublenden und die Speicherzugriffe eines jeden Programmes genau zu kontrollieren.&lt;/p&gt;
&lt;p&gt;Auf diese Weise läßt sich ein Prozess in seinem eigenen Speicher einzäunen.
Zwar erlaubt man ihm, auf den eigenen vom System angeforderten Speicher zuzugreifen, doch sobald versucht wird, auf andere, nicht erlaubte Speicherbereiche zuzugreifen, wird der Prozess unterbrochen und das Betriebssystem übernimmt die Kontrolle (&amp;ldquo;memory protection&amp;rdquo;, &amp;ldquo;Speicherschutz&amp;rdquo;).
Es kann den problematischen Prozess stillegen und ein Image seines Zustandes zur späteren Fehlersuche auf Platte ablegen.
Auf diese Weise verhindert man zwar nicht, daß ein fehlerhaftes Programm abstürzt, aber immerhin wird sichergestellt, daß keine anderen Programme in Mitleidenschaft gezogen werden.&lt;/p&gt;
&lt;p&gt;Die MMU-Hardware kann man auch dazu benutzen, dem Programm mehr RAM vorzuspiegeln, als tatsächlich in der verwendeten Maschine vorhanden ist (&amp;ldquo;virtual memory&amp;rdquo;).
Die meisten Programme brauchen nicht alle ihre Daten und ihren gesamten Code zur gleichen Zeit, sondern sind oft nur in einem kleinen, eng begrenzten Speicherbereich (dem &amp;ldquo;working set&amp;rdquo;) aktiv.
Je nach Benutzung des Programmes verschiebt sich dieser Bereich von Zeit zu Zeit, aber im Prinzip würde ein kleiner Speicherbereich ausreichen, um das ganze Programm ablaufen zu lassen.&lt;/p&gt;
&lt;p&gt;Betriebssysteme wie UNIX unterteilen deswegen den gesamten Speicher der Maschine in Seiten fester Größe - bei einer 80386 CPU zum Beispiel werden durch die Hardware Pages von 4 KB Größe vorgegeben.
Nicht alle Speicherseiten eines Prozesses sind gleichzeitig im RAM, sondern Teile davon befinden sich in der &amp;ldquo;paging area&amp;rdquo;, einem abgeteilten Bereich einer Festplatte.
Wenn ein Prozess versucht, eine Speicherseite anzusprechen, die gerade nicht präsent ist, generiert die MMU wieder eine Unterbrechung (&amp;ldquo;page fault&amp;rdquo;) und läßt das Betriebssystem zum Zuge kommen.
Dieses sucht jetzt eine andere Speicherseite, die möglichst lange nicht benutzt worden ist, speichert diese in der Paging Area zwischen, adressiert sie um und stellt sie dann dem unterbrochenen Prozess an der richtigen Adresse und mit dem richtigen Inhalt, der inzwischen von der Platte geladen wurde, zur Verfügung.
Dieser wird nach der kurzen Unterbrechung dann fortgesetzt.&lt;/p&gt;
&lt;p&gt;Wenn genug Speicher vorhanden ist, um die aktiven Teile der verschiedenen lauffähigen Prozesse gleichzeitig im Speicher zu halten, fallen die kurzen Unterbrechungen beim Paging nicht weiter  ins Gewicht.
Wenn der Rechner jedoch überlastet wird und für die Anzahl der gleichzeitig laufenden Prozesse zu wenig Speicher hat, fängt er an, auch Teile von Prozessen auf Platte auszulagern, die gleich wieder geladen werden müssen.
Die Rechenleistung der Maschine fällt plötzlich um einige Zehnerpotenzen, und die Antwortzeiten auf ein simples Return an der Console liegen auf einmal im Minutenbereich.
Man bezeichnet diesen Vorgang als &amp;ldquo;treshing&amp;rdquo; (dreschen), und die Abhilfe bei diesem Problem ist simpel: Man lege einige Megabytes RAM nach.&lt;/p&gt;
&lt;h2 id=&#34;konsequent-weiter-gedacht&#34;&gt;
    &lt;a href=&#34;#konsequent-weiter-gedacht&#34;&gt;
	Konsequent weiter gedacht
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wenn ein neuer Prozess gestartet wird, muß er zunächst einmal in den Speicher geladen werden.
Verwendet man jedoch das eben erläuterte Virtual-Memory-Schema, bei dem jede Speicherseite des virtuellen Adreßraums genau einer Speicherseite auf der Platte entspricht, muß der Code eines  Prozesses nicht nur in den Speicher kopiert, sondern auch noch in den Paging-Bereich der Platte geschrieben werden.
Zudem werden Speicherseiten, die Code enthalten, nie geändert, so daß eigentlich gar keine private Kopie des Codes in der Paging Area angelegt werden muß.
VMS, aber auch einige neuere UNIX-Versionen und natürlich modernere Systeme wie Mach und Chorus verwenden hier einen intelligenteren Algorithmus:
Seiten mit Programmcode, die aus dem physikalisch vorhandenen Speicher verdrängt werden, werden einfach ohne Zurückschreiben aufgegeben und später aus der Programmdatei wieder nachgeladen (&amp;ldquo;paging from file&amp;rdquo;).
Dadurch entfällt beim Starten eines Programmes das Umkopieren in die Paging Area, und der Paging-Bereich wird weniger stark belastet.&lt;/p&gt;
&lt;p&gt;Die Autoren von Mach und Chorus haben diese Idee konsequent weiter gedacht:
Diese beiden Betriebssysteme können das auch mit Daten machen, die mit read() und write() aus Dateien gelesen oder geschrieben werden.
Dateien, die aus Datensätzen fester Länge bestehen, sind schließlich nur der Sonderfall eines Arrays:
In PASCAL kann man das sogar noch in der Definition sehen.&lt;/p&gt;
&lt;p&gt;Mit Hilfe der MMU blendet man einen Speicherbereich von der Größe der Datei, die verarbeitet werden soll, in den Adreßraum des Prozesses ein (&amp;ldquo;memory mapped file&amp;rdquo;).
Für den Prozess ist die Basis dieses Speicherbereiches die Startadresse eines ganz normalen Arrays. Versucht der Prozess, auf dieses Array zuzugreifen, kommt es zu einem Page Fault.
Das Betriebssystem hat diesen Speicherbereich mit einer Datei assoziiert und lädt jetzt die entsprechenden Dateiinhalte in die angesprochenen Speicherseiten, mit denen der Prozess dann wie bei einem normalen Arrayzugriff arbeitet.
Beim Schließen der Datei wird der Speicherbereich wieder aus dem Adreßraum des Prozesses ausgeblendet, und alle Modifikationen werden spätestens zu diesem Zeitpunkt in die Datei zurückgeschrieben.&lt;/p&gt;
&lt;p&gt;Auf diese Weise werden spezielle Dateioperationen in einer Programmiersprache überflüssig;
Dateien werden wieder zu dem, was sie eigentlich sind:
Arrays dynamischer Länge, deren Inhalt über die Laufzeit eines Prozesses hinaus Bestand hat.
Der Programmierer einer Anwendung braucht sich nicht mehr um das Lesen und Schreiben von Daten in Puffer zu kümmern, er greift einfach darauf zu.
Das tatsächliche Bereitstellen der Daten und das Zurückschreiben auf Platte geschieht durch das Betriebssystem, ohne daß er etwas damit zu tun hätte.&lt;/p&gt;
&lt;h2 id=&#34;inflation-der-programmzähler&#34;&gt;
    &lt;a href=&#34;#inflation-der-programmz%c3%a4hler&#34;&gt;
	Inflation der Programmzähler
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Bis jetzt sind wir stillschweigend davon ausgegangen, daß ein Prozess genau einen Kontrollfluß hat.
Bei den meisten Betriebssystemen ist das auch noch so, obwohl eine Verallgemeinerung möglich ist und bei moderneren Entwicklungen auch durchgeführt worden ist.
Es ist durchaus sinnvoll, daß im Image eines Prozesses mehr als ein Kontrollfluß (&amp;ldquo;Thread&amp;rdquo;) aktiv ist.
Man stelle sich beispielsweise eine Tabellenkalkulation vor, die in einer Warteschleife auf Nachrichteneines Menüsystems wartet.
Wenn der Benutzer jetzt einen Menüpunkt anwählt, der längere Zeit zur Durchführung braucht (etwa das Neuberechnen des gesamten Blattes), kann im Prozess ein Thread dafür abgespalten werden, während der andere Thread schon wieder in der Warteschleife bereitliegt, um neue Benutzerkommandos entgegen zu nehmen.&lt;/p&gt;
&lt;p&gt;Die Erzeugung eines Threads ist - verglichen mit der eines eigenständigen Prozesses - relativ wenig aufwendig.
Ein Thread ist kaum mehr als einige Prozessorregister und ein eigener Stackbereich, während an einem Prozess noch ungezählte Tabellen für MMU-Konfiguration, offene Dateien, etc. hängen.
Beim kommerziellen Chorus-System hat man diese Trennung zwischen Speicherverwaltung und Kontrollflußverwaltung auch begrifflich deutlich machen wollen:
Ein Kontrollfluß ist bei Chorus ein Thread, der zugehörige Kontext heißt Actor und ein Actor mit
mindestens einem Thread bildet einen Prozess.
Die Kommunikation und der Datentausch zwischen Threads sind fast ohne Aufwand möglich:
Da Threads im selben Adreßraum liegen, können sie auf dieselben gemeinsamen Variablen zugreifen, ohne auf langsame und aufwendige Mechanismen zur Prozesskommunikation zurückgreifen zu müssen.&lt;/p&gt;
&lt;h2 id=&#34;daten-über-die-grenze-schaffen&#34;&gt;
    &lt;a href=&#34;#daten-%c3%bcber-die-grenze-schaffen&#34;&gt;
	Daten über die Grenze schaffen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Bei Prozessen, die in verschiedenen, durch die Schutzmechanismen des Betriebssystems getrennten Adreßräumen liegen, sind der Datentausch und die Kommunikation untereinander schon aufwendiger.
Einem gemeinsamen Adreßraum am nächsten kommt noch &amp;ldquo;shared memory&amp;rdquo;.
Dabei wird eine Speicherseite, die verschiedene Variablen enthalten kann, in die Adreßräume der beteiligten Kommunikationspartner eingeblendet.
Diese sind allerdings voll verantwortlich für die Regelung des Zugriffs auf diese Speicherbereiche, die Freigabe, wenn sie nicht mehr benutzt werden, etc.&lt;/p&gt;
&lt;p&gt;Viele Betriebssysteme stellen deswegen höher entwickelte, aber auch langsamere Kommunikationsmöglichkeiten zur Verfügung.
Am häufigsten findet sich ein Message-System, bei dem eine Art FIFO-Struktur realisiert wird.
Jeder Prozess hat, wenn er Nachrichten entgegennehmen möchte, einen sogenannten Port, an den andere Prozesse Nachrichten senden können.
Treffen die Nachrichten schneller ein, als der Prozess sie abarbeiten kann, bildet sich am Port eine Queue mit FIFO-Struktur.
Der empfangende Prozess arbeitet die Nachrichten jetzt in der Reihenfolge ab und sendet die Antworten an die Absender zurück.&lt;/p&gt;
&lt;p&gt;Hier kann das Betriebssystem schon einen guten Teil der Zugriffsregelung, der Speicherverwaltung und der Adreßauflösung übernehmen.
Wenn der Message-Mechanismus nämlich allgemein genug implementiert wird, muß der Message-Port des Empfängers nicht unbedingt auf der eigenen Maschine sein, sondern kann sich irgendwo im Netz befinden.
Ist der Empfänger lokal erreichbar, kann die Nachricht ohne Kopieren einfach in seinen Adreßbereich eingeblendet werden.
Andernfalls muß sie &amp;ldquo;by value&amp;rdquo; über das Netz kopiert werden.
Der Benutzer des Message-Systems merkt davon nichts, für ihn sind diese lästigen Details verborgen.
Das geht bei Chorus dann sogar soweit, daß Ports von einem Prozess zu einem anderen migrieren können, ohne daß sendende Prozesse von diesem Wechsel des Empfängers etwas merken.
Derartige Features erleichtern dem Programmierer von &amp;ldquo;fault tolerant systems&amp;rdquo; die Arbeit natürlich ungemein.&lt;/p&gt;
&lt;p&gt;Noch viel wichtiger als ein Mechanismus zur Kommunikation zwischen Prozessen ist jedoch, daß ein einheitliches, erweiterbares Format zum Datentausch besteht.
Es genügt nicht, daß das Betriebssystem Dienste zum Verschieben von Bytes zwischen einem oder mehreren Prozessen zur Verfügung stellt.
Der Empfänger muß auch in der Lage sein, diese Bytes als eine bestimmte Datenstruktur, etwa einen Bildausschnitt oder einen Text mit Steuerinformationen, zu deuten.
Wenn das Betriebssystem ein durch Subklassen erweiterbares Format für die verschiedenen am häufigsten auftretenden Datentypen bereitstellt, leistet es einen wesentlichen Teil zur Vereinheitlichung der Datenformate der Applikationen, die auf diesem Betriebssystem ablaufen.&lt;/p&gt;
&lt;p&gt;Wichtig für die Funktionsfähigkeit eines solchen Datenformates ist, und das soll noch einmal besonders herausgestellt werden, daß es von seinem Benutzer unter Wahrung der Abwärtskompatibilität erweiterbar ist.
Ein Benutzer eines Textverarbeitungsformates, beispielsweise ein DTP-Programm, muß in der Lage sein, seine programmspezifischen Zusatzinformationen in einem Text abzulegen.
Andere Anwendungen, die dieses Textformat lesen können, müssen trotzdem in der Lage sein, die Standardattribute eines Textes aus so einer Datei herauszulesen und die Nichtstandardattribute unverändert weiter zu kopieren.
Eine Anwendung, die ein zusammengesetztes Format schreibt, z.B. eine Animation oder ein Text mit Bildern, muß dies in einer Art und Weise tun können, die es anderen Anwendungen erlaubt, die Komponenten dieser Daten (etwa Einzelbilder) gezielt zu lesen, zu verarbeiten und wieder in die Gesamtdatei zu integrieren.&lt;/p&gt;
&lt;p&gt;Funktionsbibliotheken, die die Arbeit mit solchen Dateiformaten unterstützen, gehören zwar nicht zu den unmittelbaren (Kern-) Dienstleistungen eines Betriebssystems, aber sie sollten auf jeden Fall zu seinem Standardfunktionsumfang gehören, um eben eine Einheitlichkeit in den Datenformaten bei den Anwendungen zu begünstigen.&lt;/p&gt;
&lt;h2 id=&#34;einheitlichkeit---das-zweite-ziel&#34;&gt;
    &lt;a href=&#34;#einheitlichkeit---das-zweite-ziel&#34;&gt;
	Einheitlichkeit - das zweite Ziel
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Einheitlichkeit beim Zugriff auf die vom System bereitgestellten Dienste zu ermöglichen, ist, wie bereits am Anfang dieses Textes dargestellt, neben der Verteilung von Ressourcen eine der Hauptaufgaben eines Betriebssystems.
Ziel soll es sein, Anwendungen eine virtualisierte Umgebung bereitzustellen, die zwar die Nutzung der speziellen Möglichkeiten dieses konkreten Systems möglichst wenig einschränkt, aber zugleich eine einheitliche, virtuelle Maschine über die Grenzen verschiedener Systemkonfigurationen oder gar verschiedener Hardwareplattformen hinweg ermöglicht.&lt;/p&gt;
&lt;p&gt;Betriebssysteme wie UNIX und seine Abkömmlinge tun dies beispielsweise, in dem sie den meisten Systemdiensten das Dateiparadigma überstülpen:
Pipelines, zeichen- und blockorientierte Geräte, Querverweise auf andere Dateien, Netzwerkdienste - alles dies ist als Eintrag im hierarchischen Namensraum des Dateisystems zu finden.&lt;/p&gt;
&lt;p&gt;In Mach, aber auch in Plan9 und in den neuesten Versionen von UNIX, ist dieses Konzept noch  Verallgemeinert worden, indem von der Möglichkeit Gebrauch gemacht wurde, die unterschiedlichsten Typen von Dateisystemen in den Namensraum zu integrieren.
So gibt es bei System V Rel. 4 ein &lt;code&gt;/proc&lt;/code&gt;-Dateisystem, in dem die zur Zeit im Rechner laufenden Prozesse als Dateieinträge sichtbar gemacht werden.&lt;/p&gt;
&lt;p&gt;Amoeba, ein experimentelles Betriebssystem von Tanenbaum, treibt es jedoch auf die Spitze.
In Amoeba sind alle Dienste - also das Bereitstellen der Informationen in einer Datei, Pipelines, Prozesskommunikation, etc. - unter einer Kennung zu erreichen, die das jeweils angesprochene Objekt (die Datei, den Prozess, &amp;hellip;) eindeutig identifiziert.
Diese Kennung beinhaltet zugleich die Kodierung der Zugriffsrechte, die Adresse des Objektes im System und noch einige Informationen mehr.
Die vom Betriebssystem verwalteten Objekte werden durch einen Directory-Service miteinander zu einer Struktur verknüpft, die nicht mehr auf die baumartige Hierarchie eines UNIX-Dateisystems beschränkt ist, sondern jeden beliebigen, gerichteten Graphen modellieren kann.
Da der Directory-Service selbst wieder ein Objekt im Amoeba-System ist, ergibt sich, ähnlich wie beim UNIX-Dateisystem, eine interessante, rekursiv definierte Struktur.&lt;/p&gt;
&lt;p&gt;Eine andere Möglichkeit der Virtualisierung ist die Abstraktion von einem konkreten Gerät zu seinen Möglichkeiten.
In UNIX gibt es zum Beispiel die curses-Bibliothek, die es ermöglicht, ein Terminal unabhängig von den Steuercodes, die es verwendet, zu programmieren.
Windows, OS/2, AmigaDOS und andere Betriebssysteme leisten ähnliches bei der Ansteuerung von Druckern.
Statt daß die Anwendung einem bestimmten Drucker an der parallelen Schnittstelle einen bestimmten Steuercode zum Einschalten von Fettschrift zu sendet, bittet sie den Druckertreiber, den vom Anwender gewünschten Drucker in Fettschrift umzustellen, falls der Drucker das kann.
Eine austauschbare Komponente des Betriebssystems, ein Gerätetreiber, stellt jetzt fest, ob der Drucker diese Funktion hat, und veranlaßt die für den konkreten angeschlossenen Drucker passenden  Maßnahmen an einem weiteren untergeordneten Gerätetreiber für die Druckerschnittstelle.
Dies kann der Treiber für die parallele oder die serielle Schnittstelle sein, aber auch der SCSI- oder der Ethernet-Treiber für einen Drucker im Netz.
Die &amp;ldquo;passenden Maßnahmen für den konkreten Drucker&amp;rdquo; können die Generierung von fünf ASCII-Steuerzeichen zur Umschaltung auf Fettdruck sein oder das Berechnen eines neuen Fonts und das Laden dieses Zeichensatzes auf den Drucker.
In jedem Fall bekommt die Anwendung die von ihr gewünschte Dienstleistung, ohne überhaupt etwas von den Aktivitäten hinter den Kulissen zu merken und ohne daß der Hersteller der Anwendung bei jedem Update mehrere Disketten mit Gerätetreibern mitliefern muß.&lt;/p&gt;
&lt;h2 id=&#34;das-betriebssystem-der-zukunft&#34;&gt;
    &lt;a href=&#34;#das-betriebssystem-der-zukunft&#34;&gt;
	Das Betriebssystem der Zukunft?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das Betriebssystem der Zukunft, egal ob es jetzt OS/2, Windows oder UNIX heißen wird, wird mit den heute verbreiteten Systemen, die kaum mehr als dynamisch linkbare Bibliotheken von Ein-/Ausgabefunktionen sind, wenig gemeinsam haben.
Statt dessen wird es halb-experimentellen Systemen wie Mach, Plan9 oder Amoeba ähnlich sehen.
Es wird einen kleinen Kern mit den notwendigsten Funktionen zum Multitasking und Message Passing haben und eine große Zahl von Standardserverprozessen für die unterschiedlichen Systemdienste bereitstellen.
Zu diesen Systemdiensten wird das Betreiben von Geräteabstraktionen (Standarddruckern, einheitlich steuerbaren Grafikbildschirmen) ebenso gehören wie das Bereitstellen komplexer Bibliotheksfunktionen über Serverprozesse mit eigenem Kontrollfluß (etwa die Konvertierung von Datenformaten oder eine Bibliothek mit Funktionen für grafische Benutzerführung).&lt;/p&gt;
&lt;p&gt;Der Preis für die Funktionalität: Mehr Megabytes, mehr Megaherz, mehr Megapixel.&lt;/p&gt;
&lt;h2 id=&#34;glossar&#34;&gt;
    &lt;a href=&#34;#glossar&#34;&gt;
	Glossar
    &lt;/a&gt;
&lt;/h2&gt;
&lt;dl&gt;
&lt;dt&gt;Kernel:&lt;/dt&gt;
&lt;dd&gt;Der Kernel ist das eigentliche Betriebssystem. Moderne Systeme haben die Anzahl der Funktionen im Kernel auf das allernotwendigste reduziert. Man redet dann von einem Microkernel.&lt;/dd&gt;
&lt;dt&gt;Gerätetreiber:&lt;/dt&gt;
&lt;dd&gt;Geräteabhängiges Treiberprogramm für ein Peripheriegerät, oft Bestandteil des Kernels.&lt;/dd&gt;
&lt;dt&gt;Thread:&lt;/dt&gt;
&lt;dd&gt;Kontrollflußbestandteil eines Prozesses: CPU-Register, Stack, Zustand, etc.&lt;/dd&gt;
&lt;dt&gt;Actor:&lt;/dt&gt;
&lt;dd&gt;Bezeichung im Betriebssystem Chorus für den Kontext eines Prozesses, der nicht mit dem Thread zusammenhängt: MMU-Register, Dateizeiger, etc.&lt;/dd&gt;
&lt;dt&gt;Prozess:&lt;/dt&gt;
&lt;dd&gt;Ein Actor mit mindestens einem Thread bildet einen Prozess.&lt;/dd&gt;
&lt;dt&gt;Image:&lt;/dt&gt;
&lt;dd&gt;Speicherabbild eines Prozesses.&lt;/dd&gt;
&lt;dt&gt;Virtual Memory:&lt;/dt&gt;
&lt;dd&gt;Erweitern des Speicherbereiches, der einem Prozess zur Verfügung steht, durch für den Prozess transparentes Auslagern von Prozessen (oder Prozessteilen) auf einen Hintergrundspeicher durch Swapping oder Paging.&lt;/dd&gt;
&lt;dt&gt;Swapping:&lt;/dt&gt;
&lt;dd&gt;Ein-/Auslagern ganzer Prozesse in einen speziellen Plattenbereich (swap area) bei Speicherknappheit.&lt;/dd&gt;
&lt;dt&gt;Demand Paging:&lt;/dt&gt;
&lt;dd&gt;Ein-/Auslagern von Prozessteilen fester Größe (Pages) in einen speziellen Plattenbereich bei Speicherknappheit.&lt;/dd&gt;
&lt;dt&gt;PMMU:&lt;/dt&gt;
&lt;dd&gt;Paged Memory Management Unit; Hardware zum Abbilden virtueller Prozessadressen auf physikalische Speicheradressen.&lt;/dd&gt;
&lt;dt&gt;Working Set:&lt;/dt&gt;
&lt;dd&gt;Der Teil eines Prozesses, der aus Effizienzgründen in physikalischem RAM gehalten werden sollte, weil der laufende Prozess ständig Adressen aus dem Working Set referenziert.&lt;/dd&gt;
&lt;dt&gt;Treshing:&lt;/dt&gt;
&lt;dd&gt;Dramatischer Leistungsabfall des Systems um einige Zehnerpotenzen, wenn wegen Speicherknappheit Teile der Working Sets von aktiven Prozessen ausgelagert werden.&lt;/dd&gt;
&lt;dt&gt;Server-Client Modell:&lt;/dt&gt;
&lt;dd&gt;Art der Betriebssystemarchitektur, bei der die Dienste des Systems von Serverprozessen angeboten werden. Der Client sendet eine Nachricht mit einer Dienstanforderung an den Server, der die gewünschte Funktion asynchron ausführt und das Ergebnis zurücksendet.&lt;/dd&gt;
&lt;dt&gt;Semaphore:&lt;/dt&gt;
&lt;dd&gt;Flag, das den Zugriff mehrere Prozesse auf eine Datenstruktur regelt.&lt;/dd&gt;
&lt;dt&gt;Message passing:&lt;/dt&gt;
&lt;dd&gt;Paradigma beim Aufruf von Betriebssystemfunktionen: Die Parameter eines Dienstaufrufes werden dem Dienstanbieter in einer Nachricht übermittelt. Der Dienstanbieter ist ein eigenständiger Prozess, der die Anforderung unabhängig und asynchron zum Dienstaufrufer bearbeitet.&lt;/dd&gt;
&lt;dt&gt;Time-Slice:&lt;/dt&gt;
&lt;dd&gt;Zeitscheibe; die Zeiteinheit, die ein Prozess maximal ohne Unterbrechung die CPU in Anspruch nehmen kann.&lt;/dd&gt;
&lt;dt&gt;Preemptive Multitasking:&lt;/dt&gt;
&lt;dd&gt;Verfahren, bei dem Prozesse die CPU auch ohne eigenes Zutun nach Ablauf der Zeitscheibe verlieren können.&lt;/dd&gt;
&lt;dt&gt;Cooperative Multitasking:&lt;/dt&gt;
&lt;dd&gt;Verfahren, bei dem Prozesses die CPU nur durch expliziten oder impliziten (durch Aufruf einer Systemfunktion) Aufruf des Schedulers verlieren können.&lt;/dd&gt;
&lt;dt&gt;Scheduler:&lt;/dt&gt;
&lt;dd&gt;Betriebssystemteil, der bestimmt, nach welchen Kritierien die Zeitscheiben den einzelnen Prozessen zugeteilt werden.&lt;/dd&gt;
&lt;dt&gt;Round-Robin:&lt;/dt&gt;
&lt;dd&gt;Scheduling-Algorithmus, bei dem alle lauffähigen Prozesse dieselbe Anzahl von Zeitscheiben zugeteilt bekommen.&lt;/dd&gt;
&lt;dt&gt;Priority-Aging:&lt;/dt&gt;
&lt;dd&gt;Eigenschaft von Scheduling-Algorithmen. Prozesse, die längere Zeit keine Zeitscheibe zugeteilt bekommen haben, werden in der Priorität temporär heraufgestuft.&lt;/dd&gt;
&lt;dt&gt;Wall Clock Time:&lt;/dt&gt;
&lt;dd&gt;Reale (gestoppte) Laufzeit eines Prozesses.&lt;/dd&gt;
&lt;dt&gt;Cpu Time:&lt;/dt&gt;
&lt;dd&gt;Zeit, die ein Prozess tatsächlich ablaufend auf der CPU verbracht hat. Typischerweise viel weniger als ein Zehntel der wall clock time.&lt;/dd&gt;
&lt;/dl&gt;
</description>
    </item>
    
  </channel>
</rss>

