<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/posts.html</link>
    <description>Recent content in Posts on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Aug 2022 11:50:47 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/posts/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MacOS: How to prevent screen blanker</title>
      <link>https://blog.koehntopp.info/2022/07/30/macos-how-to-prevent-screen-blanker.html</link>
      <pubDate>Sat, 30 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/07/30/macos-how-to-prevent-screen-blanker.html</guid>
      <description>&lt;p&gt;When running Keynote, MacOS prevents the screen blanker from kicking in.
I needed a similar thing in one of my Python applications, so I needed to find out how it does that.&lt;/p&gt;
&lt;p&gt;It turns out, there is an API for that:
&lt;a href=&#34;https://developer.apple.com/documentation/foundation/nsprocessinfo/1415995-beginactivitywithoptions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;beginActivity:withOptions:&lt;/code&gt;&lt;/a&gt;

,
which returns an Object token &lt;code&gt;activity&lt;/code&gt;.
Calling &lt;a href=&#34;https://developer.apple.com/documentation/foundation/nsprocessinfo/1411321-endactivity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;endActivity&lt;/code&gt;&lt;/a&gt;


with that Token ends the activity, and resumes the screen blanker countdown.&lt;/p&gt;
&lt;p&gt;There is a list of activity options,
&lt;a href=&#34;https://developer.apple.com/documentation/foundation/nsactivityoptions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;NSActivityOptions&lt;/code&gt;&lt;/a&gt;

.
We are interested into &lt;code&gt;NSActivityIdleDisplaySleepDisabled&lt;/code&gt; and &lt;code&gt;NSActivityUserInteractive&lt;/code&gt;, mostly.&lt;/p&gt;
&lt;p&gt;Interfacing with Objective-C in Python is possible through &lt;code&gt;ctypes&lt;/code&gt;, but that is work.
Work, it turns out, that has already been done in
&lt;a href=&#34;https://github.com/minrk/appnope&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;appnope&lt;/code&gt;&lt;/a&gt;

,
specifically in &lt;a href=&#34;https://github.com/minrk/appnope/blob/c97905ae5d2f5f2ce2fb65ce127a0e5c19ee2c50/appnope/_nope.py#L52-L73&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;_nope.py&lt;/code&gt;&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Integrating that into my PyQt application is trivial.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Energieverbrauch in Deutschland</title>
      <link>https://blog.koehntopp.info/2022/07/03/energieverbrauch-in-deutschland.html</link>
      <pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/07/03/energieverbrauch-in-deutschland.html</guid>
      <description>&lt;p&gt;Der Wikipedia-Artikel zum Thema &lt;a href=&#34;https://de.wikipedia.org/wiki/Energieverbrauch#Energieverbrauch_in_Deutschland&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Energieverbrauch&lt;/a&gt;

 ist wirklich interessant.&lt;/p&gt;
&lt;p&gt;Schaut man sich zum Beispiel diese Grafik (oder die Tabelle, auf der sie basiert) an, dann sieht man:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/07/germany-primary-energy.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Primärenergieverbrauch Deutschland 1990 bis jetzt&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wie man sieht, ist der Primärenergieverbrauch von Deutschland seit 1990 fast konstant geblieben.
Wikipedia schreibt im Detail: &amp;ldquo;Zwischen 1990 und 2011 nahm das reale Bruttoinlandprodukt um 34 % zu, der Energieverbrauch nahm jedoch um 9 % ab.&amp;rdquo;
Rechnet man um, sind es bummelt 14000 Petajoule, was circa 4000 TWh entspricht.&lt;/p&gt;
&lt;p&gt;Private Haushalte nutzen &lt;a href=&#34;https://www.umweltbundesamt.de/daten/private-haushalte-konsum/wohnen/energieverbrauch-privater-haushalte#hochster-anteil-am-energieverbrauch-zum-heizen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;laut Umweltbundesamt&lt;/a&gt;

 circa 650 TWh, und davon sind etwa 450 TWh Heizenergie.&lt;/p&gt;
&lt;p&gt;Im Grunde genommen ergeben sich daraus sofort die folgenden Ideen:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Dächer voll machen:
&lt;ol&gt;
&lt;li&gt;10 KWp Limit weg.&lt;/li&gt;
&lt;li&gt;Anmeldung und Steuer vereinfachen, und Eigenverbrauch nicht besteuern.&lt;/li&gt;
&lt;li&gt;Solarinstallation fördern (statt 9000 Euro bei E-Autos dann lieber hier).&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Akkus als Ausgleich fördern:
&lt;ol&gt;
&lt;li&gt;Hausakku fördern (s.o. Solaranlage)&lt;/li&gt;
&lt;li&gt;Rückspeisefähigkeit bei E-Autos und deren Ladepunkten vorschreiben.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Wärmepumpen fördern und vorschreiben.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Selbst, wenn man bei den Wärmepumpen nur einen Workfaktor von 3 annnimmt, bekommt man die 450 TWh zum Heizen gedrittelt, also einen Strom-Mehrverbrauch von maximal 150 TWh und eine Einsparung von 300 TWh (zum Vergleich: Atomkraft liefert derzeit noch ca. 230 TWh).&lt;/p&gt;
&lt;p&gt;Und: 15 kWh Hausakku entsprechen auch bei sehr großen Häusern 1-2 Tagen Autonomie.&lt;/p&gt;
&lt;p&gt;Das ist wunderbar, denn Solar und Wind sind in Deutschland jahreszeitlich in etwa konstant.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/07/germany-solar-und-wind.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Die Summe aus Solar und Wind ist in etwa konstant.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Lokale Energiespeicher dienen also in erster Linie dazu, die passende Glättung zu erzeugen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I have met the enemy, and they are us</title>
      <link>https://blog.koehntopp.info/2022/07/01/i-have-met-the-enemy-and-they-are-us.html</link>
      <pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/07/01/i-have-met-the-enemy-and-they-are-us.html</guid>
      <description>&lt;p&gt;Another Friday, another replication hierarchy lost.&lt;/p&gt;
&lt;h1 id=&#34;the-error-from-june-july-edition&#34;&gt;
    &lt;a href=&#34;#the-error-from-june-july-edition&#34;&gt;
	The error from June, July edition?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The errors reported look awfully familiar: Binlog position is supposedly 4, and the error message has text about &amp;ldquo;max_allowed_packet&amp;rdquo;.
Could it be another instance of &lt;a href=&#34;https://blog.koehntopp.info/2022/06/07/mysql-binlog-compression-and-large-transactions.html&#34;&gt;this bug&lt;/a&gt;

 from early last month?&lt;/p&gt;
&lt;p&gt;Indeed, one symptom was &amp;ldquo;a large binlog, larger than max_binlog_size&amp;rdquo;.
We check.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-rw-r----- 1 mysql mysql 1073794077 Jul  1 06:39 binlog.000914
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-rw-r----- 1 mysql mysql 1073869075 Jul  1 07:09 binlog.000915
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-rw-r----- 1 mysql mysql 1073741881 Jul  1 09:28 binlog.000916
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-rw-r----- 1 mysql mysql 2038358667 Jul  1 11:21 binlog.000917
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Log ends at 11:21, at twice the expected size.
Meh.&lt;/p&gt;
&lt;h1 id=&#34;to-the-flight-recorder&#34;&gt;
    &lt;a href=&#34;#to-the-flight-recorder&#34;&gt;
	To the flight recorder
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Let&amp;rsquo;s check the &lt;a href=&#34;https://blog.koehntopp.info/2021/04/22/a-mysql-flight-recorder.html&#34;&gt;flight recorder&lt;/a&gt;

, again:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /var/log/mysql_pl/Fri
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in 1&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;012&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;_??.innodb.xz&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt;   xz -dc &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt;     perl -ne &lt;span class=&#34;s1&#34;&gt;&amp;#39;/(undo log entries) ([0-9]+)/ &amp;amp;&amp;amp; $2 &amp;gt; 1000 &amp;amp;&amp;amp; print &amp;#34;$2\n&amp;#34;;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; less
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;11_20.innodb.xz
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;2895
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;11_21.innodb.xz
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;2895
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;11_22.innodb.xz
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;11_23.innodb.xz
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;dba-meet-dba&#34;&gt;
    &lt;a href=&#34;#dba-meet-dba&#34;&gt;
	DBA, meet DBA
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;So what is it this time?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; xz -dc 11_21.innodb.xz&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; less
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;623 lock struct(s), heap size 73848, 3548 row lock(s), undo log entries 2895
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MySQL thread id 186615979, OS thread handle 140545428498176, query id 2978139105 localhost root Waiting for semi-sync ACK
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;INSERT LOW_PRIORITY IGNORE INTO `schema`.`_table_new` (`id`, ...`) 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  SELECT `id`, ... FROM `schema`.`table` LOCK IN SHARE MODE /*pt-online-schema-change 63828 copy table*/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is an &lt;code&gt;INSERT ... SELECT ...&lt;/code&gt;, generated from Percona Online Schema Change.
The transaction has some 2895 rows open, so in order for this to be a problem the average row length must be very large.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s check:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;root@instance-1009 [schema]&amp;gt; show table status like &amp;#39;table&amp;#39;\G
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;*************************** 1. row ***************************
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;           Name: table
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         Engine: InnoDB
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        Version: 10
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     Row_format: Dynamic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;           Rows: 2437
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; Avg_row_length: 3350975    &amp;lt;-- average!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Data_length: 8166326272 &amp;lt;-- 8-ish GB used
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Max_data_length: 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   Index_length: 3194880    &amp;lt;-- almost no secondary index
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Data_free: 57958989824 &amp;lt;- also spiky usage, 53 GB free space
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; Auto_increment: 546211
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Create_time: 2020-12-08 02:25:41
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Update_time: 2022-07-01 10:11:12
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     Check_time: NULL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Collation: latin1_swedish_ci
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       Checksum: NULL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; Create_options: row_format=DYNAMIC
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        Comment:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;1 row in set (0.00 sec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ok, so we have 3.3 MB row size, on the average (peak blob size is 6.7 MB or so).
Checking the schema shows us two &lt;code&gt;MEDIUMTEXT&lt;/code&gt; columns.&lt;/p&gt;
&lt;h1 id=&#34;analysis&#34;&gt;
    &lt;a href=&#34;#analysis&#34;&gt;
	Analysis
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The mitigation from &lt;a href=&#34;https://blog.koehntopp.info/2022/06/07/mysql-binlog-compression-and-large-transactions.html&#34;&gt;last month&lt;/a&gt;

 had not been implemented, yet.
It has now been escalated.&lt;/p&gt;
&lt;p&gt;The event triggering the outage was a transaction larger than 1 GB, as before, in the face of binlog compression.
The program triggering the large transaction was a DBA maintenance job running Percona Online Schema Change.&lt;/p&gt;
&lt;p&gt;Percona Online Schema Change has no logic to prevent large transactions from occuring.
It should maybe check average row size, or check largest row size in the table, and cut smaller pieces so that the &lt;code&gt;INSERT ... SELECT&lt;/code&gt; it generates always stays below 1G.&lt;/p&gt;
&lt;p&gt;Or it should accept that the &lt;code&gt;INSERT ... SELECT&lt;/code&gt; may fail, if &lt;code&gt;max_binlog_cache_size&lt;/code&gt; has been set, and retry with smaller steps then.
The second idea would be better, I believe.&lt;/p&gt;
&lt;p&gt;Again, the flight recorder has been invaluable in nailing down the root cause.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The new energy bill</title>
      <link>https://blog.koehntopp.info/2022/06/28/the-new-energy-bill.html</link>
      <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/06/28/the-new-energy-bill.html</guid>
      <description>&lt;p&gt;We got our solar roof around 1st of April.
I am describing our setup &lt;a href=&#34;https://blog.koehntopp.info/2022/05/02/a-solar-roof.html&#34;&gt;here&lt;/a&gt;

.
Today we got the bill for Summer 2021 to Summer 2022.&lt;/p&gt;
&lt;h1 id=&#34;what-i-measured&#34;&gt;
    &lt;a href=&#34;#what-i-measured&#34;&gt;
	What I measured
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;I installed a P1 interface on my electricity counter late in April, so my data does not cover all of the lifetime of the Solar Roof.
Starting the graph at 01-Apr-2022, I get this:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/bill-in-and-out.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;At this resolution, not very helpful.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;What is visible is the fact that we do not have a battery, and therefore each day we produce energy, but also consume energy from the grid.
What is not visible is the relation.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/bill-counter.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Looking at the absolute counter values is more helpful.
The total production is on the right hand side, the consumption on the left hand side, and the important number is the Range value below the graph.&lt;/p&gt;
&lt;p&gt;We produced 1.66 MWh during the range between 01-Apr and now. We consumed 279 kWh in that interval.
That leaves us with slightly under 1.5 MWh pushed to the grid.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/bill-gas-meter.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Heating consumed around 10 m^3 in one evening, otherwise we use gas for warm water. Not a lot.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We consumed 28.7 m^3 (around 287 kWh) of gas since the begin of metering.
This includes one day of runaway heating worth around 10 m^w, and the rest is warm water.
Warm water is not the cost driver, heating with gas is.&lt;/p&gt;
&lt;p&gt;But let&amp;rsquo;s look at the financials:
We get back 561 Euro, because we paid 2297 Euro in 12 monthly installments, and used 1735 Euro worth of power and gas.
Mostly gas, but more on that further down.&lt;/p&gt;
&lt;p&gt;Our monthly installment two years ago was 192 Euro, last year 202 Euro, and this year it will be 213 Euro.
Of these 213 Euro, 199 Euro will be for gas.&lt;/p&gt;
&lt;p&gt;So already, without knowing details, we have our mission.&lt;/p&gt;
&lt;h1 id=&#34;get-off-gas-now&#34;&gt;
    &lt;a href=&#34;#get-off-gas-now&#34;&gt;
	Get off Gas, now!
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;This is our electricity intake for the last 5 years:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/bill-electricity.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Down to 2.052 MW/a from 4.850 MW/a.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Active since April 2022, the solar array has fed back sufficient electricity to compensate for more than half our consumption.
Do I believe in overprovisioning?
Well, yes, kind of.
The array has been built with future use-cases in mind.&lt;/p&gt;
&lt;p&gt;In any case, in the last 12 months we used 3881 kWh, and pushed 1834 kWh back to the grid for the set consumption you see in the bill.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/bill-gas.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Down to 1251 m^3 of gas.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Out gas consumption also fell, but that is mostly due to a mild winter and not heating much.&lt;/p&gt;
&lt;h1 id=&#34;doing-the-math&#34;&gt;
    &lt;a href=&#34;#doing-the-math&#34;&gt;
	Doing the math
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;We are paying around 22 ct per kWh of electricity, and while there is a bit of fixed cost, it hardly matters – 22.5 ct per kWh all in.&lt;/p&gt;
&lt;p&gt;Gas costs around 108 ct per m^3, which is an energy equivalent of 10-12 kWh warmth depending on the type of gas.
Fixed cost here is substantial, and we end up at 132 ct per m^3 overall cost (1349.88 Euro for 1251 m^3, and 274.58 Euro of fixed cost).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;em&gt;Heating&lt;/em&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Electricity&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Heat Pump&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Gas&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Heat generated&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;10 kWh&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;10 kWh&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;10 kWh&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Energy used&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;10 kWh&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2-3 kWh&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1^3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Cost per unit&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0.225 Euro&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0.225 Euro&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1.32 Euro&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Total cost&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2.25 Euro&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;0.5-0.75 Euro&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1.32 Euro&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So to create 10 kWh of warmth from a heat pump, you have to expend 2-3 kWh of electricity, coming in at 50 ct to 75 ct per m^3 gas-equivalent of heating.
That would be around 1.75 to 2.5 times cheaper than heating with gas.&lt;/p&gt;
&lt;p&gt;A heat exchanger can be a air-water-air system, so a heat exchanger that uses energy from outside air to heat water that is fed into the existing heating.
This will work to around -10 C to -20 C outside temperatur, but for temperatures below zero, it will become successively inefficient.&lt;/p&gt;
&lt;p&gt;If your area permits it, you can take energy not from outside air, but from the water or earth below the house.
This is virtually always frost-free and hence relatively efficient.
So if you have a houseboat or are allowed to install an earth circuit, this can be a completely painless solution.&lt;/p&gt;
&lt;p&gt;Existing radiators driven by heat exchangers almost always need adjustment or exchange, because the water-in temperature of the system is substantially lower than a preexisting gas burner.
So somebody with actual clue will have to do the math and adjustment during installation, and some people will have to either change radiators, or install active venting (fans, basically) that push air through the radiators as a leisurely pace.&lt;/p&gt;
&lt;p&gt;If you need air condition anyway, because for example there is a roof room that needs active cooling in summer, you can make sure that you get an airco unit that can operate in reverse mode.
Most of the units that support it are as efficient as heat exchangers, and heat air directly.
Here the work factor is comparable to normal heat exchangers.&lt;/p&gt;
&lt;p&gt;Either system will get you off gas, or (with the airco) work in parallel to an existing gas or oil heating – which is nice in case you do not trust the new system and need backup.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jetbrains Remote Development</title>
      <link>https://blog.koehntopp.info/2022/06/27/jetbrains-remote-development.html</link>
      <pubDate>Mon, 27 Jun 2022 04:48:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/06/27/jetbrains-remote-development.html</guid>
      <description>&lt;p&gt;I am on a Mac or on a Windows machine, and always I have to develop for a Linux target.
On Windows, this is easy, because most Jetbrains environment already support working inside WSL2, so simply choosing this is a no-brainer.&lt;/p&gt;
&lt;p&gt;On MacOS, I can create a &amp;ldquo;Docker Container&amp;rdquo; do develop in, but it is kind of a joke.
That is, because MacOS cannot run Linux cgroups and namespaces natively, so you actually get a lightweight VM with Linux running, and then a container inside that.
You might as well run Linux in VMware and start the Jetbrains thing inside that.
It will hurt probably less than trying to edit inside a docker filesystem.&lt;/p&gt;
&lt;p&gt;And sometimes you do not just need a Linux box, but an actual development environment that runs on one specific server that you have ssh access to.
Remote editing is &amp;ldquo;easy&amp;rdquo; in vscode, but there is no &amp;ldquo;my file tree is on that machine&amp;rdquo; mode in Jetbrains stuff.&lt;/p&gt;
&lt;p&gt;Or is there?&lt;/p&gt;
&lt;h1 id=&#34;enter-the-gateway&#34;&gt;
    &lt;a href=&#34;#enter-the-gateway&#34;&gt;
	Enter the Gateway
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Turns out, there is something better.
The Jetbrains Gateways runs their editor, headless, on the remote machine, and that editor edits.
The client is the GUI, and that runs natively on your development machine, using the native GUI and key bindings.
GUI and remote editor communicate, the same way &amp;ldquo;Code with me&amp;rdquo; communicates.&lt;/p&gt;
&lt;p&gt;So&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install &amp;ldquo;Jetbrains Gateway&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Set up ssh connectivity in it.&lt;/li&gt;
&lt;li&gt;Start a new project, watch it download and install the development environment remotely.&lt;/li&gt;
&lt;li&gt;Enter the project and edit away.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/jetbrains-gateway1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Yup, it&amp;rsquo;s beta.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;does-it-even-work&#34;&gt;
    &lt;a href=&#34;#does-it-even-work&#34;&gt;
	Does it even work?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Well, yes.
I can hit the &amp;ldquo;Terminal&amp;rdquo; tab, and get an actual shell on the remote box.
I can run and build stuff as if I would be running the GUI locally on the remote box.
The native binaries are what I have on the remote box.&lt;/p&gt;
&lt;p&gt;Well, no.
It&amp;rsquo;s beta.
Sometimes it gets stuck, and sometimes the keys are &amp;ldquo;glue-ey&amp;rdquo;, that is, latency can be felt.&lt;/p&gt;
&lt;p&gt;Usually it helps to disconnect or kill the local client and then reconnect to the remote session.
Sometimes that needs to be done more than once.&lt;/p&gt;
&lt;p&gt;Well, yes.
Facinatingly, the remote session stays if you kill the local client, and on reconnect will be still there, blinking cursor and everything, just where you left it.&lt;/p&gt;
&lt;p&gt;All in all, I think this is going to change the way it work. At least when the remaining problems are fixed.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/jetbrains-gateway2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Connecting to the Blog.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Apparently there is a blog article from &lt;a href=&#34;https://blog.jetbrains.com/blog/2021/12/03/dive-into-jetbrains-gateway/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;December 2021&lt;/a&gt;

 which describes how it works in more detail.
With the upcoming &amp;ldquo;Fleet&amp;rdquo;, it seems that they will be going all-in on the split between IDE backend and frontend.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Disclaimer:&lt;/em&gt; I am a paying customer of Jetbrains, and have the private user all-in subscription, paid for myself.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Breaking replication with ALGORITHM = INSTANT</title>
      <link>https://blog.koehntopp.info/2022/06/20/mysql-breaking-replication-with-algorithm-instant.html</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/06/20/mysql-breaking-replication-with-algorithm-instant.html</guid>
      <description>&lt;p&gt;MySQL 8.0.29 adds &lt;code&gt;ALGORITHM=INSTANT&lt;/code&gt; as a way to run &lt;code&gt;ALTER TABLE&lt;/code&gt; commands with less wait.
The documentation can be found in &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-operations.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Online DDL Operators&lt;/a&gt;

 and instant column operations can be found &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-operations.html#online-ddl-column-operations&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Example Syntax looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mysql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mysql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Query&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;affected&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mysql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;not&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;algorithm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;instant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Query&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;affected&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;07&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Records&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Duplicates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Warnings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;limited-total_row_versions&#34;&gt;
    &lt;a href=&#34;#limited-total_row_versions&#34;&gt;
	Limited TOTAL_ROW_VERSIONS
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-operations.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The manual&lt;/a&gt;

 explains a new concept:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A new row version is created after each &lt;code&gt;ALTER TABLE ... ALGORITHM=INSTANT&lt;/code&gt; operation that adds one or more columns, drops one or more columns, or adds and drops one or more columns in the same operation.
The &lt;code&gt;INFORMATION_SCHEMA.INNODB_TABLES.TOTAL_ROW_VERSIONS&lt;/code&gt; column tracks the number of row versions for a table.
The value is incremented each time a column is instantly added or dropped.
The initial value is 0.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mysql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_row_versions&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;information_schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;innodb_tables&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;like&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;kris/%&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--------+--------------------+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NAME&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TOTAL_ROW_VERSIONS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+--------+--------------------+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+--------+--------------------+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So there is a concept called &lt;code&gt;TOTAL_ROW_VERSIONS&lt;/code&gt;.
This is a version counter for instant alter table, and it is incremented each time a change to a table&amp;rsquo;s schema is being made.&lt;/p&gt;
&lt;p&gt;The manual continues with a warning:
The TRV counter has a limit of 64.
Commands are rejected when the counter is reaching the limit.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When a table with instantly added or dropped columns is rebuilt by table-rebuilding &lt;code&gt;ALTER TABLE&lt;/code&gt; or &lt;code&gt;OPTIMIZE TABLE&lt;/code&gt; operation, the &lt;code&gt;TOTAL_ROW_VERSIONS&lt;/code&gt; value is reset to 0.
The maximum number of row versions permitted is 64, as each row version requires additional space for table metadata.
When the row version limit is reached, &lt;code&gt;ADD COLUMN&lt;/code&gt; and &lt;code&gt;DROP COLUMN&lt;/code&gt; operations using &lt;code&gt;ALGORITHM=INSTANT&lt;/code&gt; are rejected with an error message that recommends rebuilding the table using the &lt;code&gt;COPY&lt;/code&gt; or &lt;code&gt;INPLACE&lt;/code&gt; algorithm.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ERROR 4080 (HY000): Maximum row versions reached for table test/t1. No more columns can be added or dropped instantly. Please use COPY/INPLACE.&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;the-obvious-breakage&#34;&gt;
    &lt;a href=&#34;#the-obvious-breakage&#34;&gt;
	The obvious breakage
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;So a command is rejected, when TRV reaches 64.
Also, MySQL uses replication a lot.
In fact, I am of the persuasion that any MySQL installation that does not have at least one replica is broken.&lt;/p&gt;
&lt;p&gt;So can we use this to break replication?&lt;/p&gt;
&lt;p&gt;The manual suggests that &lt;code&gt;OPTIMIZE TABLE&lt;/code&gt; can be used to reset the counter.
The manual knows the following things about &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/optimize-table.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OPTIMIZE&lt;/a&gt;

:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There is a syntax &lt;code&gt;OPTIMIZE LOCAL TABLE&lt;/code&gt;.
»By default, the server writes &lt;code&gt;OPTIMIZE TABLE&lt;/code&gt; statements to the binary log so that they replicate to replicas.
To suppress logging, specify the optional &lt;code&gt;NO_WRITE_TO_BINLOG&lt;/code&gt; keyword or its alias &lt;code&gt;LOCAL&lt;/code&gt;.«&lt;/li&gt;
&lt;li&gt;This is not privileged: »This statement requires &lt;code&gt;SELECT&lt;/code&gt; and &lt;code&gt;INSERT&lt;/code&gt; privileges for the table.«&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We now do this: With &lt;code&gt;dbdeployer&lt;/code&gt; we &lt;code&gt;dbdeployer deploy replication 8.0.29&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On the primary: &lt;code&gt;./m -u root&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;%&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;identified&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;secret&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;grant&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;%&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Continue as &lt;code&gt;kris&lt;/code&gt; on the primary: &lt;code&gt;./m -u kris -psecret kris&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;algorithm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;instant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_row_versions&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;information_schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;innodb_tables&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;like&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;kris/%&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;drop&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;algorithm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;instant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_row_versions&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;information_schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;innodb_tables&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;like&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;kris/%&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now inject the &lt;code&gt;OPTIMIZE LOCAL TABLE&lt;/code&gt; command to plant the bomb.
This can be done by the &lt;code&gt;kris&lt;/code&gt; user, or any other user having &lt;code&gt;INSERT&lt;/code&gt; and &lt;code&gt;SELECT&lt;/code&gt; privilege.
It is not necessary to have &lt;code&gt;ALTER&lt;/code&gt; privilege, as long as you know that somebody else is doing instant alter table commands on the table.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;optimize&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, continue to add and drop the column &lt;code&gt;t.i&lt;/code&gt; as before.
Check the TRV value on the primary and a replica.
Note how the TRV value on the primary is lower than on the replica.&lt;/p&gt;
&lt;p&gt;When the TRV value reaches 64 on the replica, replication will stop with error 4080.
The replica is unable to execute the alter table command, while the primary was able to run it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Carver S&#43;</title>
      <link>https://blog.koehntopp.info/2022/06/08/carver-s.html</link>
      <pubDate>Wed, 08 Jun 2022 04:17:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/06/08/carver-s.html</guid>
      <description>&lt;p&gt;After getting &lt;a href=&#34;https://blog.koehntopp.info/2022/05/02/a-solar-roof.html&#34;&gt;a solar roof&lt;/a&gt;

 we have been looking at electric mobility solutions.
But existing electrical cars seemed pretty much oversized.
We do not really need a 4-seater with 650km range and two tons of total empty weight.
Katja Diehl coined the german tongue-in-cheek term &amp;ldquo;Maximaleventualbedarfsauto&amp;rdquo; for it, the car that meets biggest use-case you could possibly reasonably have.&lt;/p&gt;
&lt;p&gt;Looking around, we test drove a &lt;a href=&#34;https://carver.earth/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Carver.Earth&lt;/a&gt;

, which was the right size, but limited to 45 km/h (and bike pathes in some areas).
Then Carver started to offer the &amp;ldquo;Carver S+&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/carver1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/carver2.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/carver3.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;The vehicle can be driven with an A-license or a B-license from before 2013.
It has 2 seats placed one after the other, and the back seat is rather basic.
It goes 80 km/h on a 7.1kWh LFP battery, which is good for circa 100 km, if you do not go 80 all of the time.
It carves, which means that it leans into curves in a rather awesome way (less awesome if you set &amp;ldquo;comfort&amp;rdquo; mode, which I strongly recommend).
It has no steering or brake assist, which means you get to work a bit.
But at 330kg total system weight, empty, it is pretty manageable.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/carver4.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/carver5.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;The car charges with a regular household plug, but a type 2 adapter is available.
It will still not fast charge.&lt;/p&gt;
&lt;p&gt;Completely filling it up to 7.1 kWh from 10% charge took 4h and the house consumed 7.1kWh during that time (but we have base load and made a coffee).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/carver6.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/carver7.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;So all in all a pretty good match, and exactly what we expected.
Radically less car, so exactly the right amount of car.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/carver8.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/carver9.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to buy an e-Bike</title>
      <link>https://blog.koehntopp.info/2022/06/08/how-to-buy-an-ebike.html</link>
      <pubDate>Wed, 08 Jun 2022 04:47:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/06/08/how-to-buy-an-ebike.html</guid>
      <description>&lt;p&gt;I &lt;a href=&#34;https://twitter.com/isotopp/status/1534158787891843073&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;have been asked&lt;/a&gt;

 what kind of bike I ride and how to choose one.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/grenoble.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Gazelle Grenoble 2017, with vaude Aquaback plus.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I am over 50 years old, over 200cm tall and weigh more than 120 kilo before I dresss.
Back when we still had an office, that was a 22km trip, each direction.&lt;/p&gt;
&lt;p&gt;I need an upright sitting position, a soft and comfortable seat.
I need to be able to carry luggage, and a return-home guarantee.
I need to be able to get useful service on the bike, because at my age I prefer to use money instead of time to keep the bike running.&lt;/p&gt;
&lt;p&gt;I did try the Cruiser HS by R+M, and that was a completely nifty bike.
But it does use an insurance plate and a helmet, and I wanted something that could be ridden casually.
And without the HS (which causes the inconvenience) the price for R+M was no longer justifyable.
So I looked around at other solutions, and this was a good match.&lt;/p&gt;
&lt;p&gt;My wife now has the 2020 model of the same type, with a step-through frame.
That bike also has fixed lighting, so it can no longer lose adjustment, a better motor, a larger battery and a stepless gearbox.&lt;/p&gt;
&lt;p&gt;The step-though frame has a different geometry than the one I use, and it would have it even at the same frame height:
It is built for people with longer legs and shorter torso, so even adjusted correctly it feels wrong when I sit on it.&lt;/p&gt;
&lt;p&gt;I also like my (older) battery system.
The battery is easily removable, which is important if you want to keep it warm in weather with temperatures below 3C - batteries age faster and permanently lose capacity if you freeze them.
It is also handy, if you want to charge it, and there is no outside charger in the bike parking lot.
When removed, the battery system in my bike keeps the contacts protected and dry.&lt;/p&gt;
&lt;p&gt;In the newer bikes, the battery is integrated part of the frame, and in Gazelle&amp;rsquo;s case goes out up.
This leaves the frame upen and rain can enter.
Gazelle is not stupid, the contacts are at the top and somewhat protected, but you still have water inside the frame.&lt;/p&gt;
&lt;p&gt;Frame geometry matters.
A bike frame needs to be fitted to your body, and then adjusted properly.
Do not buy a bike from a catalog, nor without a test drive of at least an hour.
There is no such thing as &lt;a href=&#34;https://www.thestar.com/news/insight/2016/01/16/when-us-air-force-discovered-the-flaw-of-averages.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;an average human&lt;/a&gt;

, and because of that we have learned to build things adjustable.
So get them fitted, properly adjusted and then try them out properly and listen to your body.
This is not just about bikes, also keyboards, monitors and everything else that is close to the body need to be handled alike.&lt;/p&gt;
&lt;p&gt;The Gazelle is made from standard parts, Bosch Motor, Magura brakes, Shimano gearbox, and so on.
That makes replacement, adjustment and service easy:
Any bike shop has these, and will be able to service them properly.&lt;/p&gt;
&lt;p&gt;Also, the bike is entirely unconnected &amp;ndash; it will work with the cellphone at home, stolen or empty and still take you home.&lt;/p&gt;
&lt;p&gt;I mention this, because I am living in Hipster Ground Zero, and a lot of people look at VanMoof:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/vanmoof.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Awesome design, seriously bad ergonomic choices and a lot of quality issues.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a company that has a turnover of 100M, and operates at a spectacular loss.
They are making a bike from first principle and custom parts.
Standard parts will not fit, and only their service center can fix these bikes.
They also have quality issues for their self-made parts.&lt;/p&gt;
&lt;p&gt;Apple can pull this deep supply chain stunt off, but they are of course a 100B company with a lot of manufacturing expertise, and frankly an entirely different pricing model.&lt;/p&gt;
&lt;p&gt;VanMoof also comes in a one-size-fits-nobody frame which seriously limits how it can be adjusted.
The handlebar, too, can only be adjusted within close limits, and needs special tools to do so.
The light is part of the frame, and permanently maladjusted: it produces glare instead of lighting the path.&lt;/p&gt;
&lt;p&gt;Their bikes have a hub motor in the wrong wheel (the front wheel, which you use for steering), with no torque sensor.
So driving is janky at best, outright dangerous in critical conditions.&lt;/p&gt;
&lt;p&gt;The battery is not removable and will freeze to death, unless you can take it into a shed, cellar or your appartment.
Which is also necessary to charge it.&lt;/p&gt;
&lt;p&gt;But yes, it looks cool.
Basically, this is a cinetic sculpture and  not actually a vehicle.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Binlog Compression and Large Transactions</title>
      <link>https://blog.koehntopp.info/2022/06/07/mysql-binlog-compression-and-large-transactions.html</link>
      <pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/06/07/mysql-binlog-compression-and-large-transactions.html</guid>
      <description>&lt;p&gt;(&lt;a href=&#34;https://twitter.com/isotopp/status/1532752730229559300&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Twitter thread&lt;/a&gt;

, reproduction in english, and update)&lt;/p&gt;
&lt;p&gt;On Friday, 2022-06-03, 14:42, we lost a replication hierarchy, on the primary, all replicas down.
At 16:30 the escalation hits my desk, because this one is special.&lt;/p&gt;
&lt;h1 id=&#34;replication-stops-and-wants-more-max_allowed_packet&#34;&gt;
    &lt;a href=&#34;#replication-stops-and-wants-more-max_allowed_packet&#34;&gt;
	Replication stops, and wants more &lt;code&gt;max_allowed_packet&lt;/code&gt;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;There is a sequence of binlogs, each 1 GB in size, as configured, except for the broken one, which is 3 GB.
Replication stops with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Got fatal error 1236 from master when reading data from binary log: &amp;#39;log event entry exceeded max_allowed_packet; Increase max_allowed_packet on master; the first event &amp;#39;&amp;#39; at 4, the last event read from &amp;#39;../log/binlog.002558&amp;#39; at 19959785, the last byte read from &amp;#39;../log/binlog.002558&amp;#39; at 19959804
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Trying to run &lt;code&gt;mysqldump -vvv ...&lt;/code&gt; on the broken binlog fails and produces no output useful for diagnostics.&lt;/p&gt;
&lt;h1 id=&#34;using-the-flight-recorder&#34;&gt;
    &lt;a href=&#34;#using-the-flight-recorder&#34;&gt;
	Using the flight recorder
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;We do know the statement failed at 14:42 and we run a copy of &lt;a href=&#34;https://blog.koehntopp.info/2021/04/22/a-mysql-flight-recorder.html&#34;&gt;MySQL Flight Recorder&lt;/a&gt;

 on every box, even this one.&lt;/p&gt;
&lt;p&gt;Among the many things the flight recorder records is the processlist and also the output of &lt;code&gt;SHOW ENGINE INNODB STATUS&lt;/code&gt;.
Indeed we find a long running transaction.
At 14:41, we see &lt;code&gt;Compressing transaction changes&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;---TRANSACTION 6702541326, ACTIVE (PREPARED) 7419 sec
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;mysql tables in use 2, locked 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;2185611 lock struct(s), heap size 232317048, 73307452 row lock(s), undo log entries 70077831
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MySQL thread id 1532688506, OS thread handle 139765193623296, query id 22431944402 SOME_SERVERNAME 10.10.10.10 SOE_USERNAME Compressing transaction changes.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;INSERT IGNORE INTO target_table  SELECT * FROM source_table
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And at 14:42 the same thing is visible with &lt;code&gt;waiting for handler commit&lt;/code&gt;.
Then replication died.&lt;/p&gt;
&lt;h1 id=&#34;what-happened&#34;&gt;
    &lt;a href=&#34;#what-happened&#34;&gt;
	What happened
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;So this machine is running with compressed binlogs enabled.
It was processing a large &lt;code&gt;INSERT INTO t SELECT * FROM s&lt;/code&gt; statement to copy rows.
We see &lt;code&gt;70 077 831&lt;/code&gt; (70M) Undo Log entries.
The transaction compressed data, then commits, then the replication stops on all replicas, in an unrecoverable way.
At least the primary is still happy, if unaware of the problem.
The binlog file is 2GB larger than it should be.&lt;/p&gt;
&lt;p&gt;The immediate theory:
Somebody wrote a small statement that produces a very large transaction.
Binlog compression works with compression on a per-event basis, and we do get a very large row change event.
But the zstd compression in MySQL cannot handle events this large.
The size of the binlog suggests a signed 4 byte integer overflow.&lt;/p&gt;
&lt;p&gt;Being unable to see the binlog, and getting some garbage error message make this very hard to debug.
Our solution is to reclone the entire hierarchy (which is nasty, because it is a set of machines &amp;gt;10TB each).&lt;/p&gt;
&lt;p&gt;Later investigation confirms that there is a binlog compression transaction size limit, but it is apparently even 1 GB, not 2 GB.
This is not too bad a restriction. You probably do not want transactions that large anyway:
They would break group replication, they would take ages to roll back, and they would create a lot of other problems as well.&lt;/p&gt;
&lt;h1 id=&#34;problems-and-solutions&#34;&gt;
    &lt;a href=&#34;#problems-and-solutions&#34;&gt;
	Problems and Solutions
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;So we learn:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avoid large transactions. &lt;a href=&#34;https://blog.koehntopp.info/2020/07/27/mysql-commit-size-and-speed.html&#34;&gt;1000 to 10.000 rows&lt;/a&gt;

 are probably something you should aim for.&lt;/li&gt;
&lt;li&gt;Configure &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html#sysvar_max_binlog_cache_size&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;max_binlog_cache_size&lt;/a&gt;

 to under 1 GB. The server will then reject the large transaction instead of committing it to the binlog. This will prevent breaking the replication hierarchy.
&lt;ul&gt;
&lt;li&gt;Maybe similar or a small multiple of &lt;code&gt;max_allowed_packet&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;The default is wrong: &lt;code&gt;18446744073709547520&lt;/code&gt;, and the manual itself recommends 4 GB, but the product does not set the default to this.
Given that binlog compression can&amp;rsquo;t do more than 1 GB, that should probably the default.
MySQL should come with sensible defaults.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mysqlbinlog -vvv ...&lt;/code&gt; is not helpful, as it cannot parse this binlog, and the error message given is useless.
The program should give a proper diagnostic message.&lt;/li&gt;
&lt;li&gt;The server cannot handle this, and the error message shown above about &lt;code&gt;max_allowed_packet&lt;/code&gt; is misdirecting.
The server should give proper diagnostic messages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you experience this error, it is rather hard to fix:
Recloning does it, but that takes long.
Setting the &lt;code&gt;max_binlog_cache_size&lt;/code&gt; prevents the situation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rolling MySQL back and forward</title>
      <link>https://blog.koehntopp.info/2022/06/03/rolling-back.html</link>
      <pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/06/03/rolling-back.html</guid>
      <description>&lt;p&gt;Where I work, we &lt;a href=&#34;https://blog.koehntopp.info/2021/03/24/a-lot-of-mysql.html&#34;&gt;manage databases in an automated way&lt;/a&gt;

.
Not as automated as I wish it to be, but largely without touching boxes.&lt;/p&gt;
&lt;p&gt;We have been doing so for a long time.&lt;/p&gt;
&lt;p&gt;Over ten years ago, I set the team the challenge &amp;ldquo;be on an arbitrary version of MySQL within 20 workdays (one calendar month), no matter how many servers we have&amp;rdquo;.
We are there now, in a way: we are on a 30-day refresh cycle for our bare metal cloud, and we match that cycle for our virtualized fleet.
It was a long road.&lt;/p&gt;
&lt;h1 id=&#34;cloning-upgrading-and-downgrading&#34;&gt;
    &lt;a href=&#34;#cloning-upgrading-and-downgrading&#34;&gt;
	Cloning, upgrading and downgrading
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The three most basic operations we need to solve in order to manage a fleet of instances are:
creating clones of an existing database instance in a way that they can participate in a replication hierarchy,
upgrading instances to a new minor or major version,
and downgrading instances.&lt;/p&gt;
&lt;h2 id=&#34;cloning&#34;&gt;
    &lt;a href=&#34;#cloning&#34;&gt;
	Cloning
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Our tooling has three ways of cloning databases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using the high-speed native &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/clone-plugin.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;CLONE&lt;/code&gt;&lt;/a&gt;

 command.&lt;/li&gt;
&lt;li&gt;Using Percona &lt;code&gt;xtrabackup&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Shutting down an instance and running &lt;code&gt;rsync&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using native cloning is by far the fastest and most convenient version, but it also comes with the most restrictions:
Currently MySQL insists that the donor and the receiving instance be the exact same version.
This makes &lt;code&gt;CLONE&lt;/code&gt; the preferred method for scaling operations, but useless in upgrade and downgrade processing.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CLONE&lt;/code&gt; could be much more useful in upgrade contexts:
MySQL knows how to upgrade a datadir in-place.
There is even no longer a need to run an external &lt;code&gt;mysql_upgrade&lt;/code&gt; program, the code is now part of the server core.&lt;/p&gt;
&lt;p&gt;It would be easy to allow cloning from a lower version donor, drop the received data into a local datadir and then restart the server process into an upgrade cycle.
For forward version movements this would be a big improvement.&lt;/p&gt;
&lt;p&gt;For us, &lt;code&gt;rsync&lt;/code&gt; is an acceptable workaround to cloning, even if it is somewhat limited in speed.
That is, because we consider any use of MySQL without a minimum number of replicas broken, and prevent it.
Even for customers who think they do not need it &amp;ndash; eventually they all do.&lt;/p&gt;
&lt;p&gt;So we can always stop an instance, and take our time to do things with it after we have copied it.
It allows us to experiment, give extra capacity or try out new versions safely, even Pre-GA MySQL.&lt;/p&gt;
&lt;p&gt;Our safe fallback and the best compromise in speed, comfort and safety is, as always, Percona &lt;code&gt;xtrabackup&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;upgrading&#34;&gt;
    &lt;a href=&#34;#upgrading&#34;&gt;
	Upgrading
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In the past, MySQL had the rule that there are never on-disk format changes within a single major version.
That made it easy to move forward and backward between versions within a major release.
It was also kind of necessary &amp;ndash; the release quality of MySQL back then was not always of the kind where you could upgrade to the most recent version and be certain that it was an improvement.&lt;/p&gt;
&lt;p&gt;A lot has changed since then, and specifically MySQL 8 has seen fantastic improvements in refactoring of the codebase, in feature planning and in an improved software production process.&lt;/p&gt;
&lt;p&gt;A bit of these improvements has been traded for evolutionary speed, though:
With MySQL 8, on-disk format changes within the release series have been explicitly allowed, announced and in fact also happened several times.&lt;/p&gt;
&lt;p&gt;This became a lot easier since &lt;code&gt;mysql_upgrade&lt;/code&gt; functionality has been integrated into the server, and made automatic.&lt;/p&gt;
&lt;h2 id=&#34;downgrading&#34;&gt;
    &lt;a href=&#34;#downgrading&#34;&gt;
	Downgrading
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Downgrades have never been a great concern for MySQL.&lt;/p&gt;
&lt;p&gt;In the past that was not an issue, because upgrading between major versions was seen as a major effort and did not happen en-passant and outside a migration project.
That meant extensive testing, and retaining binary, up-to-date data directories of the replication hierarchy in question.
In case a downgrade was necessary, one would reclone the old version and inject it into the replication tree, reaping instances running the new version to balance.&lt;/p&gt;
&lt;p&gt;All this assumes that you did not yet upgrade the primary, which in any seamless migration always is the last step.&lt;/p&gt;
&lt;h1 id=&#34;mysql-8-complicates-this-a-bit&#34;&gt;
    &lt;a href=&#34;#mysql-8-complicates-this-a-bit&#34;&gt;
	MySQL 8 complicates this a bit
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;With MySQL 8, this becomes a bit more complicated, or more common.&lt;/p&gt;
&lt;p&gt;While MySQL 8 gives us very welcome new features, (&lt;a href=&#34;https://www.percona.com/blog/quick-peek-at-mysql-8-0-29/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here are some highlights&lt;/a&gt;

), they are sometimes a bit… undertested.&lt;/p&gt;
&lt;p&gt;Some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Our &lt;a href=&#34;https://www.percona.com/blog/mysql-8-0-29-and-percona-xtrabackup-incompatibilities/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;default clone mechanism&lt;/a&gt;

 does not work yet with 8.0.29. In our case, it affects several thousand instances that fall back to &lt;code&gt;rsync&lt;/code&gt; cloning, because &lt;code&gt;CLONE&lt;/code&gt;&amp;rsquo;s strict version requirements render it useless, too.&lt;/li&gt;
&lt;li&gt;Some people experience &lt;a href=&#34;https://forums.mysql.com/read.php?22,704532,704675&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;corruption with the new improved instance schema change&lt;/a&gt;

 in 8.0.29 and need to consider downgrading to 8.0.28.&lt;/li&gt;
&lt;li&gt;We had an instance the JAMF database, tables without primary key, virtual columns and broken utf16 combine in an unholy and explosive way that required us going back from 8.0.28 to 8.0.27.&lt;/li&gt;
&lt;li&gt;And there are some problems with Spatial Indexes not being used in 8.0.29 that can make it necessary to downgrade to 8.0.28 from 8.0.29.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these involve at one or two major versions to fix.
Being able to go back &amp;ldquo;a quarter or half a year&amp;rdquo; would make this much easier for everyone:
Users and Developers, and take a lot of strain of the vendor/customer relationship.&lt;/p&gt;
&lt;h2 id=&#34;clone-would-profit-too&#34;&gt;
    &lt;a href=&#34;#clone-would-profit-too&#34;&gt;
	&lt;code&gt;CLONE&lt;/code&gt; would profit, too
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;As discussed above, &lt;code&gt;CLONE&lt;/code&gt; has extremely strict version requirements between donor and destination.&lt;/p&gt;
&lt;p&gt;The upgrade path is fixable relatively trivial, as shown above, by falling into a server restart with upgrading.
A guaranteed two-minor-version downgradability (6 months window) could enable &lt;code&gt;CLONE&lt;/code&gt; to also handle downgrades, at speed.
It would make version movements up and down a lot less risky.&lt;/p&gt;
&lt;p&gt;That would be a lot of value added for little effort.&lt;/p&gt;
&lt;h1 id=&#34;dump-and-restore-are-not-an-option&#34;&gt;
    &lt;a href=&#34;#dump-and-restore-are-not-an-option&#34;&gt;
	Dump and Restore are not an option
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The default way to upgrade and downgrade a database is to dump and restore.
For Postgres for many years this was the recommended way to jump to the next version: &lt;code&gt;pg_dump&lt;/code&gt; and be done with it.&lt;/p&gt;
&lt;p&gt;Obviously that works only for toy deployments, because it does not scale.
Dumping throws away the indexes, and importing the dump involves reading the data, scanning and sorting it, and then rebuilding the index structures again.&lt;/p&gt;
&lt;p&gt;We have been there, in the past.&lt;/p&gt;
&lt;h2 id=&#34;the-51-to-55-disaster&#34;&gt;
    &lt;a href=&#34;#the-51-to-55-disaster&#34;&gt;
	The 5.1 to 5.5 disaster
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;For our upgrade from MySQL 5.1 to 5.5, our starting point was a non-GA version of MySQL 5.1 that included a bugfix we considered critical.
For this version, no binary, in-place upgrade path to 5.5 existed.&lt;/p&gt;
&lt;p&gt;That meant, our upgrade to 5.5 consisted in dumping each replication hierarchy and importing the dump into 5.5.
The 5.5 instance would then be connected to the replication tree, and had opportunity to catch up.
We would make it an intermediate primary eating 5.1 binlog, and emitting 5.5 binlog to further 5.5 instances we cloned out of the initial one.
At the same time we would reap production 5.1 instances to match the growth of the 5.5 population.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/mysql-upgrade.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Eventually we would move writes down from the 5.1 primary, promoting the 5.5 intermediate primary to try primary, &amp;ldquo;beheading&amp;rdquo; the replication hierarchy.
Back then we already had a three-digit number of MySQL replication hierarchies, and even back then a replication hierarchy typically had a disk footprint of 1-2 TB (ie 2-4h at 200 MB/s).&lt;/p&gt;
&lt;p&gt;All this takes around a week per hierarchy, and was not properly automated back then.
It meant that the transition from 5.1 to 5.5 took us almost two years.
In fact, the entire 5.1 upgrade experience is part of why we have so much automation.&lt;/p&gt;
&lt;h2 id=&#34;mysql-8-makes-this-easier&#34;&gt;
    &lt;a href=&#34;#mysql-8-makes-this-easier&#34;&gt;
	MySQL 8 makes this easier
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Things are marginally better in MySQL 8 these days:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/innodb-redo-log.html#innodb-disable-redo-logging&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;turn off redo logging&lt;/a&gt;

 while doing bulk loading or importing (8.0.21 or better).&lt;/li&gt;
&lt;li&gt;You can do &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/online-ddl-parallel-thread-configuration.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;parallel index creation&lt;/a&gt;

, so that is faster, if you have the CPU and memory to burn (8.0.27 or better) and your tables are within the constraints given.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the other hand, data grew.
Sometimes imports can become multi-month projects:
We had a 120 TB MariaDB instance that was converted to Oracle MySQL 5.7 by dump and reload.
This took a machine with AMD EPYC CPU, 1 TB of RAM, and multiple months to complete.
The conversion saga was painful enough to warrant a &lt;a href=&#34;https://twitter.com/_digitalknight/status/1526671502116114435&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Percona Live talk&lt;/a&gt;

 about the entire thing by Mohammed Gaafar and Pep Pla.&lt;/p&gt;
&lt;h2 id=&#34;mysql-8-makes-it-worse&#34;&gt;
    &lt;a href=&#34;#mysql-8-makes-it-worse&#34;&gt;
	MySQL 8 makes it worse
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;While MySQL makes &amp;ldquo;downgrades by reading a dump&amp;rdquo; somewhat better, at the same time there are aspects that make it worse.
The new dynamic permission system in MySQL 8 makes it easy to add new privileges over time.
The result is that privileges now change more rapidly.&lt;/p&gt;
&lt;p&gt;When you dump and reload (or downgrade a binary datadir), there is no mechanism currently to handle this safely.&lt;/p&gt;
&lt;p&gt;For example, 8.0.28 might add &lt;code&gt;AUDIT_ABORT_EXEMPT&lt;/code&gt;, and downgrading this in any way to 8.0.27 requires some &lt;code&gt;sed&lt;/code&gt; artistics in the dump or other kludgery: 8.0.27 won&amp;rsquo;t overlook the privilege names it does not know anything about.
Clearly, here is a tooling gap.&lt;/p&gt;
&lt;h1 id=&#34;tldr&#34;&gt;
    &lt;a href=&#34;#tldr&#34;&gt;
	TL;DR
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Databases are where the state is kept.
State has size, and copying state is slow.
That is why everybody is always very protective of state.
Do not treat on-disk data the Yolo way that Devops treats stateless instances.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introducing new features in a major version is okay if you have a mature codebase and development process.&lt;/li&gt;
&lt;li&gt;Changing persistent state on disk is more complicated than that.
&lt;ul&gt;
&lt;li&gt;Upgrades should always be binary and in-place.&lt;/li&gt;
&lt;li&gt;Downgrades should be possible binary and in-place at least for 2 minor version (6 months)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If you do not allow that, it is painful for everybody.
&lt;ul&gt;
&lt;li&gt;That includes us, because we can test slower, so Oracle MySQL gets less feedback.&lt;/li&gt;
&lt;li&gt;That includes Oracle MySQL itself, because it makes nifty features such as &lt;code&gt;CLONE&lt;/code&gt; needlessly specific and much less useful.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;We will, even with today&amp;rsquo;s degree of automation, never be able to upgrade by dump and restore, just because reindexing is very, very expensive. It is just too much data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Binary in-place upgrade and downgrade paths are completely non-optional.
We will never have the hell of the 5.1 to 5.5 transition again.
We simply cannot afford this anymore.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wie normale Leute eben...</title>
      <link>https://blog.koehntopp.info/2022/05/17/wie-normale-leute-eben.html</link>
      <pubDate>Mon, 16 May 2022 19:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/05/17/wie-normale-leute-eben.html</guid>
      <description>&lt;p&gt;Der Schnuppel ist jetzt in der niederländischen Groep 8, also in der 6. und letzten Klasse der Grundschule.
Die letzten Tests sind geschrieben, die Schulempfehlungen sind raus und bindend, die Folgeschule steht fest und hat die Anmeldung bestätigt.
Das Schuljahr ist also noch lange nicht zu Ende, aber alle Arbeit ist getan.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/snackphone-02.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Das Snackphone One, Zubehör und Nachfolgemodelle im Webshop.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Letzten Freitag kam der Schnuppel aus der Schule und berichtete davon, daß er mit einigen Freunden und Banknachbarn &amp;ldquo;Mobiltelefone&amp;rdquo; gebaut habe.
Also, auf Papier gezeichnet und als Bastelset ausgeschnittene Mobiltelefonmodelle.
Man habe jeweils unterschiedliche &amp;ldquo;Firmen gegründet&amp;rdquo; und den Schulkameraden jeweils sein Modell vermarktet.&lt;/p&gt;
&lt;p&gt;Okay.&lt;/p&gt;
&lt;p&gt;Die beste Ehefrau von allen &amp;ldquo;Oh, Basteln und Handarbeiten!&amp;rdquo;, und setzte sich also mit dem Kind hin, um sich die Modelle anzusehen und zu überlegen, wie man da Dinge verbessern könne.
Zum Beispiel hatte der Schnuppel &amp;ldquo;USB Sticks&amp;rdquo; für sein Telefon entworfen, also Dinge, die man in das Modell stecken kann und die dann da halten können.&lt;/p&gt;
&lt;p&gt;Kennt Ihr solche Pop Up Kinderbücher?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tausendkind.ch/artikel/buch/das-wetter-pop-up-buch_34785275-1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/popup.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.tausendkind.ch/artikel/buch/das-wetter-pop-up-buch_34785275-1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Das Wetter. Pop-Up Buch&lt;/a&gt;

&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So etwas hatten die beiden vor einigen Monaten für einen Klassenkameraden als Geschenkverpackung gebaut.
Da sollten sich ja leicht Modelle für Handies gestalten  und mit einfachen Mechanismen bauen lassen.&lt;/p&gt;
&lt;p&gt;Aber diese Woche geht es mit der Klasse zum Campen an die See.
Handies bauen und &amp;ldquo;verkaufen&amp;rdquo; ist also nicht.
Und außerdem ist der Spaß ja im Basteln.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/snackphone-01.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Der Snackphone Webshop.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Man kam also auf die Idee, daß man einen Webshop brauche für Mobiltelefone.
Von dem man PDFs mit Bastelbögen runterladen könne.
Und Bauanleitungen als Video.
Und eine limitierte Anzahl vorgebastelter Geräte.&lt;/p&gt;
&lt;p&gt;Und das würde er dann gerne als Projekt präsentieren wollen, mit einem Vortrag mit Video-Unterstützung.&lt;/p&gt;
&lt;h2 id=&#34;so-viele-wünsche-auf-einmal&#34;&gt;
    &lt;a href=&#34;#so-viele-w%c3%bcnsche-auf-einmal&#34;&gt;
	So viele Wünsche auf einmal
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wir waren dann also letztes Wochenende eine Familie als Webagentur.
Man hat sich Modelle und ein Marketingkonzept überlegt, und wir haben diskutiert, wie sich die Modelle unterscheiden und was so gebraucht wird.
Wie die Website aussehen soll.
Wie sein &amp;ldquo;Ich erkläre mein Produkt und wieso&amp;rdquo;-Vortragsvideo ablaufen soll.&lt;/p&gt;
&lt;p&gt;Und dann haben wir zusammen das ganze Projekt aus dem Boden gestampft.
Ich habe mit dem Schnuppel einen datenbanklosen Nichtwebshop in Flask gelötet.
Die Grundlage dafür war ein altes Login-System, das wir beide einmal zum Flask lernen gebaut haben.
Der Schnuppel hat ein Design auf meine Skelett-Website gezogen, denn er kann Frontend &amp;ndash; ich nicht.&lt;/p&gt;
&lt;p&gt;Sammy und der Schnuppel haben Videomaterial produziert, und er hat das in affenartiger Geschwindigkeit zu Filmchen verwurstet.
&lt;a href=&#34;https://www.youtube.com/channel/UCrMVxZ3iIowFHUFCRz3QVqA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Einige Jahre Youtube&lt;/a&gt;

 hinterlassen ihre Spuren am Kind.&lt;/p&gt;
&lt;p&gt;Sammy hat mit dem Schnuppel Bastelbögen produziert.
Die beiden haben Scripte zum &amp;ldquo;Verkaufen&amp;rdquo; der ganzen Sache in einem Videovortrag geschrieben, Szenen gedreht, und der Schnuppel hat es dann fertig geschnitten.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/snackphone-03.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Backend vom Webshop: Sales Panel.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wie bei jedem Life-Gang wird alles in letzter Sekunde fertig, und dann geht es in die Schule.
Nach der Mittagspause Vortrag und Öffnung des Webshops.
Der Vortrag scheint den Verkaufsdaten nach einigermassen funktioniert zu haben.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/snackphone-04.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Insbesondere die verschiedenen Motive auf den Bastelbögen für die Handyhüllen scheinen es den Leuten angetan haben.
An der Schule macht der Laserdrucker Überstunden, und die Kinder basteln.&lt;/p&gt;
&lt;h2 id=&#34;kinder-und-projekte&#34;&gt;
    &lt;a href=&#34;#kinder-und-projekte&#34;&gt;
	Kinder und Projekte
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Alles in allem haben wir zu Dritt gut drei Tage in das Projekt versenkt.
Wir haben als Team tatsächlich alle notwendigen Fertigkeiten um so ein Projekt grundlos aus dem Boden zu stampfen.&lt;/p&gt;
&lt;p&gt;Dem Kind macht das themenübergreifende Arbeiten einen großen Spaß.
Er hat bemerkt, daß er in einigen Bereichen (Mitsingen in Aufführungen an der Oper, Videoschnitt, Frontend-Design) erwachsenenwertige Fertigkeiten ausbildet.
Das macht ihn sehr stolz.&lt;/p&gt;
&lt;p&gt;Wieder ist ein zufällig aufgekommenes Thema zu einem Haken geworden, mit dem man tausend Dinge, Interessen und Challenges anbieten kann.
Das ist hauptsächlich Sammy zu verdanken, die auf solche Gelegenheiten lauert und dann gnadenlos und komplett maßlos Dinge durchzieht, weil es geht, Spaß macht und auf tausend und eine Weise lehrreich ist.
Hach.&lt;/p&gt;
&lt;p&gt;Zutaten: Papier, Bleistift, Schere, Schneidunterlagge, ein wenig Kleber. Ein Mobiltelefon mit guter Kamera. WebStorm. Ein Laserdrucker. Ein Billig-VPS zum Hosten von Flask-Anwendungen.
Sehr viel Zeit.&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube-nocookie.com/embed/fN8FqrQyWqU&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Fertig gelesen: Crafting Interpreters</title>
      <link>https://blog.koehntopp.info/2022/05/16/fertig-gelesen-crafting-interpreters.html</link>
      <pubDate>Mon, 16 May 2022 07:47:06 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/05/16/fertig-gelesen-crafting-interpreters.html</guid>
      <description>&lt;p&gt;Robert Nystrom is a language developer who works at Google on the Dart programming language.
In his book &lt;a href=&#34;https://www.amazon.de/-/en/Robert-Nystrom-ebook/dp/B09YLQSGKL&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crafting Interpreters&lt;/a&gt;

 he explains lexing, parsing and executing a programming language in an accessible way.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.amazon.de/-/en/Robert-Nystrom-ebook/dp/B09YLQSGKL&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/crafting-interpreters.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;&lt;a href=&#34;https://www.amazon.de/-/en/Robert-Nystrom-ebook/dp/B09YLQSGKL&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crafting Interpreters&lt;/a&gt;

&amp;quot;, Robert Nystrom&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Nystrom sets out with the (correct) observation that the matter of handling and executing code is a complex topic that is not made easier with all the theory that surrounds it.
In his book, he takes the reader on a journey to implement a toy language, Lox, two times.
First with a tree walker execution algorithm, not unlike PHP 3 or early Ruby.
Then, again, with a bytecode executor written in C.&lt;/p&gt;
&lt;p&gt;The book starts out by defining an intentionally very basic, but complete programming language, and then chapter by chapter builds the infrastructure to scan, parse and execute the code.
All explanations are very practical and on the code, but a lot of boxes, asides and cross-references make the theory behind all this discoverable, while at the same time keeping it out of the way.
One of the nicest and most practical introductions to programming language interpretation and compilation that I have seen.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.amazon.de/-/en/Robert-Nystrom-ebook/dp/B09YLQSGKL&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crafting Interpreters&lt;/a&gt;

&amp;rdquo;, Robert Nystrom, EUR 25.84&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fertig gelesen: Fietsparkeren bij Stations</title>
      <link>https://blog.koehntopp.info/2022/05/07/fertig-gelesen-fietsparkeren-bij-stations.html</link>
      <pubDate>Sat, 07 May 2022 07:47:06 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/05/07/fertig-gelesen-fietsparkeren-bij-stations.html</guid>
      <description>&lt;p&gt;The Netherlands realized around 2000 that they have a problem with bike parking around train stations, and with parking around stations in general.
A program was set up to fix that, assuming things would be done with in ten years.
The program was a great success, and people taking the bike to use the train, and to use a bike after they arrived at their destination by train increased greatly.
This created more needs, and so the program is, changed, still active today.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/fietspark1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.amazon.de/-/en/Folkert-Piersma/dp/9068688286&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fietsparkeren bij Stations&lt;/a&gt;

, Folkert Piersma and Wout Ritzema&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The book talks, in one chapter each, about analyzing customer needs, the history of the program, guidelines and goals, the plannning process, typical bike parking facilities, architecture and design, investment costs, facility operations, technical resources, innovative solutions and finally an outlook.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/fietspark2.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;The effect of all this can be seen around about any dutch train stations:
Not only is the sea of bikes around the train stations gone despite more people arriving by bike at the train than ever before,  also the quality of the area around the train stations improved.
The dark and seedy underpasses and the general feeling of insecurity around many train stations areas in other cities is not present here.&lt;/p&gt;
&lt;p&gt;The book explains how all of this is not an accidental outcome, but the result of a process that has been run for two decades with clear goals, working evaluation and continous improvement.
A must read for anybody interested in infrastructure at all.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.amazon.de/-/en/Folkert-Piersma/dp/9068688286&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fietsparkeren bij Stations&lt;/a&gt;

&amp;rdquo;, Folkert Piersma and Wout Ritzema, EUR 29.40 Hardcover&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fertig gelesen: Pale Rider</title>
      <link>https://blog.koehntopp.info/2022/05/06/fertig-gelesen-pale-rider.html</link>
      <pubDate>Fri, 06 May 2022 07:47:06 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/05/06/fertig-gelesen-pale-rider.html</guid>
      <description>&lt;p&gt;A book from 2017, about the Spanish Flu, which in the wake of the first world war turned into a global pandemic, killing between 50 and 100 million people on all continents.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/pale-rider.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.amazon.de/-/en/Laura-Spinney-ebook/dp/B01GH07CG6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pale Rider&lt;/a&gt;

, Laura Spinney&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Spinney describes the situation in the world in 1918, and how the Spanish Flu came into the world, and was experienced by people in various parts of the world.
The flu returned in several waves, some of which behaved unlike normal flu seasons and also had weirdly shaped killing patterns in the population.&lt;/p&gt;
&lt;p&gt;She also describes reactions of the population to pandemic fighting measures &amp;ndash; and we know them all from personal experience by now.
There have been people protecting mask mandates, self-isolation and social distancing on purpose, &amp;ldquo;mah freedums&amp;rdquo; criers and so on, just like with Covid.&lt;/p&gt;
&lt;p&gt;In parts 5 and 6, she looks at the flu from a modern perspective:
We now know about viruses, and specific the influenza A virus and its variants.
We understand its genetics and which parts of the virus are relevant for infection of humans, and they mutate.
We catalogue them &amp;ndash; the spanish flu was H1N1.
Spinney then looks at SARS, MERS and bird flu, and other viruses, and how they ramp up for another pandemic, strangely prescient of the Covid pandemic of 2020.
Also addresses, again spot on, anti-science propaganda and ossified politics unable to integrate new findings into existing rule frameworks.&lt;/p&gt;
&lt;p&gt;An enlightening and at the same time very frustrating read, written and published 3 years before Covid.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.amazon.de/-/en/Laura-Spinney-ebook/dp/B01GH07CG6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pale Rider&lt;/a&gt;

&amp;rdquo;, Laura Spinney, EUR 9.49 on Kindle&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fertig gelesen: The Kaiju Preservation Society</title>
      <link>https://blog.koehntopp.info/2022/05/05/fertig-gelesen-the-kaiju-preservation-society.html</link>
      <pubDate>Thu, 05 May 2022 07:47:06 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/05/05/fertig-gelesen-the-kaiju-preservation-society.html</guid>
      <description>&lt;p&gt;On an alternate earth alternate biology produces beings that can grow up to 150 meters tall and that are powered by natural biological nuclear reactor: The Kaiju.
Whenever anything, humans or Kaiju, uses nuclear energy, the boundary between the alternate realities is weakened and things can cross over.
That happened the first time late in the second world war, and that is how the legend of Godzilla came into the world.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.amazon.de/-/en/John-Scalzi-ebook/dp/B09DD2DK5Z&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/kps.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.amazon.de/-/en/John-Scalzi-ebook/dp/B09DD2DK5Z&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Kaiju Preservation Society&lt;/a&gt;

, John Scalzi&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s Covid times, it&amp;rsquo;s New York, and Jamie got fired from his management position of a delivery service and has to deliver things himself now.
Doing that, he meets an old acquaintance of him, which offers him a&amp;hellip; different job.
The job turns out to involve secrecy, a dimensional portal and working in an alternate world in which he meets things that usually live in SciFi novels.&lt;/p&gt;
&lt;p&gt;This is a fun read, from a fun Scalzi from earlier times woken up again.
Doubly so when contrasted with the rather exhausting Interdependency.
Action, Dad joke puns and an improbable premise delivered masterfully, with the parts clicking nicely into each other.&lt;/p&gt;
&lt;p&gt;A strong recommendation, and time well spent.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.amazon.de/-/en/John-Scalzi-ebook/dp/B09DD2DK5Z&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Kaiju Preservation Society&lt;/a&gt;

&amp;rdquo;, John Scalzi, EUR 8.99 on Kindle&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fertig gelesen: Sid Meier&#39;s Memoir!</title>
      <link>https://blog.koehntopp.info/2022/05/04/fertig-gelesen-sid-meier-memoir.html</link>
      <pubDate>Wed, 04 May 2022 07:47:06 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/05/04/fertig-gelesen-sid-meier-memoir.html</guid>
      <description>&lt;p&gt;The subtitle of &amp;ldquo;Sid Meier&amp;rsquo;s Memoir!&amp;rdquo; is &amp;ldquo;A Life in Computer Games&amp;rdquo;.
And that is exactly what we get:
Sid Meier lists, chronologically and very systematically, all the games he has been working on during his lifetime.
And tells us what happened to him, the game and the game development process while he worked on it.
Somehow that becomes a Memoir, even if some things are only implied or appear out of order.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/memoir.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.amazon.de/-/en/Sid-Meier-ebook/dp/B085845CX9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sid Meier&amp;rsquo;s Memoir!&lt;/a&gt;

, Sid Meier&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Born in 1954, Sid Meier is a prolific writer of computer games.
Together with Bill Stealey, he funded Microprose in 1982, and write a number of flight simulators - among them Solo Flight and F-15 Strike Eagle.
Growing tired of flight sim, he eventually &amp;ldquo;invents&amp;rdquo; the turn based strategy category of games by writing Pirates and Civilization.&lt;/p&gt;
&lt;p&gt;Leaving MicroProse after it merged with Spectrum, he funded Firaxis, and was able to pick up the Civilization trademark and some co-developers dissatisfied with MicroProse.
They were able to continue Civilization and turn it into what is has become today.&lt;/p&gt;
&lt;p&gt;The book is, as promised, some kind of Memoir and a fun read.
It also gives some insight into Meiers thought processes and what is important to him in game development.
An interesting person, producing an interesting and insightful book.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.amazon.de/-/en/Sid-Meier-ebook/dp/B085845CX9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sid Meier&amp;rsquo;s Memoir!&lt;/a&gt;

&amp;rdquo;, Sid Meier, EUR 8.49 on Kindle&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fertig gelesen: The Pattern on the Stone</title>
      <link>https://blog.koehntopp.info/2022/05/03/fertig-gelesen-the-pattern-on-the-stone.html</link>
      <pubDate>Tue, 03 May 2022 07:47:06 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/05/03/fertig-gelesen-the-pattern-on-the-stone.html</guid>
      <description>&lt;p&gt;This is an old book, from 1998, and much of the technology referred to directly has evolved since then.
But, as this a book that deals with basics, in terms of metaphor and analogy, it is still valuable.
It explains how computers work, and how we make the tech that powers them.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/pattern.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.amazon.de/-/en/W-Daniel-Hillis-ebook/dp/B06XC774TQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Pattern on the Stone&lt;/a&gt;

, W. Daniel Hillis&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Computers are really easy.
There is just Zero and One, and it does not get any more complicated than that.
The complexity in Computers and how they work comes instead from using simple rules, making them combinable, and then arranging them into more complicated structures by reusing previous building block.&lt;/p&gt;
&lt;p&gt;The book makes that very clear.
It starts at Zeroes and Ones, and takes the reader on a tour, explaining how we get the things we have (or had, 25 years ago), and how they are made by reusing stuff we build previously.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.amazon.de/-/en/W-Daniel-Hillis-ebook/dp/B06XC774TQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Pattern on the Stone: The Simple Ideas that Make Computers Work&lt;/a&gt;

&amp;rdquo;, W. Daniel Hillis, EUR 9.99 on Kindle&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A solar roof</title>
      <link>https://blog.koehntopp.info/2022/05/02/a-solar-roof.html</link>
      <pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/05/02/a-solar-roof.html</guid>
      <description>&lt;p&gt;I live in a house in a rural village somewhere in &lt;a href=&#34;https://en.wikipedia.org/wiki/Randstad&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Randstad&lt;/a&gt;

.
We are paying around 70 Euro per month in electricity, and up to 380 Euro per month in gas.
We are using the latter for heating and warm water, but we are already cooking with electricity.&lt;/p&gt;
&lt;p&gt;The house has a decent energy rating and a heat exchanger in the forced ventilation system.
That is to keep the warmth in when getting fresh air in.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/solar-01.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Energy cost of 2021. Electricity remains largely unchanged in 2022, but gas cost rose a lot.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We are using a lot of electricity for a 3-person household &amp;ndash; 5500 kWh, a lot of which can be attributed to &amp;ldquo;always on&amp;rdquo; electronics at home.
In particular, one file server consumes around 100W, which accumulates to not quite 1 MWh per year.
Outsourcing that to a cloud service would be too slow, and a lot more expensive, though.&lt;/p&gt;
&lt;h1 id=&#34;the-situation-and-the-configuration&#34;&gt;
    &lt;a href=&#34;#the-situation-and-the-configuration&#34;&gt;
	The situation and the configuration
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The house has a rather steep roof.
One solar installation service, recommended to us via a colleague, declined to make an offer for installation because they were not equipped to handle the roof steepness.
In the end, we went with Zonneplan, who did not have any objections to the general situation at all, and were able to handle it.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/solar-03.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Roof steepness, as seen from the south.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The roof itself is oriented at 155 deg, pointing the roof ridge line to south/southeast.
The west side is getting better light, but the first half of the day lights up the eastern roof as well.
According to &lt;a href=&#34;https://apps.apple.com/us/app/ephemeris-moon-and-sun-seeker/id1488277219&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;basic astronomy tooling&lt;/a&gt;

, the sun crosses the houses ridge line at 11:45 CEST, and solar noon (sun at 180 deg) is at 13:45.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/solar-04.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ridge line of the house, and the solar panel configuration.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We opted for a solution that places 9 panels on the eastern roof, and 16 on the western side.
The east side of the house got a 3x3 configuration, the west side a 4x4.
The lower two rows on the western side can get shadow from the neighbor and from the house wings (see the shadow on the image above), so they need &amp;ldquo;optimizers&amp;rdquo; to handle shade.
This is what it looks like on the west side:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/solar-05.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Panels on the west side of the roof.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The installed panel type has a size of 1.75m x 1.03m, and a Wp rating of 370W, so we get 200W/qm as expected from current tech.
This is good for 3330Wp on the eastern side and 5920Wp on the western side, for a theoretical total of 9250Wp.
In practice the configuration will never reach that level of output, because both sides of the roof cannot receive direct lighting at the same time.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/solar-06.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The type sticker of one of the panels.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The inverter is a three-phase Huawei SUN2000-10KTL.
It weighs 16kg and measures 52.5cm x 47.0cm x 16.6 cm, is rated IP65 and could in theory work from -25 to +60 degC.
It still likes to sit inside, dry and warm.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/solar-07.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Huawei SUN 2000 inverter.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The device makes no perceptible sound, even under load.
When producing 4500 Watt, it gets a bit warm, but not so much that it will feel painful to the touch.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/solar-08.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;FLIR image of the inverter while transforming 4500W from the roof.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Installing the solar panels on the roof catches energy that otherwise has been hitting the roof and reaching the rooms inside.
The rooms directly under the roof are now about 1.5C cooler, a great improvement.&lt;/p&gt;
&lt;p&gt;The panels themselves, even when in full sunlight, do not get particularly warm.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/solar-09.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;FLIR images of the solar panels while in full sunlight.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;production-and-consumption&#34;&gt;
    &lt;a href=&#34;#production-and-consumption&#34;&gt;
	Production and consumption
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Here is a spotless day in April, still on MET, and hardly any clouds.
We have sunrise at 6:40, around 7:00 we see a sharp rise of energy produced on the eastern panels.
This peaks around 9:00 at ~2300W, then falls off a bit until around 11:30 the western panels start to kick in.
From here on the production switches over from eastside to westside, for a peak of 5300W around 16:00.
Sunset is at 20:40, and indeed we get at least a bit of energy almost to the end, though the decline is rather steep starting at 19:40 or so.&lt;/p&gt;
&lt;p&gt;Total production is 44.5 kWh over the day.
Around 10 kWh can be attributed to the modules on the eastern side, and their power comes in early when we need it for breakfast.
They help a great deal to even out production over the day.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/solar-10.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;The inverter has a GSM module and feeds into the systems of Zonneplan.
That also means I get no direct access to the Modbus in the Inverter without interfering with their warranty.&lt;/p&gt;
&lt;p&gt;I can access the electricity counter of our house, though, through the Dutch P1 interface.
This is done, for example, with a &lt;a href=&#34;https://www.zuidwijk.com/product/p1-reader-ethernet/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;P1 reader ethernet&lt;/a&gt;

 by Marcel Zuidwijk, connecting the P1 interface from the counter to a free power on the DSL modem.
The data is put onto the &lt;a href=&#34;https://blog.koehntopp.info/2020/11/15/my-home-sensor-network.html&#34;&gt;house MQTT bus&lt;/a&gt;

, using &lt;a href=&#34;https://github.com/Lalufu/p1-mqtt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;software&lt;/a&gt;

 written by a friend and colleague.&lt;/p&gt;
&lt;p&gt;Reading the counters, I get a good overview of what happens during the day:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/solar-11.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Red line: Power drawn from the grid. Green line: Power sent into the grid. You can see how between 6:00 and 20:00 we are sending power to the grid at almost all times. The &amp;ldquo;Range&amp;rdquo; data shows we have drawn 6.25 kWh from the grid over the day, and sent around 30.1 kWh into the grid over the day.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In the image above, we can see that we sent 30.1 kWh into the grid yesterday.
The Zonneplan app gives me a total production of 39.42 kWh for that day.
We also took 6.25 kWh from the grid on top of that.&lt;/p&gt;
&lt;p&gt;That gives us a usage of (6.25 kWh + 39.42 kWh - 30.1 kWh =) 15.57 kWh for the day.
Out of this, we covered (39.42 kWh - 30.1 kWh =) 9.32 kWh internally.
We pushed a net surplus of (30.1 kWh - 6.25kWh = ) 23.85 kWh into the grid.&lt;/p&gt;
&lt;p&gt;Using the current counters, I can get a more detailed graph over the day.
You can see a base load in the house of around 300W &amp;ndash; around 100W can be attributed to one server, the rest is various other electronics that is always on.
Great spikes show household appliances doing things: Dishwasher, washing machine, espresso maker, microwave, cooking plates and ovens all draw around 2kW to 3kW, mostly to heat up water.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/solar-12.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Up: drawing power from grid. Down: Sending power into the grid. You can see how clouds and internal consumption take their bites of the &amp;ldquo;perfect&amp;rdquo; production curve.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Looking at the day-curve this way you can see that we would profit from a household battery.
On this day in April, we could maybe do with a battery of 5kWh or less, but in darker times a larger battery would be more effective.
We could achieve complete autonomy from Equinox to Equinox, and charge the missing energy from the grid during cheap times in the darker half of the year.&lt;/p&gt;
&lt;p&gt;The matching piece of equipment would be a Huawei LUNA2000-15-S0 battery pack.
It is a 15 kWh piece of equipment that is 137cm high, 67cm wide and 14cm deep, coming in at 164kg and around 7200 Euro plus shipping.
The pack is based on LFP technology, not on Li-Ion.&lt;/p&gt;
&lt;h1 id=&#34;legal-and-financials&#34;&gt;
    &lt;a href=&#34;#legal-and-financials&#34;&gt;
	Legal and financials
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;We purchased the entire solution through Zonneplan at 10162 Euro, so around 1100 Euro per 1 kWp.
This could be a noticeably less, if we did not have shade on the west side &amp;ndash; these optimizers are expensive.&lt;/p&gt;
&lt;p&gt;Zonneplan not only installed the whole thing, which took less than a day, but also took care of all the planning, and all the paperwork.
That was very comfortable, and they handled all the things professionally and competently.&lt;/p&gt;
&lt;p&gt;In April, we produced 871.1 kWh, and sent 718 kWh into the grid.&lt;/p&gt;
&lt;p&gt;In the Netherlands, power sent into the grid &amp;ldquo;turns the counter backwards&amp;rdquo;.
That is, you can treat the network like a battery, 1 kWh sent in is 1 kWh you can get back later for free.
This is called &amp;ldquo;&lt;a href=&#34;https://www.rijksoverheid.nl/onderwerpen/duurzame-energie/zonne-energie&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Salderingsregeling voor huishoudens en MKB&lt;/a&gt;

&amp;rdquo;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Households and small businesses are allowed to feed self-generated electricity back into the grid until January 1, 2023. And offset it against their consumption at another time. This is called offsetting.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This rule was supposed to end at 1. January 2023, but will be prolonged at least one year more, says &lt;a href=&#34;https://solarmagazine.nl/nieuws-zonne-energie/i26235/startdatum-afbouw-salderingsregeling-zonnepanelen-niet-haalbaar-ambtenaren-adviseren-1-jaar-uitstel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Solar Mag&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Startdatum afbouw salderingsregeling zonnepanelen niet haalbaar, ambtenaren adviseren 1 jaar uitstel&lt;/p&gt;
&lt;p&gt;Start date for phasing out solar panel feed-in scheme not feasible, officials advise 1 year postponement&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Phasing out the salderingsregeling to Zero is supposed to be done in 9% steps, not all at once.
So in the first year, 91% of the power would be part of the salderingsregeling, the rest the electricity provider would pay for, and so on.&lt;/p&gt;
&lt;p&gt;The law says that the provider must pay &amp;ldquo;redelijke vergoeding&amp;rdquo; (a reasonable compensation).
At this point, a compensation of 80% of what you pay for electricity to them is considered reasonable by the lawmaker.&lt;/p&gt;
&lt;p&gt;That would mean, I get paid at least 18.0 ct/kWh when I am paying them 22.5 ct/kWh.
That&amp;rsquo;s workable.&lt;/p&gt;
&lt;h1 id=&#34;outlook&#34;&gt;
    &lt;a href=&#34;#outlook&#34;&gt;
	Outlook
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Right now we have solved our  electricity problem, and manage to have solid overproduction (at least in the brighter part of the year).
We are also getting a tiny electric car this year, which will eat into our budget.
That also means we are not getting a Huawei battery this year.&lt;/p&gt;
&lt;p&gt;We will have to eventually change the house heating from a central gas burner to a different system, likely air conditioners/heat exchangers that use electricity to warm up and cool air directly.
They work as heat pumps, and produce between 3 kWh and 5 kWh heat for each 1 kWh they consume.
This will considerably increase our consumption.&lt;/p&gt;
&lt;p&gt;Warming up 1l of water by 1C takes around 1.16 Wh, and the cooking gas we use provides around 10 to 12 kWh per cubic metre (1000l).
So a shower that uses 240l (0.24 cubic metres) of gas consumes around 2.4kWh.
Similar math can be applied to dishwashers and washing machines (&amp;ldquo;uses 0.885kWh to heat up 15l of water by 50C&amp;rdquo;), and to cooking plates.&lt;/p&gt;
&lt;p&gt;We will be using a &lt;em&gt;lot&lt;/em&gt; more electricity if we are going to eliminate cooking gas completely in this household.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fertig gelesen: The Undersea Network</title>
      <link>https://blog.koehntopp.info/2022/05/02/fertig-gelesen-the-undersea-network.html</link>
      <pubDate>Mon, 02 May 2022 07:47:06 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/05/02/fertig-gelesen-the-undersea-network.html</guid>
      <description>&lt;p&gt;Where is the Internet coming from and how and when was it built?
It&amp;rsquo;s a network of tubes, or rather cables, and these days they are mostly fiber.
Much of it was built during the dotcom boom, but little has been written.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/05/network.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.amazon.de/-/en/Nicole-Starosielski-ebook/dp/B00WO58MBI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Undersea Network&lt;/a&gt;

, Nicole Starosielski&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Nicole Starosielski is a professor at New York University Steinhardt, and specializes in Internet Infrastructure, specifically underwater sea cables.
In her book, she documents the history and development of the infrastructure that carries more than 99% of todays Internet data, the backbone that defines the global transport capacity of the Internet.&lt;/p&gt;
&lt;p&gt;Starosielski not only explores the technology, but also the topography and history of the cables, and of course the policts that follow inevitably if you plug a cable that connects to remote locations.
The book meanders between travel report, history book and sociotechnical politics brief.&lt;/p&gt;
&lt;p&gt;A companion to the book, the Website &lt;a href=&#34;http://www.surfacing.in/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Surfacing&lt;/a&gt;

 allows the reader to interactively follow and explore the structures the book explains.
Search terms at the beginning of each chapters imagery link the chapter in the book to the interactive display on the Surfacing website.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.amazon.de/-/en/Nicole-Starosielski-ebook/dp/B00WO58MBI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Undersea Network&lt;/a&gt;

&amp;rdquo;, Nicole Starosielsky, EUR 19.61 on Kindle&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQL Engineering Guidelines</title>
      <link>https://blog.koehntopp.info/2022/04/15/sql-engineering-guidelines.html</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/04/15/sql-engineering-guidelines.html</guid>
      <description>&lt;p&gt;Where I work, the native database is MySQL.
This is what the database team fully supports.&lt;/p&gt;
&lt;p&gt;Other databases, notably Postgres, are in use mostly because external products we run require them.
Internal projects should use MySQL.
An external company provides limited support for running Postgres.&lt;/p&gt;
&lt;p&gt;The recommended version of MySQL to be used is currently the latest 8.0.
It has a large number of improvements over the previous version 5.7 in terms of the SQL subset supported, handling of sorts, critical character set support and join strategies.
Versions of MySQL older than 5.7 are completely unsupported and contain unfixed critical CVEs.
They must never be used.&lt;/p&gt;
&lt;p&gt;Note that &amp;lsquo;fully supports&amp;rsquo; does also include operational aspects of the database:
Automated handling of grants, automated fail-over, replication tree management, capacity planning, restore testing of automated backups, and integration with compliance tickets.
Using other SQL products is likely to leave a team with a lot of toil that is taken away by automation had you been choosing MySQL.&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;
    &lt;a href=&#34;#overview&#34;&gt;
	Overview
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We are using a &amp;lsquo;safe subset&amp;rsquo; of MySQL (&amp;ldquo;Blue MySQL&amp;rdquo;) and not all features of the product.
That said, we are an enterprise with several hundred use-cases.
For each of these rules a counterexample project likely exists.&lt;/p&gt;
&lt;p&gt;The &amp;lsquo;safe subset&amp;rsquo; of MySQL mostly means: We do not store code in the database.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We do not use views.&lt;/li&gt;
&lt;li&gt;We do not use stored procedures or stored functions.&lt;/li&gt;
&lt;li&gt;We do not use triggers.&lt;/li&gt;
&lt;li&gt;We do not use UDFs (&amp;ldquo;user defined functions&amp;rdquo;, &lt;code&gt;.so&lt;/code&gt; files that are loaded into the server proper and can be called as SQL-functions)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We do not run code in the database, because it makes applications very hard to update atomically in a rollout.
It also makes it hard to see all code that is part of the application in a developers&amp;rsquo; editor, because some of it is in git, and other code is part of the schema.
Finally, code in the database creates some kind of spooky action at a distance that creates lots of debugging problems.&lt;/p&gt;
&lt;p&gt;Specifically for MySQL, the MySQL stored procedure language is as beautiful as COBOL, as efficient as PHP 3, and as debuggable as embedded Lua.
Do not use it.&lt;/p&gt;
&lt;h2 id=&#34;general&#34;&gt;
    &lt;a href=&#34;#general&#34;&gt;
	General
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;SQL systems are stateful systems, so your application can be stateless.
That means there is state in a lot of unexpected places in SQL, and you have to be aware of it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2020/07/28/mysql-connection-scoped-state.html&#34;&gt;Connection Scoped State&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;COMMIT can fail, and you must be able to retry&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Databases store data for a long time.
Often longer than the code that created the data lives.
For example, there are databases in production that have an uninterrupted change history of more than 20 years.
The data started out in Postgres, was converted and migrated to MySQL 4.0 and then lived through a change of versions up to MySQL 8.0.&lt;/p&gt;
&lt;p&gt;Database administrators operate with this in mind, and use a lot of defensive operational procedures.
Get their input and their help when planning changes.&lt;/p&gt;
&lt;p&gt;All data has a full data lifecycle: It is being created, ingested, stored, changed and updated and ultimately exported to different systems and/or deleted.
Plan the full data lifecycle, and pay special attention to tables that have time as a component of the primary key or the table name, or otherwise exhibit log nature.
Every transactional database has a data warehouse inside, and it struggles to get out. Given the same number of customers, articles and transactions each day, will your database grow without bounds and which structures cause that?&lt;/p&gt;
&lt;p&gt;Database administrators will help you to complete the data lifecycle.&lt;/p&gt;
&lt;h2 id=&#34;absolute-limits&#34;&gt;
    &lt;a href=&#34;#absolute-limits&#34;&gt;
	Absolute Limits
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;MySQL has a number of limits that are part of the codebase.&lt;/strong&gt;
Specifically, &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/innodb-limits.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;InnoDB limits&lt;/a&gt;

 are documented in the manual.
It is useful to be familiar with at least the information on indexing.&lt;/p&gt;
&lt;p&gt;On top of that there are other limits that will affect you, based on physics, operations and available hardware.&lt;/p&gt;
&lt;h3 id=&#34;size&#34;&gt;
    &lt;a href=&#34;#size&#34;&gt;
	Size
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Are you running out of disk space? Know what to monitor, and how to handle the situation and &lt;a href=&#34;https://blog.koehntopp.info/2022/02/16/databases-how-large-is-too-large.html&#34;&gt;absolute size limits&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Deleting data costs disk space.&lt;/strong&gt;
MySQL is running in a replication hierarchy, and in order to replicate MySQL stores a pre- and post-change image of each changed row in the binlog.
This is kept for up to seven days to allow lagging replicas to catch up.
For deletion, the pre-deletion image of the row is sent to the binlog, in order to allow the replica to find the row to delete it. This consumes disk space, which will be reclaimed only after seven days.&lt;/p&gt;
&lt;p&gt;A DBA can help you here to reclaim space early.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Size is Time, and Time is Size.&lt;/strong&gt;
Assuming 400 MB/s copy speed, copying one terabyte of data takes around 45 minutes.
Adding 15 minutes of replication catchup, you can expect around 1 hour of creation time per terabyte of database size.&lt;/p&gt;
&lt;p&gt;Databases of around 200-250 GB size have a creation time of around 10-15 minutes per instance.
That is sufficient even for databases in Kubernetes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The DBA Standard SLO supports databases are &amp;lt;2 TB in size&lt;/strong&gt;, and fit onto a 1.92 TB sized standard NVME drive, including binlog and overhead.
They take around 2h to create from a donor instance.&lt;/p&gt;
&lt;p&gt;Databases larger than that require special storage (external persistent volumes), which will have worse latency and cost more.
It will not be available immediately, and moving existing databases (which are already large) to different storage will take time in accordance with their size. Plan ahead, and plan with a DBA to make this a smooth transition.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The instance size limit is approximately 10 TB.&lt;/strong&gt; Instances larger than 10 TB will have a creation time so large that operations will have at most one attempt per day to do anything with the instances.
This produces unsustainable toil for DBA, and drag on your project.&lt;/p&gt;
&lt;p&gt;That is, some time &lt;strong&gt;before hitting the 10 TB barrier your project will have to have an exit plan in place&lt;/strong&gt; to avoid hitting this limit.&lt;/p&gt;
&lt;p&gt;The plan can be&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use Cassandra or another sharded NoSQL storage.&lt;/li&gt;
&lt;li&gt;use shards in MySQL, doing application level sharding.&lt;/li&gt;
&lt;li&gt;consider a supported distributed database.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It will involve in all cases moving to a distributed setup that more or less transparently shards.
It will also involve moving to a setup where &lt;code&gt;JOIN&lt;/code&gt; will be much more costly because of the distributed nature of the database.&lt;/p&gt;
&lt;p&gt;We do currently have larger databases than 10 TB.
Contact their owners to understand the nature of their toil problems and why your setup wants to avoid this.&lt;/p&gt;
&lt;h3 id=&#34;latency&#34;&gt;
    &lt;a href=&#34;#latency&#34;&gt;
	Latency
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Write your SQL and your applications SQL execution model with milliseconds of query execution time in mind, even for reads.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Currently, we have on-prem databases with a memory saturated setup, and they expose query latencies for single primary key lookups in memory of 0.15ms.
This will not hold in the cloud, in virtual environments, and also not in setups that put ProxySQL in-between.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Count the number of queries run to render a page using the available Event Instrumentation.&lt;/strong&gt;
Will the page render properly with 1-4 milliseconds of query execution time for each query?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Keep read-replicas of your data close to the application.&lt;/strong&gt; Crossing the boundaries between AZs will add another 4-10ms, or more, to each query. If your application is running on-premises, but your database is in the cloud, this is likely much slower than setting up local replicas and extending the replication hierarchy into the local AZ.&lt;/p&gt;
&lt;p&gt;Using certain database ORMs, it can be easy to accidentally create SQL being executed in a loop.
For each object accessed in a loop, the ORM secretly fires a single primary key lookup in the background to fleshen the object lazily when it is accessed for the first time.
This is called machine-gunning.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Avoid machine-gunning&lt;/strong&gt;, primary key lookups in a loop. Consider using a &lt;code&gt;SELECT ... FROM table WHERE id IN ( ... around 1000 constants ... )&lt;/code&gt; clause.
If this is driven by another select, consider using a &lt;code&gt;JOIN&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;statement-size&#34;&gt;
    &lt;a href=&#34;#statement-size&#34;&gt;
	Statement size
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Objects and statements are limited to &lt;code&gt;max_allowed_packet&lt;/code&gt;, currently 16 MB in size.
Additionally, certain &lt;code&gt;WHERE id IN (...)&lt;/code&gt; clauses begin to show degraded performance and excessive memory use for a large number of ids in MySQL 8.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Aim for around 1000 values in such clauses.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stay below 16 MB statement size.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;For bulk writes, keep the transaction size to a reasonable 1000 to 10000 rows per commit.&lt;/strong&gt;
Group replication will be unhappy if you don&amp;rsquo;t.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;many-tables-join&#34;&gt;
    &lt;a href=&#34;#many-tables-join&#34;&gt;
	Many-tables &lt;code&gt;JOIN&lt;/code&gt;
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Avoid &lt;code&gt;JOIN&lt;/code&gt;-ing more than 10 tables at once.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If the optimizer were to brute-force all possible &lt;code&gt;JOIN&lt;/code&gt; combinations on an &lt;code&gt;n&lt;/code&gt;-way table &lt;code&gt;JOIN&lt;/code&gt;, the number of combinations would be &lt;code&gt;n!&lt;/code&gt; (&lt;a href=&#34;https://en.wikipedia.org/wiki/Factorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;factorial&lt;/a&gt;

 of n).
This becomes an unwieldy number at a value of &lt;code&gt;n=10&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The optimizer will have to apply heuristics around a join-plan depth of 10, and do weird things, including sometimes missing obvious optimizations.&lt;/p&gt;
&lt;p&gt;This is usually not a problem, but if you are using an ORM and have deep class hierarchies, you may be hitting this limit inadvertently.
Be aware of your class-subclass relationships and how they are modelled, and what SQL is being generated.&lt;/p&gt;
&lt;h3 id=&#34;bulk-updates-large-deletes-inserts-updates&#34;&gt;
    &lt;a href=&#34;#bulk-updates-large-deletes-inserts-updates&#34;&gt;
	Bulk updates (large deletes, inserts, updates)
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Very large atomic transactions are being executed on the primary, and on commit, enter the binlog. They then go downstream and execute on the replicas of that level, and so on.&lt;/p&gt;
&lt;p&gt;As each replica has the same data as the primary, they will all approximately complete the statement at the same time. Your busy query will hog all replicas at the same tier at approximately the same time. You will likely lose capacity at each tier of the replication tree at once when executing such a large transaction.&lt;/p&gt;
&lt;p&gt;A query such as &lt;code&gt;DELETE FROM sales WHERE article_id &amp;lt; 1000000&lt;/code&gt; has the potential to make changes to very many rows. The update can take noticeable time, or depending on the data, even run for minutes or hours. The change can stall replicas, induce replication delay or otherwise impact production.&lt;/p&gt;
&lt;p&gt;In all our supported languages packages, we have replication aware bulk update functions to handle this:
They will break up such large changes into manageable chunks, and execute them while monitoring replication lag.
Be sure to make good use of them, they exist for a reason.&lt;/p&gt;
&lt;h2 id=&#34;data-types-and-column-definitions&#34;&gt;
    &lt;a href=&#34;#data-types-and-column-definitions&#34;&gt;
	Data types and column definitions
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;MySQL supports a wide range of data types.
They are documented &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/data-types.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;in the manual&lt;/a&gt;

.
Each data type comes with a range and a storage size.
It is useful to know properties of the most common types.&lt;/p&gt;
&lt;p&gt;When choosing data types, think big (&amp;ldquo;assume 10x growth&amp;rdquo;).
Data types can be changed ex-post, but require an &lt;code&gt;ALTER TABLE&lt;/code&gt; command or an online schema change to be run.
This usually involves a background copy of all data of that table, and can take a lot of time for large tables.&lt;/p&gt;
&lt;p&gt;Additional information about commonly needed data types can be found in your projects coding guidelines.&lt;/p&gt;
&lt;p&gt;The following rules have been proven to be useful guidance in the past:&lt;/p&gt;
&lt;h3 id=&#34;names&#34;&gt;
    &lt;a href=&#34;#names&#34;&gt;
	Names
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Names are snake_case.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Do not use uppercase table names or column names.
We have done that in the past, and there are tables with upper case characters in names.
Don&amp;rsquo;t.&lt;/li&gt;
&lt;li&gt;Depending on the version of MySQL and the filesystem in use, table names are case-sensitive or not, because they end up being file names on a case-sensitive file system or not.
Specifically, in production, on Linux, for older versions of MySQL table names are case-sensitive, so &lt;code&gt;Sales&lt;/code&gt; and &lt;code&gt;sales&lt;/code&gt; are different tables.
On Mac and Windows, with case-insensitive filesystems, they will be the same table.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Be consistent with column names.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Do not use MySQL keywords or reserved words as column names.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/keywords.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MySQL 8 list of reserved words&lt;/a&gt;

 lists keywords, reserved words, new keywords and reserved words - none of them should be used, even if some of them technically can be used.&lt;/li&gt;
&lt;li&gt;If you must, quoting table and column names (&lt;code&gt;`table_name`&lt;/code&gt;.&lt;code&gt;`column_name`&lt;/code&gt;) avoids reserved word problems completely.&lt;/li&gt;
&lt;li&gt;Theoretically, using backticks it is possible to have column names and table names that contain spaces, or even emoji.
Don&amp;rsquo;t even think about that, much less try it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;normalization&#34;&gt;
    &lt;a href=&#34;#normalization&#34;&gt;
	Normalization
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Understand database normal forms and aim for a relaxed third normal form.&lt;/strong&gt;
Try to &lt;a href=&#34;https://blog.koehntopp.info/2005/09/11/nermalisation.html&#34;&gt;normalize&lt;/a&gt;

 properly until you run into weirdness.
Only denormalize when you actually experience performance problems.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keys&#34;&gt;
    &lt;a href=&#34;#keys&#34;&gt;
	Keys
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Every table must have a primary key.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In MySQL the primary key also defines the physical order of the data on disk:
Rows with similar primary key values will usually be stored physically closer together than rows with more dissimilar primary key values.
MySQL contains a large number of optimizations to exploit this and make this fast.&lt;/li&gt;
&lt;li&gt;Not having a primary key breaks group replication and row based replication.
We are using these features, so primary keys are mandatory.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Primary keys are short:&lt;/strong&gt; &lt;code&gt;integer&lt;/code&gt; (4 byte), &lt;code&gt;bigint&lt;/code&gt; (8 byte), &lt;code&gt;VARBINARY(16)&lt;/code&gt; (the output of &lt;code&gt;UUID_TO_BIN()&lt;/code&gt;, 16 byte).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL uses primary keys as row addresses in all secondary keys. The longer the primary key, the more expensive the secondary key.&lt;/li&gt;
&lt;li&gt;That means &lt;code&gt;INDEX(a)&lt;/code&gt; will actually store &lt;code&gt;INDEX(a,id)&lt;/code&gt; (with &lt;code&gt;id&lt;/code&gt; being the primary key) as a secondary index, and the optimizer knows that, and can use this.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Primary keys determine physical data ordering.&lt;/strong&gt;
Using the default InnoDB storage engine, the data itself is organized in a B+-tree in the primary key.
That is, the primary key holds the actual data rows in the leaf-nodes of the primary key.
That implies the data is physically arranged in primary key order.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is why mutating a primary key is so expensive.&lt;/li&gt;
&lt;li&gt;This can be exploited to keep hot rows close together and reduce the working set size of the database.
InnoDB prefers hot rows to be close together, and has special-case code to make this work.&lt;/li&gt;
&lt;li&gt;This resonates nicely with &lt;code&gt;auto_increment&lt;/code&gt;: Using this, more recently inserted rows will be more on the &amp;ldquo;right-hand side&amp;rdquo; of the table, and older rows will be more on the &amp;ldquo;left-hand&amp;rdquo; side. Often data hotness coincides with row age, so using &lt;code&gt;auto_increment&lt;/code&gt; the database will automatically exploit this for smaller memory footprint.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Primary keys are immutable.&lt;/strong&gt;
Changing a primary key physically moves the record around in the data tree that makes up a table.
This is an extremely expensive operation.
Never change a primary key value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Primary key values are not re-usable.&lt;/strong&gt;
When deleting a record, the primary key that once identified that record can never be re-used.
It may be still referenced by things outside the database, such as URLs with the &lt;code&gt;id&lt;/code&gt; as a parameter.
Re-using the primary would potentially link an external thing to a completely unrelated &lt;code&gt;id&lt;/code&gt; value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;To use a UUID as a primary key, define the column as &lt;code&gt;VARBINARY(16)&lt;/code&gt; and use the &lt;code&gt;UUID_TO_BIN()&lt;/code&gt; function with swap flag set to true.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html#function_uuid-to-bin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UUID_TO_BIN(string_uuid, 1)&lt;/a&gt;

: &amp;ldquo;If swap_flag is 1, the format of the return value differs: The time-low and time-high parts (the first and third groups of hexadecimal digits, respectively) are swapped. This moves the more rapidly varying part to the right and can improve indexing efficiency if the result is stored in an indexed column.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;From MySQL&amp;rsquo;s point of view, &lt;code&gt;AUTO_INCREMENT&lt;/code&gt; integer primary keys work better than UUID, but a lot of software prefers UUID.
&lt;ul&gt;
&lt;li&gt;UUIDs can have advantages for high insert rates, because they can be created independently in different clients in parallel.&lt;/li&gt;
&lt;li&gt;MySQL stores data physically in primary key order, but the way UUIDs order is not advantageous to that.
MySQL provides the &lt;code&gt;UUID_TO_BIN(string_uuid, 1)&lt;/code&gt; function to fix this.
Consider using it, it unlocks many performance advantages. &lt;a href=&#34;https://blog.koehntopp.info/2021/04/06/mysql-and-uuids.html&#34;&gt;UUID discussion&lt;/a&gt;

, &lt;a href=&#34;https://blog.koehntopp.info/2020/09/22/alter-table-for-uuid.html&#34;&gt;Another UUID discussion&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;The datatype produced by &lt;code&gt;UUID_TO_BIN()&lt;/code&gt; is a &lt;code&gt;VARBINARY(16)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;When using &lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;bigint&lt;/code&gt; primary keys, consider making it &lt;code&gt;unsigned&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It will double the key range.&lt;/li&gt;
&lt;li&gt;If your primary programming language cannot handle &lt;code&gt;unsigned&lt;/code&gt; values, it is okay to use &lt;code&gt;signed&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Remember that Javascript has a 53-bit problem.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;In your table definition, keep the primary key to the left.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is purely cosmetic, but it will make the life easier for reviewers of your code.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;null-values-and-nullable-columns&#34;&gt;
    &lt;a href=&#34;#null-values-and-nullable-columns&#34;&gt;
	NULL values and nullable columns
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Define columns as &lt;code&gt;NOT NULL&lt;/code&gt;.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;If a column is nullable, the NULL value must have exactly one meaning, and it must be documented (e.g. in a COMMENT clause in the CREATE TABLE statement).
More on &lt;a href=&#34;https://blog.koehntopp.info/2020/08/25/null-is-null.html&#34;&gt;NULL values&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;If you are using &lt;code&gt;LEFT JOIN&lt;/code&gt; or access columns that can be nullable, consider the SQL functions &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#function_coalesce&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;COALESCE()&lt;/code&gt;&lt;/a&gt;

, &lt;code&gt;IFNULL()&lt;/code&gt; and the comparison operator &lt;code&gt;IS NULL&lt;/code&gt;.
NULL values do not compare normally, so wrap nullables into one of these functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;default-values&#34;&gt;
    &lt;a href=&#34;#default-values&#34;&gt;
	Default values
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;avoid &lt;code&gt;DEFAULT&lt;/code&gt; values&lt;/strong&gt;, except for natural &amp;ldquo;zero&amp;rdquo; values appropriate for the type.&lt;/li&gt;
&lt;li&gt;for &lt;code&gt;DEFAULT&lt;/code&gt; date and time values, &lt;strong&gt;see the section on date and time values&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;boolean&#34;&gt;
    &lt;a href=&#34;#boolean&#34;&gt;
	Boolean
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Use &lt;code&gt;TINYINT&lt;/code&gt; to store booleans.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;MySQL &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/other-vendor-data-types.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;does not have a native boolean type&lt;/a&gt;

, so we use &lt;code&gt;TINYINT&lt;/code&gt;.
It uses one byte.&lt;/li&gt;
&lt;li&gt;Clever hacks exist to exploit nullability (&lt;code&gt;CHAR(0) NULL&lt;/code&gt; columns) or bitfields to store data more densely.
These usually backfire later in the software development lifecycle.
Avoid them.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;integers&#34;&gt;
    &lt;a href=&#34;#integers&#34;&gt;
	Integers
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Always use &lt;code&gt;integer&lt;/code&gt; and &lt;code&gt;bigint&lt;/code&gt;.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;MySQL offers several integer data types smaller than the 4-byte &lt;code&gt;integer&lt;/code&gt; and the 8-byte &lt;code&gt;bigint&lt;/code&gt;.
They have been used in the past, and usually later created an upgrade problem when the data range was exhausted in company growth.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Do not use display widths with integers.&lt;/strong&gt; Use &lt;code&gt;int&lt;/code&gt;, not &lt;code&gt;int(11)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fractional-numbers-and-monetary-values&#34;&gt;
    &lt;a href=&#34;#fractional-numbers-and-monetary-values&#34;&gt;
	Fractional numbers and monetary values
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Always choose &lt;code&gt;double&lt;/code&gt;. Never use &lt;code&gt;float&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FLOAT&lt;/code&gt; is a 32 bit floating point number, and the range and precision is usually too small to be useful.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the past some projects have stored pricing information as &lt;code&gt;double&lt;/code&gt;.
This comes with its own set of problems.
Consider using an appropriately sized &lt;code&gt;DECIMAL(16,4)&lt;/code&gt; variant, but be aware what the systems you depend on and the systems depending on you use.
Compatibility may be better than correctness.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For euro-values, use a column name suffix &amp;ldquo;_eur&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;char-varchar-and-the-various-text-types&#34;&gt;
    &lt;a href=&#34;#char-varchar-and-the-various-text-types&#34;&gt;
	CHAR, VARCHAR and the various TEXT types
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Avoid &lt;code&gt;CHAR&lt;/code&gt;, prefer &lt;code&gt;VARCHAR&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In very old versions of MySQL the &lt;code&gt;CHAR&lt;/code&gt; type had certain speed advantages.
None of these are true any more for modern MySQL using InnoDB.
Do not use fixed width character types anymore.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Consider row width, and slightly prefer &lt;code&gt;VARCHAR&lt;/code&gt; over &lt;code&gt;TEXT&lt;/code&gt; types.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VARCHAR&lt;/code&gt; are stored inline and contribute to row width, &lt;code&gt;TEXT&lt;/code&gt; types are stored like BLOBs and are stored in a complicated way that can have a lot of overhead.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;VARCHAR&lt;/code&gt; for string-like texts.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;TEXT&lt;/code&gt; where you actually store small &amp;lsquo;files&amp;rsquo; in the database.
If you do that, see below the notes on &lt;code&gt;BLOB&lt;/code&gt; data.
They also apply here.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Use the default &lt;code&gt;utf8mb4&lt;/code&gt; charset, it is the utf-8 you want.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VARCHAR&lt;/code&gt; and the various &lt;code&gt;TEXT&lt;/code&gt; fields have a character set associated to them.
Always use &lt;code&gt;utf8mb4&lt;/code&gt; as the character set (it should be the default, but check).
Read up on &lt;a href=&#34;https://blog.koehntopp.info/2022/01/12/utf8mb4.html&#34;&gt;Why utf8mb4?&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Avoid &lt;code&gt;ENUM&lt;/code&gt;, use lookup tables.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL offers an &lt;code&gt;ENUM&lt;/code&gt; data type, and we have used this a lot in the past.
We found that removing values from an &lt;code&gt;ENUM&lt;/code&gt; is a very costly table change.
We recommend you use a lookup table.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2020/09/18/mysql-encoding-fields-for-great-profit.html&#34;&gt;Encoding columns for great profit&lt;/a&gt;

 explains how converting string columns with low cardinality can pay off in shrinking the data size.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;blobs-and-files-in-the-database&#34;&gt;
    &lt;a href=&#34;#blobs-and-files-in-the-database&#34;&gt;
	BLOBs and files in the database
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Databases are not good file systems.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When reading values from disk, they pass on through the file system, the database server, are being converted into the column field data type the server uses internally, pushed again into the kernel into the network layer and then finally sent.
This involves making around three copies of the data, whereas using &lt;code&gt;sendfile()&lt;/code&gt; or &lt;code&gt;splice()&lt;/code&gt; to send a static file from the filesystem is zero copy.
Consider not using the database to store files.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;max_allowed_packet is an absolute limit.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All data MySQL handles must be smaller than the config value &lt;code&gt;max_allowed_packet&lt;/code&gt;, even if the field size allows for more.
In our systems that limit is 16 MB.&lt;/li&gt;
&lt;li&gt;There are ways around that, using string manipulation of very large strings.
This eats an insane amount of memory.
If you find yourself going down that route, stop and reconsider your design or life choices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;In MySQL 8, handling &lt;code&gt;TEXT&lt;/code&gt; and &lt;code&gt;BLOB&lt;/code&gt; is less costly, but still worthwhile checking.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the past, any result set that contained &lt;code&gt;TEXT&lt;/code&gt; or &lt;code&gt;BLOB&lt;/code&gt; types, no matter how small, forced sort operations to spill to disk, making them slow.
This is no longer the case for the most recent versions of MySQL 8, but it is still useful in many cases to consider a two-step approach:
&lt;ul&gt;
&lt;li&gt;Step 1: Run a query to select the primary key values you need in the order you need them.&lt;/li&gt;
&lt;li&gt;Step 2: Run a second query of the form &lt;code&gt;SELECT id, blobcolumn FROM table WHERE id IN (...)&lt;/code&gt;, with the &lt;code&gt;...&lt;/code&gt; containing a list of up to 1000 literal id values as constants to fetch the blob data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Using &lt;code&gt;BLOB&lt;/code&gt; and &lt;code&gt;TEXT&lt;/code&gt; fields larger than 1 MB can saturate the network using replication and uses a lot of disk space.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL is using row-based replication, and for each row changed will store a pre-image and post-image of the row on disk, for replication.
This is kept for up to seven days, to enable lagging replicas to catch up.&lt;/li&gt;
&lt;li&gt;Each replica is then downloading this information, so for each changed 1MB field, 2 MB are copied to each instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;date-and-time-values&#34;&gt;
    &lt;a href=&#34;#date-and-time-values&#34;&gt;
	DATE and TIME values
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Be aware of MySQLs awful date and time history.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;The date and time types in MySQL have an awful history because of a number of very bad design decisions in the past.
Most of that is cleaned up by now, but we still see legacy problems in some places because of old data or old code.
What are the reasons for the bad things:
&lt;ul&gt;
&lt;li&gt;MySQL allowed partial dates, &amp;lsquo;2022-01-00&amp;rsquo; for &amp;ldquo;I do not know the day&amp;rdquo;, or &amp;lsquo;2022-00-00&amp;rsquo; for &amp;ldquo;I have no idea about month and day&amp;rdquo;.
They are no longer allowed (&lt;code&gt;NO_ZERO_IN_DATE&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;MySQL allowed zero dates (&amp;lsquo;0000-00-00&amp;rsquo;), and conflated them with the &lt;code&gt;NULL&lt;/code&gt; value.
This is no longer allowed (&lt;code&gt;NO_ZERO_DATES&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;MySQL had a magic type &lt;code&gt;TIMESTAMP&lt;/code&gt; that in a magic position behaved magically.
Specifically, the leftmost &lt;code&gt;TIMESTAMP&lt;/code&gt; column was automatically set to &lt;code&gt;NOW()&lt;/code&gt; when it was not explicitly set to a value, but other columns of a row were changed.
This was used to implement &lt;code&gt;changed_at&lt;/code&gt; columns.
Today, you can apply this to any &lt;code&gt;DATETIME&lt;/code&gt; or &lt;code&gt;TIMESTAMP&lt;/code&gt; in any position, using an explicit &lt;code&gt;ON UPDATE CURRENT_TIMESTAMP&lt;/code&gt; clause.
There are lots of special rules and exceptions that document past behavior and an attempt at compatibility and migration. &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/timestamp-initialization.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The manual on the state of things&lt;/a&gt;

.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MySQL &lt;code&gt;DATE&lt;/code&gt;, &lt;code&gt;TIME&lt;/code&gt; and &lt;code&gt;DATETIME&lt;/code&gt; types do not deal with timezones.&lt;code&gt;TIMESTAMP&lt;/code&gt; does.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;But only if the timezone tables in the mysql.* schema are initialized.&lt;/li&gt;
&lt;li&gt;The current timezone you are in is defined as a default for the server, and can be overridden as a connection property.
It is likely not a good idea to do that.&lt;/li&gt;
&lt;li&gt;You can shoot yourself in the foot with timezones, DST boundaries and interval arithmetic. &lt;a href=&#34;https://blog.koehntopp.info/2021/04/02/making-an-unexpected-leap-with-interval-syntax.html&#34;&gt;How that happens&lt;/a&gt;

.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prefer &lt;code&gt;DATETIME&lt;/code&gt;, not &lt;code&gt;TIMESTAMP&lt;/code&gt;, unless it&amp;rsquo;s &lt;code&gt;changed_at&lt;/code&gt;.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;The range of &lt;code&gt;TIMESTAMP&lt;/code&gt; is limited and has a year 2038 problem.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATETIME, TIME and TIMESTAMP can have microsecond resolution if desired.&lt;/strong&gt; In MySQL, &lt;code&gt;DATETIME&lt;/code&gt;, &lt;code&gt;TIME&lt;/code&gt;, &lt;code&gt;TIMESTAMP&lt;/code&gt; can have fractional resolutions up to microsecond resolution. To get that, specify a precision such as &lt;code&gt;DATETIME(6)&lt;/code&gt;, &lt;code&gt;TIME(6)&lt;/code&gt; or &lt;code&gt;TIMESTAMP(6)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use minimum and maximum values as boundaries in time ranges.&lt;/strong&gt; If you define time ranges, use field names such as &lt;code&gt;valid_from&lt;/code&gt; and &lt;code&gt;valid_until&lt;/code&gt;. If you are using &lt;code&gt;DATETIME&lt;/code&gt; types for that, use &lt;code&gt;1000-01-01 00:00:00&lt;/code&gt; for &amp;ldquo;minus infinity&amp;rdquo; and &lt;code&gt;9999-12-31 23:59:59&lt;/code&gt; for &amp;ldquo;plus infinity&amp;rdquo;, as these are the minimum and maximum values for this type. Do not use &lt;code&gt;NULL&lt;/code&gt; values, as they will not compare.&lt;/li&gt;
&lt;li&gt;Be aware that the SQL &lt;code&gt;BETWEEN&lt;/code&gt; operator is a closed interval (&lt;code&gt;WHERE id BETWEEN 4 and 7&lt;/code&gt; will return 4, 5, 6 and 7), and you often want half-open interval (&lt;code&gt;WHERE now() &amp;gt;= valid_from AND now() &amp;lt; valid_until&lt;/code&gt;). &lt;strong&gt;Avoid using BETWEEN to avoid ambiguity of the nature of the interval and assumptions on the code readers side.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;json-data-type&#34;&gt;
    &lt;a href=&#34;#json-data-type&#34;&gt;
	JSON data type
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;MySQL 8 provides JSON functions.
They are a bit clunky, but work very well.
When using JSON functions, also learn about generated columns and virtual indexes.
This is new functionality in MySQL 8, and that means it is less tested than other code.
&lt;a href=&#34;https://blog.koehntopp.info/2020/09/04/mysql-json-data-type.html&#34;&gt;JSON basics&lt;/a&gt;

, &lt;a href=&#34;https://blog.koehntopp.info/2020/09/07/mysql-generated-columns-and-virtual-indexes.html&#34;&gt;Generated columns and virtual indexes&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JSON&lt;/code&gt; in MySQL always uses the &lt;code&gt;utf8&lt;/code&gt; character set.
This is a bug, it should be using &lt;code&gt;utf8mb4&lt;/code&gt;, but currently not fixed.
The effect is that Emoji and other letters with 4-byte UTF-8 encodings cannot be used there.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;common-column-types-that-applications-use&#34;&gt;
    &lt;a href=&#34;#common-column-types-that-applications-use&#34;&gt;
	Common column types that applications use
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;email&lt;/strong&gt; varchar(255) character set utf8mb4&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;phone&lt;/strong&gt; bigint unsigned (E.164 format)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ip_address&lt;/strong&gt;  varbinary(16), because IPv6 is a thing. Check out &lt;code&gt;INET6_ATON()&lt;/code&gt; and virtual indexes on generated columns as a convenience. &lt;code&gt;SELECT ... FROM t WHERE request_ip = INET6_ATON(&amp;quot;141.255.161.178&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;base64&lt;/strong&gt;, blob, mediumblob, for &lt;strong&gt;JSON&lt;/strong&gt; there is a special new JSON type.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;language&lt;/strong&gt; char(2) for &lt;a href=&#34;https://www.iso.org/iso-639-language-codes.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ISO-639-1&lt;/a&gt;

 codes, named &lt;code&gt;lang&lt;/code&gt;, &lt;code&gt;language_code&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;country&lt;/strong&gt; char(2) for &lt;a href=&#34;https://www.iso.org/iso-3166-country-codes.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ISO-3166&lt;/a&gt;

 alpha-2 country codes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IBAN&lt;/strong&gt; varchar(34)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;foreign-key-constraints&#34;&gt;
    &lt;a href=&#34;#foreign-key-constraints&#34;&gt;
	Foreign Key Constraints
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Avoid foreign key constraints, unless you are in a department that specifically requires you use them.&lt;/strong&gt;
MySQL allows you to define foreign key constraints.
They come at a price:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Foreign key constraints can only refer to columns in the same database instance, but our schemas have more data than fits into a single schema, and often requires you work across database instances using multiple handles.&lt;/li&gt;
&lt;li&gt;Foreign key constraints are always immediate.
That means they are checked at the end of each statement, not at the end of a transaction (&amp;ldquo;deferred&amp;rdquo;), forcing an order to your SQL statements inside a transaction.
This is often inconvenient.&lt;/li&gt;
&lt;li&gt;Foreign key constraints require additional lookups and additional locks.
This can lead to lock escalation and a higher deadlock rate, impacting throughput.&lt;/li&gt;
&lt;li&gt;With foreign key constraints it is possible to create undeletable and unupdatable rows.&lt;/li&gt;
&lt;li&gt;Foreign Key Constraints with &lt;code&gt;ON UPDATE&lt;/code&gt; and &lt;code&gt;ON DELETE&lt;/code&gt; clauses can cause spooky action at a distance, and can also cause large bulk deletes and updates that will break replication.&lt;/li&gt;
&lt;li&gt;Foreign Key Constraints break all tooling we have for Online Schema Change and for automated database splits.
Table changes become extremely toil for everyone involved.&lt;/li&gt;
&lt;li&gt;Foreign Key Constraints break Group Replication, which we depend on.&lt;/li&gt;
&lt;li&gt;Because of that we recommend you do not use foreign key constraints.
They usually provide a lot of toil and little benefit.&lt;/li&gt;
&lt;li&gt;Exceptions exist. Check your departments engineering guides.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.koehntopp.info/2020/08/03/mysql-foreign-keys-and-foreign-key-constraints.html&#34;&gt;What are Foreign Keys, and Foreign Key Constraints&lt;/a&gt;

, &lt;a href=&#34;https://blog.koehntopp.info/2020/08/03/mysql-foreign-keys-and-foreign-key-constraints.html&#34;&gt;Foreign Key Constraints and Locking&lt;/a&gt;

.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;transactions&#34;&gt;
    &lt;a href=&#34;#transactions&#34;&gt;
	Transactions
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Keep transaction runtime short.&lt;/strong&gt; Long-running transactions will build a large Undo log and slow down the database for everyone.
A transaction taking fractions of a second is fast, a transaction being kept open for minutes or even hours is not. &lt;a href=&#34;https://blog.koehntopp.info/2019/11/18/a-blast-from-the-past.html&#34;&gt;The effect of long-running transactions on performance&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Keep transaction size in the range of 1000 to 10000 rows for batch loading.&lt;/strong&gt;
Larger transactions are incompatible with group replication, and also will not provide speedup.
Smaller transactions cause excessive sync to disk, and are not fast. &lt;a href=&#34;https://blog.koehntopp.info/2020/07/27/mysql-commit-size-and-speed.html&#34;&gt;Commit size and write speed&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use the default transaction isolation level REPEATABLE READ.&lt;/strong&gt;
There were use-cases for READ COMMITTED in the past, but with &lt;a href=&#34;https://dev.mysql.com/blog-archive/mysql-8-0-1-using-skip-locked-and-nowait-to-handle-hot-rows/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;SELECT ... SKIP LOCKED&lt;/code&gt;&lt;/a&gt;

 in MySQL 8 and row based replication, most of these are gone. &lt;a href=&#34;https://blog.koehntopp.info/2020/07/29/mysql-transactions-the-logical-view.html&#34;&gt;What are isolation levels?&lt;/a&gt;

,  &lt;a href=&#34;https://blog.koehntopp.info/2020/07/30/mysql-transactions---writing-data.html&#34;&gt;Proper counters with locking&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;To start a transaction, MySQL offers several semi-equivalent syntax variants: &lt;code&gt;BEGIN&lt;/code&gt;, &lt;code&gt;BEGIN WORK&lt;/code&gt; and &lt;code&gt;START TRANSACTION READ WRITE&lt;/code&gt;. Check what your ORM is using.
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Only &lt;code&gt;START TRANSACTION READ WRITE&lt;/code&gt; should be used.&lt;/strong&gt; It is the only syntax that signals write-intent or read-intent (&lt;code&gt;START TRANSACTION READ ONLY&lt;/code&gt;) in the opening statement, and hence the only statement that load balances properly in ProxySQL.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ProxySQL will have to assume write-intent in all cases if &lt;code&gt;BEGIN&lt;/code&gt; or &lt;code&gt;BEGIN WORK&lt;/code&gt; are being used. This will run even read-only transactions on the primary, and scale badly, unless two application database handles are being used.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;idempotent-queries&#34;&gt;
    &lt;a href=&#34;#idempotent-queries&#34;&gt;
	Idempotent Queries
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Databases have transactions.
It is not strictly necessary to formulate queries as replayable (idempotent).
Things that are being wrapped in a transaction will all either execute together or not at all, and once the commit returns successfully the data is guaranteed to be persisted.&lt;/p&gt;
&lt;p&gt;That said, &lt;strong&gt;it is useful to use replayable forms of write-queries because they are more resilient&lt;/strong&gt; and make certain recovery operations easier.&lt;/p&gt;
&lt;h3 id=&#34;read-modify-write-counters-and-select--for-update&#34;&gt;
    &lt;a href=&#34;#read-modify-write-counters-and-select--for-update&#34;&gt;
	Read-Modify-Write, Counters and &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt;
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A common scenario in transactional databases is making a change to an existing record, for example updating a description, incrementing a counter or changing the state of a work item in a state machine.&lt;/p&gt;
&lt;p&gt;You can think of that as &amp;ldquo;taking a value temporarily out of the table&amp;rdquo; (like lending a book from a library) by locking it, making the change in the application, and then putting it back by running the actual update.&lt;/p&gt;
&lt;p&gt;The correct way to do this is to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;start a transaction using &lt;code&gt;START TRANSACTION READ WRITE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;read the value to be modified by using &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt;, in order to not only select the row in question, but also pre-lock it the way a later write would. &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; is a read statement, but applies X-locks like an &lt;code&gt;UPDATE&lt;/code&gt;. This is &amp;ldquo;taking the value temporarily out of the table&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;You can now make changes to the record in application memory.&lt;/li&gt;
&lt;li&gt;Then run &lt;code&gt;UPDATE ... SET ...&lt;/code&gt; to write the change back.&lt;/li&gt;
&lt;li&gt;On &lt;code&gt;COMMIT&lt;/code&gt; the change will be persisted and the lock will be dropped.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is called a read-modify-write (RMW) transaction, and is the correct way to achieve such multi-statement changes atomically.
You need to find out how your ORM creates RMW transactions.&lt;/p&gt;
&lt;p&gt;Some notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is discussed at length in &lt;a href=&#34;https://blog.koehntopp.info/2020/07/30/mysql-transactions---writing-data.html&#34;&gt;MySQL Transactions (Read-Modify-Write)&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;Make sure &lt;code&gt;START TRANSACTION&lt;/code&gt; syntax is being used, not &lt;code&gt;BEGIN&lt;/code&gt; syntax.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COMMIT&lt;/code&gt; can fail, you must check success and be prepared to re-run the entire transaction.&lt;/li&gt;
&lt;li&gt;A transaction must not extend across a user interaction. You must not &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; and then wait for user input. A transaction must be finished in fractions of a second.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;optimistic-locking&#34;&gt;
    &lt;a href=&#34;#optimistic-locking&#34;&gt;
	Optimistic locking
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;To ensure record identity across user interaction, optimistic locking is commonly used.&lt;/strong&gt; The problem to solve is: We load a record into the application memory and then let the user perform changes. We need to write the changes back, but the record may have been simultaneously changed by a second connection.&lt;/p&gt;
&lt;p&gt;We cannot take an X-lock on the record and keep record ownership for a long time across a user interaction, because that will destroy performance in many ways (Imagine a user opening the edit screen and then going on vacation or even just a lunch break).&lt;/p&gt;
&lt;p&gt;There are two common ways to solve this, which are collectively called &amp;ldquo;optimistic locking&amp;rdquo;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You write back the change in an update where you guard the &lt;code&gt;UPDATE&lt;/code&gt; with the full set of old column values in the update: &lt;code&gt;UPDATE t SET col1=new_value1, col2=new_value2, ... WHERE col1=old_value1, col2=old_value2, ...&lt;/code&gt;. The update will fail and not change any row, if any old value has changed since we loaded the original row into the editor presented to the user. It is then possible to present the change to the user and let them resolve the conflict.&lt;/li&gt;
&lt;li&gt;Similarly, we can have version numbers in each row, and guard the update with the version number. &lt;code&gt;UPDATE t SET col1=changed_value, version=old_version+1 WHERE id=pk_value AND version=old_version&lt;/code&gt;. The update can happen on the combination of &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt;, and will fail if the version changed while we were waiting for user input.
&lt;ul&gt;
&lt;li&gt;It is important for the version number to be &lt;strong&gt;not&lt;/strong&gt; part of the primary key, because otherwise we get versioned entries in our data table. This is usually not a desirable trait in transactional systems (see &lt;em&gt;Tombstones&lt;/em&gt; elsewhere).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;job-queues-and-skip-locked&#34;&gt;
    &lt;a href=&#34;#job-queues-and-skip-locked&#34;&gt;
	Job Queues (and SKIP LOCKED)
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;MySQL is not actually a queueing system. &lt;strong&gt;Talk to Kafka about queues and do not use MySQL as one.&lt;/strong&gt; Using MySQL as a queue will deliver &amp;ldquo;exactly once delivery&amp;rdquo; of jobs, at the cost of at least one disk write per enqueue and dequeue, which translates into fantastic monetary values in a cloud environment by the way of very high IOPS values.&lt;/p&gt;
&lt;p&gt;MySQL has been used as a queue &lt;a href=&#34;https://blog.koehntopp.info/2021/01/28/database-as-a-queue.html&#34;&gt;in some scenarios on bare metal&lt;/a&gt;

, because it is so obvious and convenient. Looking at the cloud, avoid that and use a proper queue service for your problem.&lt;/p&gt;
&lt;p&gt;If you must use MySQL as a queue, at least &lt;a href=&#34;https://blog.koehntopp.info/2021/07/13/mysql-a-job-queue-in-python.html&#34;&gt;do it right&lt;/a&gt;

, and lock properly using &lt;code&gt;SKIP LOCKED&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For writing to MySQL and Kafka, consider the Outbox pattern (&lt;a href=&#34;https://developers.redhat.com/articles/2021/09/01/outbox-pattern-apache-kafka-and-debezium&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Outbox pattern&lt;/a&gt;

) and talk to the Kafka team.&lt;/p&gt;
&lt;h2 id=&#34;sorting&#34;&gt;
    &lt;a href=&#34;#sorting&#34;&gt;
	Sorting
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Database servers are often more expensive and centralized machines compared to their clients, and harder to scale. We have found that is it useful to &lt;strong&gt;sort in the client where it makes sense&lt;/strong&gt; instead of using &lt;code&gt;ORDER BY&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;subqueries&#34;&gt;
    &lt;a href=&#34;#subqueries&#34;&gt;
	Subqueries
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prefer &lt;code&gt;JOIN&lt;/code&gt; over subqueries.&lt;/strong&gt; MySQL 8 is better at optimizing subqueries than older versions of MySQL, but it is usually still safer to write a &lt;code&gt;JOIN&lt;/code&gt; than to use the equivalent subquery syntax. If you come from Red Oracle, you have learned things to be the other way around and need to adjust.&lt;/li&gt;
&lt;li&gt;This is especially true for subqueries with negations (&lt;code&gt;WHERE NOT EXIST&lt;/code&gt;) to find missing values. Use a &lt;code&gt;LEFT JOIN&lt;/code&gt; with &lt;code&gt;IS NULL&lt;/code&gt; on a right-hand side value to achieve the same result much faster.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tombstones-is_deleted-flags&#34;&gt;
    &lt;a href=&#34;#tombstones-is_deleted-flags&#34;&gt;
	Tombstones (&lt;code&gt;is_deleted&lt;/code&gt; flags)
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Avoid Tombstones.&lt;/strong&gt; Tombstones are a per-row flag that marks a row as deleted. All queries to the table need their &lt;code&gt;WHERE&lt;/code&gt;-clause to be amended by a &lt;code&gt;AND is_deleted = 0&lt;/code&gt; term or similar to find only non-deleted rows. Tombstones are usually not a good idea.
&lt;ul&gt;
&lt;li&gt;The old data will increase the size of the active transactional table. This will increase the working set of the database, and require a larger instance.&lt;/li&gt;
&lt;li&gt;The tombstone flag needs to be indexed, or even become part of the primary key, in order to eliminate dead rows quickly.&lt;/li&gt;
&lt;li&gt;The MTTR of the system after failure is higher because the database is larger, being bloated with dead data.&lt;/li&gt;
&lt;li&gt;Actually physically deleting the tombstone data is a cumbersome process when done in large batches.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It is usually preferable to build transactional systems that are small and contain only life data in transactional tables.&lt;/strong&gt; Log data with temporary structure should at least go to other tables with log nature, or even to different machines that are handling the archival log and are not part of the critical, transactional production scope.
&lt;ul&gt;
&lt;li&gt;You can write records to the transactional table. When they retire, instead of deleting, move them to a log table.&lt;/li&gt;
&lt;li&gt;You can double write records on creation to the transactional table and the log table, then mirror the entire lifecycle on both tables.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Typical scenarios where Tombstones are deadly:&lt;/strong&gt; A queue-like structure in a table (&amp;ldquo;Picklists&amp;rdquo;, &amp;ldquo;Producer/Consumer Scenarios&amp;rdquo;, &amp;ldquo;State machines in a table&amp;rdquo;)
&lt;ul&gt;
&lt;li&gt;It is sometimes okay to keep old inventory records around in a lookup table if there is a chance that items elsewhere still refer to the deactivated inventory.&lt;/li&gt;
&lt;li&gt;In general, it is often useful in transactional systems to keep the working set aggressively small, and then keep non-critical data in other tables in the same system, or even in dedicated non-transactional systems. How little data do I need in order to be able to take their money successfully?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;partitions&#34;&gt;
    &lt;a href=&#34;#partitions&#34;&gt;
	Partitions
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Partitions are a way to split a large table internally into a number of small tables, while still presenting the interface of a single table to the user.
&lt;strong&gt;They may be useful for tables &amp;gt; 30 GB in size, a quarter of an instance&amp;rsquo;s memory size.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Partitioning always works on the primary key, or the prefix of a compound (multi-column) primary key.
Internally, MySQL uses (a part of) the primary key to decide into which internal table (partition) to put the row.
The optimizer may use this to reduce the number of partitions to search when running queries.&lt;/p&gt;
&lt;p&gt;Also, instead of deleting many rows individually, it may be possible to speed up some deletions by running an &lt;code&gt;ALTER TABLE ... DROP PARTITION ...&lt;/code&gt; to quickly remove data.
On the other hand, running DDL queries in the normal application workflow likely is going to need a compliance exception.&lt;/p&gt;
&lt;p&gt;Partitions can work on a &lt;code&gt;RANGE&lt;/code&gt; or &lt;code&gt;LIST&lt;/code&gt; of column values, or on a hash function (&lt;code&gt;KEY&lt;/code&gt; uses a system-supplied hash, &lt;code&gt;HASH&lt;/code&gt; uses a user-supplied function).
&lt;code&gt;RANGE&lt;/code&gt; and &lt;code&gt;LIST&lt;/code&gt; can speed up queries by enabling the optimizer to eliminate partitions before access. &lt;code&gt;HASH&lt;/code&gt; and &lt;code&gt;KEY&lt;/code&gt; &amp;ldquo;spray&amp;rdquo; data across many partitions, and can make insertion faster and more even.&lt;/p&gt;
&lt;p&gt;Talk to a DBA about planning proper partitioning, taking your workload and access pattern into account.&lt;/p&gt;
&lt;h2 id=&#34;using-mysql-in-a-replication-environment&#34;&gt;
    &lt;a href=&#34;#using-mysql-in-a-replication-environment&#34;&gt;
	Using MySQL in a replication environment
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Our MySQL is always &lt;a href=&#34;https://blog.koehntopp.info/2021/03/24/a-lot-of-mysql.html&#34;&gt;in a treelike replication structure&lt;/a&gt;

 to place read copies of the data close to the application. This provides low latency data access.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Writes always go to the root of the replication tree, the current primary.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Your application has access to segregated read and write handles for database access.
&lt;strong&gt;Make sure you are using the proper handle.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Replication speed is mostly a function of workload.&lt;/strong&gt; DBAs can keep replication running, but they cannot really make a server replicate faster.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use replication-aware bulk functions.&lt;/strong&gt; Your database access library has functions to prevent overloading a replication hierarchy. Use them, and when they don&amp;rsquo;t work - &amp;ldquo;&lt;strong&gt;don’t get creative, get help&lt;/strong&gt;.&amp;rdquo;
&lt;ul&gt;
&lt;li&gt;DBAs can indeed speed up replication by changing the server configuration to a mode where disk writes are not properly persisted. By writing to disk less the server can replicate faster, at the cost of losing data should there be a fail-over situation while this configuration is active. This is known as &amp;ldquo;YOLO&amp;rdquo;-Mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Our MySQL topology is managed by a program called &lt;a href=&#34;https://www.percona.com/blog/2016/03/08/orchestrator-mysql-replication-topology-manager/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Orchestrator&lt;/a&gt;

.
Orchestrator takes care of Primaries and Intermediate Servers failing, rearranging the surviving members into a valid replication tree.
It also informs our server discovery mechanisms of the change.
This means:
&lt;ul&gt;
&lt;li&gt;Your application cannot rely on write- and read-handles pointing to static machines, when DNS is used.
&lt;strong&gt;You must re-resolve hostnames immediately before reconnecting.&lt;/strong&gt;
You must make sure that your code does not internally cache DNS query results (Java!).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;debugging-performance-problems&#34;&gt;
    &lt;a href=&#34;#debugging-performance-problems&#34;&gt;
	Debugging performance problems
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;high-cpu&#34;&gt;
    &lt;a href=&#34;#high-cpu&#34;&gt;
	High CPU?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;MySQL typically does not use much CPU.
Servers with high CPU usage are having one of three problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Queries not using indexes, scanning a table completely, in memory.
&lt;ul&gt;
&lt;li&gt;Identify the query not using indexes and fix the schema or the query (see below).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Excessive sorting in the server.
&lt;ul&gt;
&lt;li&gt;If possible, access the data in index order, or do the sorting in the client where it scales better.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code in the database is being run (i.e. somebody has been using stored procedures, stored functions or similar)
&lt;ul&gt;
&lt;li&gt;Destroy the codebase and start over from scratch.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;finding-problematic-queries-using-vividcortex&#34;&gt;
    &lt;a href=&#34;#finding-problematic-queries-using-vividcortex&#34;&gt;
	Finding problematic queries using Vividcortex
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;On many replication hierarchies we have probes running that log query data into &amp;ldquo;Solarwinds DPM&amp;rdquo; (previously known as VividCortex).
If you do not have access or your replication hierarchy has no probes, contact DBA.&lt;/p&gt;
&lt;h2 id=&#34;finding-problematic-queries-using-sys&#34;&gt;
    &lt;a href=&#34;#finding-problematic-queries-using-sys&#34;&gt;
	Finding problematic queries using &lt;code&gt;sys.*&lt;/code&gt;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;All database servers by default have installed a series of views in &lt;code&gt;sys.*&lt;/code&gt;.
These read data from &lt;code&gt;performance_schema.*&lt;/code&gt; (P_S for short), which is partially enabled on all machines.&lt;/p&gt;
&lt;p&gt;P_S is documented in &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/performance-schema.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://dev.mysql.com/doc/refman/8.0/en/performance-schema.html&lt;/a&gt;

.
It is optimized for logging performance data without impacting performance much.
It is not optimized for access by humans.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;sys.*&lt;/code&gt; (sys for short) is fixing that, presenting a number of useful views on P_S, for human consumption and reporting.
sys is documented in &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/sys-schema.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://dev.mysql.com/doc/refman/8.0/en/sys-schema.html&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;All views in sys exist in two variants: the regular variant for humans (&lt;code&gt;sys.host_summary_by_file_io&lt;/code&gt;) and the &lt;code&gt;x$&lt;/code&gt; variant presenting unabridged data at full resolution for reporting (&lt;code&gt;sys.x$host_summary_by_file_io&lt;/code&gt;).
Numbers in the regular variant are shortened and suffixed with units (&amp;ldquo;15m&amp;rdquo;, &amp;ldquo;100k&amp;rdquo;) or transformed into human time scales (runtime &lt;code&gt;01:02:03&lt;/code&gt;). Numbers in &lt;code&gt;x$&lt;/code&gt; views are presented raw.
It is useful to work interactively with the regular variants and the run the final report on the &lt;code&gt;x$&lt;/code&gt; variant for full data.&lt;/p&gt;
&lt;p&gt;Note that meaningful performance data can be gathered only on production instances, but you can craft performance insight queries on test instances easily.
You will then need to run these on production instances to actually get production performance data.&lt;/p&gt;
&lt;h2 id=&#34;missing-indexes&#34;&gt;
    &lt;a href=&#34;#missing-indexes&#34;&gt;
	Missing indexes
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The most common cause for slow query execution is &amp;ldquo;missing indexes&amp;rdquo;.
Once you have identified queries with slow execution time using Solarwinds DPM or sys, run the &lt;code&gt;explain&lt;/code&gt; command on them to see their execution plan.
Refer to &lt;a href=&#34;https://www.slideshare.net/isotopp/explaining-explain&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Explaining EXPLAIN: Queries and what happens when you execute them&lt;/a&gt;

 (&lt;a href=&#34;https://www.slideshare.net/isotopp/explain-explain-no-presenter-notes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;version without presenter nodes&lt;/a&gt;

) to better understand what goes on.&lt;/p&gt;
&lt;p&gt;Most commonly, one of these things needs fixing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add missing indexes&lt;/li&gt;
&lt;li&gt;formulate a query with dependent subqueries to use some kind of join&lt;/li&gt;
&lt;li&gt;formulate a query with multiple range clauses in a way that resolves in multiple steps&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DBA can help you with this problem.&lt;/p&gt;
&lt;h2 id=&#34;mismatching-types&#34;&gt;
    &lt;a href=&#34;#mismatching-types&#34;&gt;
	Mismatching types
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;A longstanding problem in MySQL was a type mismatch in a join.
If you have a query with a &lt;code&gt;a JOIN b ON a.col1 = b.col1&lt;/code&gt;, and the instances of &lt;code&gt;col1&lt;/code&gt; in the two tables have incompatible (different, and not coercible) types, an index cannot be used to resolve the query, even if it exists.
That is, if &lt;code&gt;col1&lt;/code&gt; is a &lt;code&gt;varchar&lt;/code&gt; in &lt;code&gt;a&lt;/code&gt;, but an &lt;code&gt;int&lt;/code&gt; in &lt;code&gt;b&lt;/code&gt;, the join will be slow.&lt;/p&gt;
&lt;p&gt;The problem can also often be provoked in a &lt;code&gt;WHERE&lt;/code&gt; clause such as &lt;code&gt;WHERE a.col1 = &amp;quot;value&amp;quot;&lt;/code&gt;, with &lt;code&gt;a.col1&lt;/code&gt;
being integer, and &lt;code&gt;&amp;quot;value&amp;quot;&lt;/code&gt; written as a string literal due to the quotes.
Again, an index, even if it exists, won&amp;rsquo;t be used.&lt;/p&gt;
&lt;h2 id=&#34;bad-paging&#34;&gt;
    &lt;a href=&#34;#bad-paging&#34;&gt;
	Bad Paging
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;(based on an idea from Yves Orton)&lt;/p&gt;
&lt;p&gt;The query &lt;code&gt;SELECT id FROM Whatever LIMIT 10360000,10000&lt;/code&gt; is an example of paging, where a user or a script want to read a large, full result set in chunks of 10k.&lt;/p&gt;
&lt;p&gt;This is not an efficient practice, as the database has to execute the same query over and over.
It may be able to apply some mild optimizations for low limit values (at the start of the paging), but eventually it will have to reproduce large parts of the full table, handing out fragments of 10k rows.
On top of that, MySQL represents result sets internally in a linked list, so &lt;code&gt;LIMIT&lt;/code&gt; clauses with large offset values are very inefficient.&lt;/p&gt;
&lt;p&gt;We could instead fetch one row more, while reading in table native order.
This will get of the offset part in the &lt;code&gt;LIMIT&lt;/code&gt; clause.
It will not have to physically sort, as the table is read in native primary key order.
And it will only access actual 10k fragments of the table.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Whatever&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;limit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10001&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We output 10k values, and take the final value as a new starting point &lt;code&gt;lastid&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Whatever&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lastid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;limit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10001&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and so on.&lt;/p&gt;
&lt;h1 id=&#34;specific-host-languages&#34;&gt;
    &lt;a href=&#34;#specific-host-languages&#34;&gt;
	Specific Host languages
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;python&#34;&gt;
    &lt;a href=&#34;#python&#34;&gt;
	Python
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;As a developer using Python, I want to be able to hand a &lt;code&gt;list&lt;/code&gt; to SQL with a &lt;code&gt;WHERE id IN (…)&lt;/code&gt; clause, and it should do the right thing.
This can be done by using a prepared statement like &lt;code&gt;SELECT .... WHERE `foo` IN %s ...&lt;/code&gt; and passing in a &lt;code&gt;list&lt;/code&gt; or a &lt;code&gt;tuple&lt;/code&gt;
for the placeholder variable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full discussion in &lt;a href=&#34;https://blog.koehntopp.info/2021/10/28/python-where-in.html&#34;&gt;Python: WHERE &amp;hellip; IN (&amp;hellip;)&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Important caveats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There are no &lt;code&gt;()&lt;/code&gt; in the prepared statement after the &lt;code&gt;IN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Only &lt;code&gt;list&lt;/code&gt; and &lt;code&gt;tuple&lt;/code&gt; will work, no other iterables&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As a developer using Python, I want to be able to trace the SQL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full discussion in &lt;a href=&#34;https://blog.koehntopp.info/2022/03/24/debugging-sql-in-python.html&#34;&gt;Python: Debug SQL&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;support&#34;&gt;
    &lt;a href=&#34;#support&#34;&gt;
	Support
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;host-version-user&#34;&gt;
    &lt;a href=&#34;#host-version-user&#34;&gt;
	Host, Version, User
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The DBA will have a much easier time in helping you, if you have the output of the following query ready when you ask them about your SQL performance problem.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will tell them the actual instance hostname, the precise version string of the database and the username (and by inference, the permissions) you are using to connect.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

