<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development on Die wunderbare Welt von Isotopp</title>
    <link>/tags/development.html</link>
    <description>Recent content in development on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding git</title>
      <link>/2021/10/12/understanding-git.html</link>
      <pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/10/12/understanding-git.html</guid>
      <description>It occurred to me that I do not know nearly enough how git works, internally. The contents of the .git directory seem to be accessible enough, so I am going on a Safari in this blogs git repository. You can follow along if you check out the blog .
Refs   All things git live in .git. The thing we are working with seem to live in .git/refs:
$ find .</description>
    </item>
    
    <item>
      <title>Empty commits and other wrong tools for the job</title>
      <link>/2021/10/06/empty-commits-and-other-wrong-tools-for-the-job.html</link>
      <pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/10/06/empty-commits-and-other-wrong-tools-for-the-job.html</guid>
      <description>This is how you can make an empty commit:
$ git commit --allow-empty -m &amp;quot;Kick it&amp;quot; This has the disadvantage of also generating a commit message. Another way to achieve this seems to be
$ git commit --amend --no-edit &amp;amp;&amp;amp; git push -f but that will make people hate you in other ways.
So lets stop and ask: Why would you want to make an empty commit?
Most people want this because they attached a server-side action to a commit, a CI/CD activity.</description>
    </item>
    
    <item>
      <title>Gitlab in Docker</title>
      <link>/2020/11/22/gitlab-in-docker.html</link>
      <pubDate>Sun, 22 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/11/22/gitlab-in-docker.html</guid>
      <description>These installation notes are mostly a note to myself, documenting the installation process of a Gitlab Omnibus Container in Docker, plus Gitlab Runners.
OS Setup   We are installing into /export/gitlab, a 10G xfs slice from the local flash pool:
# lvcreate -n gitlab -L 10G data # mkfs -t xfs /dev/data/gitlab # mkdir /export/gitlab # mount /dev/data/gitlab /export/gitlab # echo &amp;quot;/dev/data/gitlab\t/export/gitlab\txfs\tbsdgroups,usrquota,grpquota,attr2,nofail,noatime 1 2&amp;quot; &amp;gt;&amp;gt; /etc/fstab # mkdir /export/gitlab/{gitlab,gitlab-runner} # mkdir /export/gitlab/gitlab/{config,data,logs} Docker   We are using docker-compose to run this, with a .</description>
    </item>
    
    <item>
      <title>How I set up my Python</title>
      <link>/2020/06/29/how-i-set-up-my-python.html</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/06/29/how-i-set-up-my-python.html</guid>
      <description>Because Martin wanted some starting point, here is how I set up my Python. There are a lot of other things one can do, but this is supposed to be just a starting point.
For a new project, make a project directory, usually not with a local git repository.
kk:Python kris$ mkdir project kk:Python kris$ cd project kk:project kris$ git init Initialized empty Git repository in /Users/kris/Python/project/.git/ We need a virtual environment to keep our modules apart from the system python.</description>
    </item>
    
    <item>
      <title>Where do the JOINs go?</title>
      <link>/2020/06/10/where-do-the-joins-go.html</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/06/10/where-do-the-joins-go.html</guid>
      <description>I was asking on Twitter:
 Are you a Developer and understand (Micro-) Services? I am a database person and a bit simple, and I have a genuine Question:
When moving to a services architecture, where do the JOINs go?
I gave the following context:
 A simple shop
So you sell stuff, that is, you have an orders table o with an oid, which stores a customer id cid from a customers c table, and an article id aid, from an articles table a and a count cnt.</description>
    </item>
    
    <item>
      <title>Architektur heißt umbauen</title>
      <link>/2012/03/06/architektur-hei-t-umbauen.html</link>
      <pubDate>Tue, 06 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/03/06/architektur-hei-t-umbauen.html</guid>
      <description>Teatro di Marcello , Rom
Das auf dem Bild da ist das Theater des Marcellus, in Rom. Das Foto habe ich Anfang 2006 aufgenommen, als ich dienstlich bei einem Kunden ganz in der Nähe war.
Das Marcellustheater ist nach Marcus Marcellus benannt, einem Neffen von Kaiser Augustus, und wurde so um 13 vor Christus fertig gestellt. Es ist später verfallen, dann im Mittelalter als Festung genutzt worden, im 16. Jahrhundert dann in eine Palastresidenz umgewandelt worden.</description>
    </item>
    
    <item>
      <title>Testing in Production</title>
      <link>/2011/12/02/testing-in-production.html</link>
      <pubDate>Fri, 02 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/02/testing-in-production.html</guid>
      <description>Mitte November ist auf The Testing Planet ein Artikel von Seth Eliot (Microsoft) erschienen mit dem Titel Testing in Production . Eliot schreibt über Software Services, also Dienste, die auf einer Website laufen, sodaß die User keine Anwendungen installieren müssen (Wir erinnern uns: Microsoft ist noch immer ganz groß darin, Software auf physikalischen read-only Medien an Benutzer zu verschicken, auch wenn diese Software seit einer Dekade kaum mehr als ein Loader für Updates über das Internet ist und nach der Installation vom Medium erst einmal alle eben installierten Dateien durch das heruntergeladene Update durch neuere Versionen ersetzt werden).</description>
    </item>
    
    <item>
      <title>Ein paar Gedanken zu Zeitreihendaten</title>
      <link>/2009/10/28/ein-paar-gedanken-zu-zeitreihendaten.html</link>
      <pubDate>Wed, 28 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/10/28/ein-paar-gedanken-zu-zeitreihendaten.html</guid>
      <description>Ich sitze hier auf der Open Source Monitoring Conference und unterhalte mich mit ein paar Nagios bzw. Icinga Entwicklern. Dabei hörte ich einen Haufen Flüche über NDO - Nagios Data Out. Ich schaue mir gerade die Dokumentation zum NDO Schema an und stelle fest, daß die Ideen hier auf eine Weise viele Fehler teilen, die auch dem MySQL Enterprise Manager Schema zugrunde liegen (Noch, das MEM-Team bastelt das grad um).</description>
    </item>
    
    <item>
      <title>Ein paar Gedanken zu Foreign Key Constraints</title>
      <link>/2009/10/20/ein-paar-gedanken-zu-foreign-key-constraints.html</link>
      <pubDate>Tue, 20 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/10/20/ein-paar-gedanken-zu-foreign-key-constraints.html</guid>
      <description>Ich lese gerade SQLite Foreign Key Support und ich muß sagen, ich kann mir ein leichtes Grinsen nicht verkneifen.
Also, ich finds ja gut, daß SQLite die Option für Foreign Key Constraints implementiert und ich finds sogar noch besser, daß mit DEFERRABLE INITIALLY DEFERRED sogar die einzig sinnvolle Weise das zu tun bereitgestellt wird, aber ich frag mich schon, wozu das gut sein soll.
Foreign Keys   Aber von vorne.</description>
    </item>
    
  </channel>
</rss>
